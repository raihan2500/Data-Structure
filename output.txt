"/home/raihan/Desktop/Codeforces/B_Swap_and_Delete.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    string str;
    cin>>str;
    int n=str.size(),i,zero=0,one=0;
    for(i=0;i<n;i++)
    {
        if(str[i]=='0')zero++;
        else one++;
    }
    for(i=0;i<n;i++)
    {
        if(str[i]=='0')
            if(one>0)one--;
            else break;
        else 
            if(zero>0)zero--;
            else break;
    }

    cout<<zero+one;
    
    nl;
    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/C_Vlad_and_a_Sum_of_Sum_of_Digits.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef             long long ll;
typedef             long double ld;

#define             forn(i,e) for(ll i=0;i<e;i++)
#define             rforn(i,s) for(ll i=s-1;i>=0;i--)
#define             yes cout<<"YES"<<endl
#define             no cout<<"NO"<<endl
#define             pb push_back
#define             pp pop_back
#define             nl cout<<"\n"
#define             sz(x) ((ll)(x).size())

int arithmetic_sum(int size,int digit)
{
    ll i,sum=0;
    for(i=digit;i>0;i--) sum+=i;
    return sum*pow(10,size-1);
}

int big_sum(int num,int digit,int old)
{
    ll sum=( 9*5*num*pow(10,num-1) )*digit+(old*digit*pow(10,num));
    return sum+digit;
}
 

int solve()
{
    int n,i;
    cin>>n;
    int m=n,num=0;
    vector<ll>digit;
    for(int i=0;m>0;i++)
    {
        digit.pb(m%10);
        m/=10;
        num++;
    }

    ll ans=0,old=0;
    for(int i=num;i>0;i--)
    {
        ans=ans+big_sum(i-1,digit[i-1],old)+arithmetic_sum(i,digit[i-1]-1);
        old=old+digit[i-1];        
    }
    cout<<ans;       
    nl;      
    return 0;
}
 

int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    
    return 0;
}

//Successfully wasted 3 Hours


"/home/raihan/Desktop/Codeforces/seive.c"
#include<stdio.h>
const int N = 10000;
int is[1000000];
int prime[100000];

int main(){

    for(int i = 2; i < N; i++){
        if(is[i] == 0){
            for(int j = i * i; j < N; j+= i){
                is[j] = 1;
            }
        }
    }

    for(int i = 2, j = 0; i < N; i++){
        if(is[i] == 0){
            prime[j] = i;
            j++;
        }
    }
    for(int i = 0; i < N; i++){
        printf("%d, ", prime[i]);
    }
}

"/home/raihan/Desktop/Codeforces/Static_Range_Minimum_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


vector<int> tree(4 * N), v(N);

int query(int node, int lo, int hi, int &l, int &r){
    if(lo > r or hi < l)return 0; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return q1 + q2; //***
}


void update(int node, int lo, int hi, int pos, int val){
    if(lo > pos or hi < pos)return;
    if(lo >= pos and hi <= pos){
        tree[node] = val;
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, val);
    update(2 * node + 1, mid + 1, hi, pos, val);

    tree[node] = tree[2 * node] + tree[2 * node + 1];  //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1]; //***
}

int32_t main(){
    int n, q;
    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];
    build(1, 0, n);
    
    while(q--){
        int t, l, r;
        cin >> t >> l >> r;
        
        if(t == 1){
            cout << query(1, 0, n, --l, --r) << endl;
        }else{
            update(1, 0, n, --l, r);
        }
    }
  
  
}

"/home/raihan/Desktop/Codeforces/Sum_of_Four_Values.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, x;
    cin >> n >> x;
    vin v(n + 1);
    Forn(i,n)cin >> v[i];
    map<int, vector<pr>> mp;
    set<int> s;

    for(int i = 1; i <= n; i++){
        for(int j = i + 1; j <= n; j++){
            mp[v[i] + v[j]].push_back({i, j});
            s.insert(v[i] + v[j]);
        }
    }

    vin ans;

    for(auto i : mp){
        int res = x - i.first;
        if(res <= 0)continue;
        if(s.count(res) == 0)continue;
        
        for(auto f : i.second){
            for(auto l : mp[res]){
                if(f.first != l.first and f.first != l.second and f.second != l.first and f.second != l.second){
                    ans.push_back(f.first);
                    ans.push_back(f.second);
                    ans.push_back(l.first);
                    ans.push_back(l.second);
                    sort(all(ans));
                    print(ans);
                    return 0;
                }
            }
        }
    }
    cout <<"IMPOSSIBLE" << endl;

}

"/home/raihan/Desktop/Codeforces/temp.c"
#include<stdio.h>
#include<math.h>

int main(){
    int  a = 5, b = 10;
    a ^= b;
    b ^= a;
    a ^= b;
    printf("%d %d", a, b);
}

"/home/raihan/Desktop/Codeforces/test.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    for(int i = 14; i < 18; i++){
        cout << 69 / i << " ";
    }
}

"/home/raihan/Desktop/Codeforces/test1.cpp"
#include <iostream>
#include <cstdlib>
#include <ctime>
#include <cmath>

using namespace std;

long long gcd(long long a, long long b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

long long pollard_rho(long long n) {
    if (n % 2 == 0)
        return 2;
    srand(time(NULL));
    long long x = rand() % (n - 2) + 2;
    long long y = x;
    long long c = rand() % (n - 1) + 1;
    long long d = 1;

    while (d == 1) {
        x = (x * x + c) % n;
        y = (y * y + c) % n;
        y = (y * y + c) % n;
        d = gcd(abs(x - y), n);
        if (d == n)
            return pollard_rho(n);
    }

    return d;
}

int main() {
    long long n;
    cout << "Enter a number to factorize: ";
    cin >> n;
    long long factor = pollard_rho(n);
    cout << "A non-trivial factor of " << n << " is " << factor << endl;
    return 0;
}

"/home/raihan/Desktop/Codeforces/test2.cpp"
#include<bits/stdc++.h>
using namespace std;

int main()
{
    while(1)
    {
        int n;
        cin>>n;
        if(n==42)return 0;
        else cout<<n<<endl;
    }
    
}

"/home/raihan/Desktop/Codeforces/text.md"

"/home/raihan/Desktop/Codeforces/The_Monk_and_Class_Marks.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    lin(n);
    string name;  ll marks;
    
    map<int,multiset<string>>m;
    forn(i,n)
    {
        cin>>name>>marks;
        m[marks].insert(name);
    }
    auto it=m.rbegin();
    for(;it!=m.rend();it++)
    {
        auto &student=it->second;
        marks =it->first;
        for(auto s: student)cout<<s<<" "<<marks<<endl;
    }
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/T_Combination.cpp"
#include <bits/stdc++.h>
using namespace std;
#define int long long
int const N = 1005;
int dp[N][N];
int nCr(int n, int r)
{
    if (r == 1)
        return n;
    if (n == r||r == 0)
        return 1;
    if (dp[n][r] != 0)
        return dp[n][r];
    return dp[n][r] = nCr(n - 1, r) + nCr(n - 1, r - 1);
}

int32_t main()
{
    memset(dp, 0, sizeof(dp));
    int n, r;
    cin >> n >> r;
    if(r > n){
        cout<<0<<endl;
        return 0;
    }
    cout << nCr(n, r);
}

"/home/raihan/Desktop/Codeforces/unnatural language processing 1915D.cpp"
#include <iostream>
#include <string>

int main()
{
    int test;
    std::cin >> test;
    while (test--)
    {
        int n, i;
        std::cin >> n;
        std::string str;
        std::cin >> str;
        for (i = 0; i < n; i++)
        {
            std::cout << str[i];
            if ((str[i] == 'a' || str[i] == 'e') && (str[i + 2] > 'a' && str[i + 2] < 'e'))
            {
                std::cout << str[i + 1] << ".";
                i++;
            }
            else if ((str[i] == 'a' || str[i] == 'e') && (str[i + 2] == 'a' || str[i + 2] == 'e'))
            {
                std::cout << ".";
            }
        }
        std::cout << std::endl;
    }
    return 0;
}


"/home/raihan/Desktop/Codeforces/Untitled-1.cpp"

"/home/raihan/Desktop/Codeforces/who.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define pb push_back
#define pp pop_back
#define nl cout<<"\n"
#define sz(x) ((ll)(x).size())
 
int main()
{
cout.setf(ios::fixed);
cout.setf(ios::showpoint);
cout.precision(2);    char c='B';
    cout<<(double)c;nl;
    double d=23.233332;
    cout<<d;

    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/X_Convert_To_Decimal_2.cpp"
#include<bits/stdc++.h>
using namespace std;

int main(){
    int t;
    cin >> t;
    while(t--){
        int n;
        cin >> n;
        int one_cnt = 0;
        while(n > 0){
            if((n & 1))one_cnt++;
            n = n / 2;
        }
        int b = 1, ans = 0;
        while(one_cnt--){
            ans += b;
            b = b * 2;
        }
        cout << ans << endl;
    }
}

"/home/raihan/Desktop/Codeforces/A_A_Gift_From_Orangutan.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int last = v.back();
    v.pop_back();
    vin a, b;
    a.push_back(last); b.pb(last);
    for(auto i : v){
        a.push_back(i);
        b.push_back(i);
    }
    int mx = 0, mn = INF;
    for(int i = 0; i < n; i++){
        mx = max(a[i], mx);
        mn = min(mn, a[i]);
        a[i] = mn;
        b[i] = mx;
    }
    int ans = 0;
    for(int i = 0; i < n; i++){
        ans += b[i] - a[i];
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Bad_Ugly_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    in(n);
    
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Bark_to_Unlock.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string a;
    cin >> a;
    lin(n);
    bool f = false, l = false;
    forn(i,n){
        string str;
        cin >> str;
        if(str.front() == a.back())f = true;
        if(str.back() == a.front())l = true;
        if(str == a){
            yes;
            return 0;
        }
    }
    if(f && l)yes;
    else no;
}

"/home/raihan/Desktop/Codeforces/A_Bear_and_Prime_100.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

vin isPrime(110, 1);
vin pm;

void seive(){
    for(int i = 2; i <= 100; i++){
        if(isPrime[i]){
            for(int j = i * i; j <= 100; j += i){
                isPrime[j] = 0;
            }
        }
    }
    for(int i = 2; i <= 100; i++){
        if(isPrime[i])pm.push_back(i);
    }
}

int32_t main()
{
    fast_in_out;
    seive();
    
    int cnt = 0, div = 0;

    for(int i = 0; cnt < 20; i++, cnt++){
        cout<<pm[i]<<endl;
        cout.flush();

        string ask;
        cin >> ask;
        if(ask == "yes"){
            div++;
            for(int j = pm[i] * pm[i]; j <= 100 && cnt < 20; j *= pm[i], cnt++){
                cout<<j<<endl;
                cout.flush();

                string ask;
                cin >> ask;
                if(ask == "yes"){
                    div++;
                }
            }
        }
        if(div > 1)break;
    }

    if(div > 1)cout<<"composite"<<endl;
    else cout<<"prime"<<endl;
    cout.flush();    
    
}

"/home/raihan/Desktop/Codeforces/A_Bit.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int n,i,x,ans=0;
    cin>>n;
    string str;
    for(i=0;i<n;i++)
    {
        cin>>str;
        x=str[0]+str[1]+str[2];
        if(x==178)ans--;
        else ans++;
    }
    cout<<ans; nl;
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Bit.py"
m= input()
a=int(a)
print(n)
while (n>0):
    n-=1;
    print(n);




"/home/raihan/Desktop/Codeforces/A_Blackboard_List.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    if(*min_element(all(v)) < 0){
        cout<<*min_element(all(v))<<endl;
        return;
    }

    cout<<*max_element(all(v))<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Bonus_Project.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    vin a(n), b(n), mx(n), pf(n + 1);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    forn(i,n)mx[i] = a[i] / b[i];

    for(int i = n - 1; i >= 0; i--)pf[i] = pf[i + 1] + mx[i];
    if(pf[0] < k){
        forn(i,n)cout <<"0 ";nl;
        return;
    }

    int sum = 0;
    for(int i = 0; i < n; i++){
        int res = pf[i + 1] + sum;
        int x = k - res;
        // cout << x << endl;
        if(x < 0)continue;
        cout << x <<" ";
        sum += x;
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Boredom.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, dp_cnt = 0;
map<int, int> mp;
vin v;

vector<vin> dp(N, vin (3, -1));

int recur(int ind, bool flg){
    dp_cnt++;

    if(dp[ind][flg] != -1)return dp[ind][flg];
    if(ind == 0)return 0;

    if(flg)return dp[ind][1] = recur(ind - 1, false);

    int a = recur(ind - 1, false);

    if(v[ind - 1] == v[ind] - 1)flg = true;
    int b = mp[v[ind]] + recur(ind - 1, flg);

    return dp[ind][0] = max(a, b);
}

int32_t main(){
    fast_in_out;
    cin >> n;

    forn(i,n){
        lin(x);
        mp[x] += x;
    }    
    
    v.push_back(-1);
    for(auto i : mp)v.push_back(i.first);
    n = v.size();

    cout << recur(n, false) << endl;
}

"/home/raihan/Desktop/Codeforces/A_Boring_Apartments.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Boy_or_Girl.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


int main()
{
    fast_in_out;
    string str;  cin>>str;

    int arr[26]={0},o=0;
    forn(i,str.size())arr[str[i]-97]++;
    forn(i,26)if(arr[i]>0)o++;


    if(o%2==0)cout<<"CHAT WITH HER!";
    else cout<<"IGNORE HIM!"; nl;
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Bus_to_Pénjamo.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, r;
    cin >> n >> r;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v), greater<>());
    // print(v);

    int ans = 0;
    int extra = 0;
    for(auto &i : v){
        extra += i % 2;
        if(i <= 1)continue;

        r -= i / 2;
        ans += (i / 2) * 2;
        i %= 2;
    }
    ans += min((r * 2 - extra), extra);
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Buttons.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int a,b,c;
        cin>>a>>b>>c;
        
    }
}

"/home/raihan/Desktop/Codeforces/A_cAPS_lOCK.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    string str; cin>>str;
    int i,up=0,n=str.size();
    for(i=0;i<n;i++)
    {
        if(str[i]<96)up++;
    }
    if(n==up)
    {
        for(i=0;i<n;i++)if(str[i]<96)str[i]+=32;
    }
    else if((n-1)==up && str[0]>96)
    {
        if(str[0]>96)str[0]-=32;
        for(i=1;i<n;i++)if(str[i]<96)str[i]+=32;
    }
    cout<<str;nl;

    return 0;
}

int main()
{
    solve();
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Card_Exchange.cpp"
#include <bits/stdc++.h>
#include <map>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, a, temp = 0;
        cin >> n >> a;
        map<int, int> m;
        for (int i = 0; i < n; i++)
        {
            int x;
            cin >> x;
            m[x]++;
        }
        for (auto l : m)
        {
            if (l.second >= a)
            {
                temp = 1;
                break;
            }
        }
        if (temp == 1)
            cout << a - 1 << endl;
        else
            cout << n << endl;
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Catch_the_Coin.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;

#define fi                 first
#define se                 second
#define mmp                make_pair
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    lin(x) lin(y)

    if(y >= -1)yes;
    else no;


    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Chess_For_Three.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int a, b, c;
    cin >> a >> b >> c;
    int sum = a + b + c;
    int mx = max(a, max(b, c));

    if(sum & 1)cout<<-1<<endl;
    else{
        cout<<min(sum - mx, sum / 2)<<endl;
    }
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Farmer_John_s_Challenge.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int sln()
{
    ll n,k;
    cin>>n>>k;
    if(k==1)for(int i=1;i<=n;i++)cout<<i<<" ";
    else if(n==k)forn(i,n)cout<<"1 ";
    else cout<<"-1";nl;  
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sln();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Find_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    forn(i,n)cout<<i + 2<<" ";nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Find_Divisible.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int l, r;
    cin >> l >> r;
    cout << l <<" " << 2 * l << endl;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Find_Extra_One.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


int main()
{
    fast_in_out;
    in(n);
    ll a=0,b=0,x,y;

    forn(i,n)
    {
        cin>>x>>y;

        if(x>0)a++;
        else if(x<0)b++;
        else {a++;b++;}
    }
    n--;
    if(a>=n || b>=n)yes;
    else no;


    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Find_K_Distinct_Points_with_Fixed_Center.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e7 + 7;

void sukuna(){
    int x, y, k;
    cin >> x >> y >> k;
    vector<pr> v;
    
    if(k%2 == 0){
        v.push_back({k * x + M, k * y + M});
        v.push_back({-M, - M});
        k-= 2;
    }else{
        v.push_back({k * x, k * y});
        k--;
    }

    for(int i = 1; i <= k / 2; i++){
        v.push_back({i, i});
        v.push_back({-i, - i});
    }

    for(auto a : v){
        cout<<a.first<<' '<<a.second<<endl;
    }

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Find_Minimum_Operations.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;

    if(k == 1){
        cout << n << endl;
        return;
    }

    int ans = 0;
    while(n >= k){
        int sum = k;
        for(; sum <= n; sum *= k);
        sum /= k;
        ans ++;
        n -=sum;
    }
    ans += n;
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Flipping_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    
    int ans = 0;
    for(int i = 0; i < n; i++){
        for(int j = i; j < n; j++){
            int sum = 0;
            for(int k = 0; k < n; k++){
                if(k < i || k > j)sum += v[k];
                else sum += (1 - v[k]);
            }
            ans = max(ans, sum);
        }
    }

    cout<<ans<<endl;
    
    
}

"/home/raihan/Desktop/Codeforces/A_Football.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    int n, cnt = 0;
    string str;
    cin>>n;
    map<string, int> m;
    for(int i = 0; i < n; i++){
        cin>>str;
        m[str]++;
    }
    for(auto a : m){
        if(a.second > cnt){
            cnt = a.second;
            str = a.first;
        }
    }
    cout<<str<<endl;
    
}

"/home/raihan/Desktop/Codeforces/A_Forbidden_Subsequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    string a, b;
    cin >> a >> b;
    sort(all(a));

    int aa = 0, bb = 0, cc = 0;
    for(int i = 0; i < a.size(); i++){
        if(a[i] == 97)aa = 1;
        if(a[i] == 98)bb = 1;
        if(a[i] == 99)cc = 1;
    }
    aa = aa & bb & cc;

    if(b != "abc"){
        cout<<a<<endl;
        return;
    }
    if(aa  == 0){
        cout<<a<<endl;
        return;
    }
    string ans;
    for(int i = 0; i < a.size(); i++){
        if(a[i] == 'a' || a[i] == 'c')ans.push_back(a[i]); 
    }
    forn(i, a.size())if(a[i] == 'b')ans.push_back(a[i]);
    forn(i,a.size())if(a[i] > 99)ans.push_back(a[i]);

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Free_Cash.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);

    map<pair<int, int>, int>m;
    forn(i,n){
        lin(x) lin(y);
        m[{x, y}]++;
    }
    int ans = 0;
    for(auto a : m){
        ans = max(ans, a.second);
    }

    cout<<ans<<endl;
    
    
}

"/home/raihan/Desktop/Codeforces/A_Game_of_Division.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin>> v[i];

    for(int i = 0; i< n; i++){
        bool flg = true;

        for(int j = 0; j < n; j++){
            if(i == j)continue;
            if(abs(v[i] - v[j]) % k == 0){flg = false; break;}
        }
        if(flg){
            yes;
            cout << i + 1 << endl;
            return;
        }
    }
    no;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_George_and_Sleep.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string l, r;
    cin >> l >> r;
    int hh1 = ((l[0] - '0') * 10) + (l[1] - '0');
    int mm1 = ((l[3] - '0') * 10) + (l[4] - '0');

    int hh2 = ((r[0] - '0') * 10) + (r[1] - '0');
    int mm2 = ((r[3] - '0') * 10) + (r[4] - '0');
    
    if(hh1 < hh2)hh1 += 24;
    if(hh1 == hh2)if(mm1 < mm2)hh1 += 24;

    int hh = hh1 - hh2;
    int mm = mm1 - mm2;
    if(mm < 0)mm += 60, hh--;
    if(hh < 10)cout<< 0;
    cout << hh <<":";

    if(mm < 10)cout << 0;
    cout << mm << endl;

}

"/home/raihan/Desktop/Codeforces/A_Gift_Carpet.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    vector<string> v(n);
    forn(i, n)cin >> v[i];
    int k = 0;
    string str = "vika";
    for(int j = 0; j < m; j++){
        for(int i = 0; i < n; i++){
            if(v[i][j] == str[k]){
                k++;
                break;
            }
        }
        if(k == 4){
            yes;
            return;
        }
    }
    no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Greedy_Monocarp.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    lin(k);
    vin v(n);
    
    forn(i,n)cin >> v[i];
    
    int mn = INF;
    int sum = 0;

    sort(all(v), greater<>());
    
    forn(i,n){
        sum += v[i];
        if(sum == k){cout << 0 << endl; return;}
        if(sum > k){sum -= v[i]; break;}
        mn = min(mn, v[i]);
    }
    cout << k - sum << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Greg_and_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    int n, m, k;
    cin >> n >> m >> k;

    vin v(n + 2), q(m + 2), ans(n + 2);
    vector<vin> OP(m + 2, vin (4));
    
    Forn(i,n)cin >> v[i];

    //Operation
    Forn(i,m)forn(j, 3)cin >> OP[i][j];

    //Query
    forn(i, k){
        lin(x); lin(y);
        q[x] ++;
        q[y + 1]--; 
    }
    Forn(i, m)q[i] += q[i - 1];


    //Construct
    for(int i = 1; i <= m; i++){
        ans[OP[i][0]] += q[i] * OP[i][2];
        ans[OP[i][1] + 1] -= q[i] * OP[i][2];
    }
    Forn(i, n)ans[i] += ans[i - 1];
    Forn(i,n)ans[i] += v[i];

    Forn(i,n)cout<<ans[i]<<" ";nl;    
    
}

"/home/raihan/Desktop/Codeforces/A_Guess_the_Maximum.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(n);
    vin v(n), ans;
    forn(i,n)cin>>v[i];
    for(int i = 1; i < n; i++){
        ans.push_back(max(v[i], v[i - 1]));
    }
    // print(ans);
    cout<<*min_element(all(ans)) - 1<<endl;
    
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Hayato_and_School.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    int odd = 0, even = 0;
    forn(i,n){
        cin >> v[i];
        if(v[i] & 1)odd++;
        else even++;
    }

    if(odd == 0 || (odd == 2 && even == 1)){
        no; return;
    }
    yes;
    if(odd < 3){
        int cnt = 0; odd = 0;;
        for(int i = 0; i < n; i++){
            if(cnt < 2){
                if(v[i] % 2 == 0){
                    cout<<i + 1<<' ';
                    cnt++;
                }
            }
            if(odd < 1){
                if(v[i] & 1){
                    cout<<i + 1<<' ';
                    odd++;
                }
            }
        }
        nl;
        return;
    }
    int cnt = 0;
    for(int i = 0; i < n; i++){
        if(cnt < 3){
            if(v[i] & 1){
                cout<<i + 1<<' ';
                cnt++;
            }
        }
        else break;
    }
    nl;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Hit_the_Lottery.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    lin(n); ll ans=0;
    ans+=n/100; n%=100;
    ans+=n/20; n%=20;
    ans+=n/10; n%=10;
    ans+=n/5; n%=5;
    ans+=n;
    cout<<ans;nl;   
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_How_Much_Does_Daytona_Cost.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    bool ck = 0;
    forn(i,n){
        lin(x);
        if(x == k)ck = 1;
    }
    if(ck)yes;
    else no;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Ian_and_Array_Sorting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v;

void sukuna(){
    lin(n);
    vin a(n);
    forn(i,n)cin >> a[i];
    v = a;
    if(n & 1){
        yes;
        return;
    }

    for(int i = 1; i < n - 1; i++){
        if(v[i] < v[i - 1]){
            v[i + 1] += v[i - 1] - v[i];
            v[i] = v[i - 1];
        }
    }
    
    for(int i = n - 2; i > 0; i--){
        if(v[i] > v[i + 1]){
            v[i - 1] -= v[i] - v[i + 1];
            v[i] = v[i + 1];
        }
    }

    for(int i = 0; i < n - 1; i++){
        if(v[i] > v[i + 1]){
            no;
            return;
        }
    }
    yes;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Increasing_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, d;
    cin >> n >> d;
    int ans = 0;
    vin v(n);
    forn(i,n)cin >> v[i];


    for(int i = 1; i < n; i++){
        if(v[i - 1] < v[i])continue;

        int dif = abs(v[i] - v[i - 1]) + 1;
        int plus = ceil(dif * 1.0 / d);

        v[i] += plus * d;
        ans += plus;
    }

    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/A_Indian_Summer.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    set<pair<string,string>> s;

    forn(i,n){
        string a, b;
        cin >> a >> b;
        s.insert({a, b});
    }

    cout << s.size() << endl;
    
    
}

"/home/raihan/Desktop/Codeforces/A_Insert_Digit.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    int n,d;
    cin>>n>>d;
    string str;
    char ans[n+1];
    cin>>str;
    bool ck=true;
    forn(i,n)
    {
        if((str[i]-48)<d && ck==1)
        {
            cout<<d<<str[i];
            ck=0;
        }
        else if((str[i]-48)>d && ck==1)cout<<str[i];
        else cout<<str[i];
    }
    if(ck==1)cout<<d;
    nl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Insomnia_cure.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n";

int main()
{
    int k,l,m,n,d,i,ans=0;
    cin>>k>>l>>m>>n>>d;
    for(i=1;i<=d;i++)
    {
        if(i%k==0 || i%l==0 || i%m==0 || i%n==0)ans++;
    }
    cout<<ans;nl

    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Inversions.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int n;
    cin >> n;
    int v[n];
    for(int i = 0; i < n; i++)cin >> v[i];

    ordered_set<int> s;
    for(int i = 0; i < n; i++){
        auto lb = s.lower_bound(v[i]);
        if(lb == s.end()){
            cout << 0 <<" ";
        }else{
            int ind = s.order_of_key(*lb);
            cout << i - ind <<" ";
        }
        s.insert(v[i]);
    }
}

"/home/raihan/Desktop/Codeforces/A_IQ_Test.cpp"
#include<bits/stdc++.h>
using namespace std;
#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    vector<string> v(4);
    for(int i = 0; i < 4; i++)cin>>v[i];

    for(int i = 0; i < 3; i++){
        for(int j = 0; j < 3; j++){
            int cnt = 0;
            if(v[i][j] =='.')cnt++;
            if(v[i][j + 1] == '.')cnt++;
            if(v[i + 1][j] == '.')cnt++;
            if(v[i + 1][j + 1] == '.')cnt++;
            if(cnt != 2){
                yes;
                return 0;
            }
        }
    }
    no;
    
}

"/home/raihan/Desktop/Codeforces/A_Is_it_rated_2.cpp"
#include<bits/stdc++.h>
using namespace std;

int main(){
    string str = "Is it rated?";
    string temp;
    while(getline(cin, temp)){
        if(temp == str)cout <<"NO\n";
        else break;
    }


}

"/home/raihan/Desktop/Codeforces/A_New_Password.c"
#include<stdio.h>

int main(){
    int n, k;
    char s[26];
    scanf("%d %d", &n, &k);
    for(int i = 0; i < 26; i++){
        s[i] = 'a' + i;
    }
    for(int i = 0, j = 0; i < n; i++, j++){
        printf("%c", s[j]);
        if(j == k - 1)j = - 1;
    }
}

"/home/raihan/Desktop/Codeforces/A_New_Password.cpp"
#include<bits/stdc++.h>
using namespace std;

int main(){
    int n, k;
    cin >> n >> k;
    string s;
    for(char i = 'a'; i <= 'a' + k - 1; i++)s.push_back(i);

    for(int i = 0, j = 0; i < n; i++, j++){
        cout<<s[j];
        if(j == k - 1)j = -1;
    }
    cout<<endl;
}

"/home/raihan/Desktop/Codeforces/A_Noldbach_problem.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    private:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        set<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            return divisors;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};
SeiveAlgo sv;
vin prime = sv.primes;

vin v(N);

int32_t main(){
    fast_in_out;
    int n, k;
    cin >> n >> k;

    for(int i = 0; prime[i] < 2000; i++){
        v[prime[i] + prime[i + 1]]++;
    }

    for(int i = 1; i < 2000; i++)v[i] += v[i - 1];

    print(v);
    if(v[n] >= k)yes;
    else no;   
    
    
}

"/home/raihan/Desktop/Codeforces/A_Number_Replacement.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    string str, ans;
    forn(i,n)cin >> v[i], ans.push_back('*');
    cin >> str;

    

    for(int i = 0; i < n; i++){
        int x = v[i];
        for(int j = 0; j < n; j++){
            if(v[j] == x){
                ans[j] = str[i];
            }
        }
    }
    if(str == ans)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Odd_Divisor.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int

ll odd_ckecker(ll n)
{
    for(int i=1;n>=1;i++)
    {
        if(n%2==1)break;
        n>>=1;
    }
    if(n%2==1 && n>1) return 1;
    else return 0; 
}


int main()
{
    int test; 
    cin>>test;
    while(test--)
    {
        ll n;
        cin>>n;
        if(odd_ckecker(n)==1)yes;
        else no;  
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Odd_Selection.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Yes\n"
#define no                 cout<<"No\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, x, xx, odd = 0, even = 0;
    cin >> n >> x; xx = x;
    
    forn(i, n){
        lin(y);
        if(y & 1)odd ++;
        else even ++;
    }

    x -= min(x - 1, even);
    if(x % 2 == 0 && xx != x)x++;

    if(odd >= x && x & 1)yes;
    else no;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Odd_Set.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,x,odd=0,i;
        cin>>n;
        for(i=0;i<(2*n);i++)
        {
            cin>>x;
            if(x%2==1)odd++;
        }
        if(odd==n)cout<<"Yes\n";
        else cout<<"No\n";
    }
}

"/home/raihan/Desktop/Codeforces/A_Oh_Those_Palindromes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    string str;
    cin >> str;
    sort(all(str));

    cout << str << endl;
    
}

"/home/raihan/Desktop/Codeforces/A_Only_Pluses.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int a, b, c;
    cin >> a >> b >> c;

    int ans = 0, mx = 0;
    
    for(int i = 0; i <= 5; i++){
        for(int j = 0; j <= 5; j++){
            for(int k = 0; k <= 5; k++){
                if(i + j + k != 5)continue;
                mx = (a + i) * (b + j) * (c + k);
                ans = max(ans, mx); 
            }
        }
    }
    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Orac_and_LCM.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


//Initialize first Pollard::init();
namespace Pollard{
    #define int long long
    mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
    const int N = 2e5 + 100;
    bool isPrime[N]; int hp[N];
    vector<int> primes;

    void init(){
        memset(isPrime, 1, sizeof(isPrime));
        isPrime[0] = isPrime[1] = 0;

        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                hp[i] = i;
                for(int j = i + i; j < N; j += i){
                    isPrime[j] = 0;
                    hp[j] = i;
                }
            }
        }
        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                primes.push_back(i);
            }
        }
    }
    
    int binExp(int a, int b, int M = 1e9 + 7){
        int ans = 1;    a %= M; b %= M;
        
        while(b > 0){
            if(b & 1)ans = ((__uint128_t)(ans % M) * (a % M)) % M;
            b >>= 1;
            a = ((__uint128_t)(a % M) * (a % M)) % M;
        }
        return ans;
    }

    //Miller Rabin primality test
    bool is_composite(int n, int a, int d, int p){
        int x = binExp(a, d, n);
        if(x == 1 or x == n - 1)return false;
    
        for(int i = 0; i < p - 1; i++){
            x = (__uint128_t)x * x % n;
            if(x == n - 1)return false;
        }
    
        return true;
    }
    
    bool miller_rabin(int n, int iter = 5){
        if(n < 4)return n == 2 || n == 3;
        
        int p = 0, d = n - 1;
        while((d & 1) == 0){
            d >>= 1;
            p++;
        }
    
        for(int i = 0; i < iter; i++){
            int a = 2 + rnd() % (n - 3);
            if(is_composite(n, a, d, p))return false;
        }
    
        return true;
    }
    
    //Pollard rho
    int func(int x, int c, int mod){
        return ((__uint128_t) x * x % mod + c) % mod;
    }    

    int rho(int n){
        int c = 1 + rnd() % (n - 2);
        int x =  2 + rnd() % (n - 2);
        int y = x, d = 1;

        while(d == 1){
            x = func(x, c, n);
            y = func(func(y, c, n), c, n);
            d = __gcd(abs(x - y), n);
        }
        return d;
    }

    vector<int> factorize(int n){
        if(n == 1)return {1};
        if(miller_rabin(n))return {n};
        vector<int> factors, temp;
        
        if(n < N){
            while(n > 1){
                int pm = hp[n];
                while(n % pm == 0){
                    factors.push_back(pm);
                    n /= pm;
                }
            }
            return factors;
        }

        int x = rho(n);
        factors = factorize(x);
        temp = factorize(n / x);
        factors.insert(factors.end(), temp.begin(), temp.end());
        return factors;
    }

    void allDivsGen(int ind, int curVal, vector<pair<int, int>> &pmFact, set<int> &ans){
        if(pmFact[ind].first == -1){
            ans.insert(curVal);
            return;
        }
        for(int i = 0; i <= pmFact[ind].second; i++){
            allDivsGen(ind + 1, curVal, pmFact, ans);
            curVal *= pmFact[ind].first;
        }
    }

    set<int> allDivisors(int n){
        set<int> ans;
        vector<pair<int, int>> prime_factors;
        vector<int> fact = factorize(n);
        unordered_map<int, int> mp;
        for(auto i : fact)mp[i]++;
        for(auto i : mp)prime_factors.push_back({i.first, i.second});
        prime_factors.push_back({-1, -1});
        allDivsGen(0, 1, prime_factors, ans);
        return ans;
    }
}


void sukuna(int test){
    Pollard::init();
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    set<vin> alld;
    for(auto i : v){
        vin pm = Pollard::factorize(i);
        sort(all(pm));
        // print(pm);
        alld.insert(pm);
    }

    // for(int i = 0; i < n - 1; i++){
    //     for(int j = i + 1; j < n; j++){
    //         int lc = v[i] * v[j] / __gcd(v[i], v[j]);
    //         // cout << lc <<" ";
    //         vin pm = Pollard::factorize(lc);
    //         sort(all(pm));
    //         // print(pm);
    //         alld.insert(pm);
    //     }
    // }

    for(auto v : alld){print(v)};
    int ans = INF;

}

int32_t main(){
    fast_in_out;
    
    int test = 1; //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Packing_Rectangles.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int w, h, n;
bool func(int mid){
    int mx = mid / h;
    int b = mid / w;
    return (__uint128_t) b * mx >= n;
}

int32_t main(){
    fast_in_out;
    cin >> w >> h >> n;
    if(w > h)swap(w, h);

    int lo = 0, hi = INF, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(!func(mid)){
            lo = mid + 1;
        }else {
            hi = mid;
        }
    }

    cout << lo << endl; 
}

"/home/raihan/Desktop/Codeforces/A_Painting_the_Ribbon.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,m,k,x;
    cin>>n>>m>>k;

    x=n/m;
    if(n%m>0)x++;
    n-=x;
    // cout<<n;nl;
    if(n>k)yes;
    else no;
    
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Password_Check.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string str;
    cin >> str;


    bool a = 0, b = 0, cc = 0, d = 0;
    if(str.size() >= 5)d = 1;

    for(int i = 0; i < str.size(); i++){
        char c = str[i];
        if(c <= 'z' and c >= 'a')a = true;
        if(c <='Z' and c >= 'A')b = true;
        if(str[i] <= '9' && str[i] >= '0')cc = true;
    }        

    if(a & b & cc & d)cout <<"Correct";
    else cout <<"Too weak";
}

"/home/raihan/Desktop/Codeforces/A_Penchick_and_Modern_Monument.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    int mx = 0;
    map<int,int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
        mx = max(mx, mp[x]);
    }

    cout << n - mx << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Perpendicular_Segments.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int x, y, k;
    cin >> x >> y >> k;
    int mn = min(x, y);
    cout << "0 " << mn << " " ;
    cout << mn << " 0" << endl;

    cout << "0 0 " << mn << " " ;
    cout << mn << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Sage_s_Birthday_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    ll n;
    cin>>n;
    vector<ll>v(n);
    forn(i,n)cin>>v[i];
    sort(v.begin(),v.end());

    if(n<3)
    { 
        cout<<0;nl; 
        print(v);
        return 0;
    }
    cout<<(n-3)/2+1;nl;

    cout<<v[n-1]<<" "<<v[n-3]<<" "<<v[n-2]<<" ";

    for(int i=n-4;i>0;i-=2)
    {
        cout<<v[i-1]<<" "<<v[i]<<" ";
    }
    if(n%2==0)cout<<v[0];nl;

    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Challenging_Valleys.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    int ck = 0,i,j;
    vin v(n);
    forn(i, n) cin >> v[i];

    if(n==1){yes; return 0;}
    if(n==2 && v[1]!=v[0]){yes;return 0;}
    for(i=1;i<n;i++)if(v[i]!=v[0]){if(v[i]>v[0])ck++;break;}
    for(i=n-2;i>0;i--)if(v[i]!=v[n-1]){if(v[i]>v[n-1])ck++;break; }
    
    for(i=1;i<n-1;i++)
    {
        if(v[i-1]>v[i] && v[i+1]>v[i])ck++;
        else if(v[i-1]>v[i])
        for(j=i+1;j<n;j++)
        {
            if(v[i]!=v[j])
            {
                if(v[i]<v[j])ck++;break;
            }
        }
    }
    if(ck==1)yes;
    else no;
    return 0;
}

int main()
{
    fast_in_out;

    int test;
    cin >> test;
    while (test--)
        solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Distinct_Characters_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5 + 100;

int n, q;
vector<vin> tree(4 * N, vin(26));
vin temp(26);
string v;


vin query(int node, int lo, int hi, int l, int r){
    if(hi < l or lo > r){
        return temp;
    }
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    vin q1 = query(2 * node, lo, mid, l, r);
    vin q2 = query(2 * node + 1, mid + 1, hi, l, r);

    vin ret(26);
    for(int i = 0; i < 26; i++){
        ret[i] = q1[i] + q2[i];
    }
    return ret;
}

int Query(int l, int r){
    vin cnt = query(1, 0, n - 1, l, r);
    int ans = 0;
    for(int i = 0; i < 26; i++){
        if(cnt[i])ans++;
    }
    return ans;
}


void update(int node, int lo, int hi, int pos, char c){
    if(hi < pos or lo > pos){
        return ;
    }

    if(hi == lo){
        tree[node][v[pos] - 'a']--;
        tree[node][c - 'a']++;
        v[pos] = c;
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, c);
    update(2 * node + 1, mid + 1, hi, pos, c);

    for(int i = 0; i < 26; i++){
        tree[node][i] = tree[2 * node][i] + tree[2 * node + 1][i];
    }    
}


void build(int node, int lo, int hi){
    if(hi == lo){
        tree[node][v[lo] - 'a'] = 1;
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    for(int i = 0; i < 26; i++){
        tree[node][i] = tree[2 * node][i] + tree[2 * node + 1][i];
    }
}


int32_t main(){
    fast_in_out;

    cin >> v;
    n = v.size();
    cin >> q;

    build(1, 0, n - 1);

    while(q--){
        lin(type);
        int l, r; char c;

        if(type == 1){
            cin >> l >> c;
            update(1, 0, n - 1, --l, c);
        }else{
            cin >> l >> r;
            cout << Query(--l, --r) << endl;
        }
    }    
}

"/home/raihan/Desktop/Codeforces/D_Flipper.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Mysterious_Present.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Remove_One_Element.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 2), lf(n + 2, 1), rg(n + 2, 1);
    Forn(i,n)cin >> v[i];

    for(int i = n; i > 0; i--){
        if(v[i] < v[i + 1])rg[i] = rg[i + 1] + 1;
    }
    for(int i = 2; i <= n; i++){
        if(v[i] > v[i - 1])lf[i] = lf[i - 1] + 1;
    }

    int ans = max(*max_element(all(lf)), *max_element(all(rg)));

    for(int i = 1; i < n; i++){
        if(v[i + 2] > v[i]){
            ans = max(ans, lf[i] + rg[i + 2]);
        }
    }

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Strong_Vertices.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vector<pr> v(n);
    vin u(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    forn(i,n)u[i] = v[i].first - v[i].second;
    vin ans;
    int mx = *max_element(all(u));
    forn(i,n){
        if(u[i] == mx){
            ans.push_back(i + 1);
        }
    }

    cout<<ans.size()<<endl;
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_1_Divisible_Numbers_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int a, b, c, d;
    cin >> a >> b >> c >> d;
    int g = a * b;

    for(int i = a + 1; i <= c; i++){
        int x = __gcd(g, i);
        int k = g / x;
        if(b / k != d / k){
            cout<<i<<" "<<(b / k + 1) * k<<endl;
            return;
        }
    }

    cout<<-1<<' '<<-1<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Binary_Deque.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;



void sukuna(){
    int n, s, sum = 0, ans;
    cin >> n >> s;
    vin v(n);
    forn(i,n)cin >> v[i];
    vin f(n), l(n); f[0] = v[0], l[n - 1] = v[n - 1];
    for(int i = 1, j = n - 2; i < n; i++, j--){
        f[i] = f[i - 1] + v[i];
        l[j] = l[j + 1] + v[j];
    }
    sum = l[0];
    if(sum < s){
        cout<<-1<<endl;
        return;
    }
    else if(sum == s){
        cout<<0<<endl;
        return;
    }
    rforn(i,n){
        if(l[i] == (sum - s)){
            ans = (n - i);
            break;
        }
    }
    reverse(all(l));

    int i = lower_bound(all(f), (sum - s)) - f.begin(), j = 0;
    ans = min(ans, i + 1);
    
    for(; i >= 0; i--){
        for(; j < n; j++){
            if(f[i] + l[j] >= (sum - s))break;
        }
        ans = min(ans, i + j + 2);
        
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Klee_s_SUPER_DUPER_LARGE_Array.py"

def Sum(a):
    return int( a * (a - 1) / 2) 

def val(a, b):
    return Sum(b) - Sum(a - 1)
    

for _ in range (int (input())):
    n, k = map(int, input().split())
    n -= 1
    sum = val(k, n + k)
    
    lo = int (1)
    hi = k + n
    
    while hi > lo:
        mid = int ((lo + hi) / 2)
        x = val(k, mid)
        y = sum - x
        if(x < y):
            lo = mid + 1
        else:
            hi = mid
    
    x = val(k, lo - 1)
    y = sum - x
    ans = abs(x - y)
    x = val(k, lo)
    y = sum - x
    ans = min(ans, abs(x - y))
    
    print(ans)
    

"/home/raihan/Desktop/Codeforces/E_Secret_Box.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    int k;
    vector<int> v(3), s(3);
    forn(i,3)cin>>v[i];
    cin>>k;

    int ans = 0;

    for(int i = 1; i <=v[0]; i++){
        for(int j = 1; j <= v[1]; j++){
            int x = i * j;
            if(k%x == 0){
                x = k/x;
                if(x <= v[2]){
                    ans = max(ans, (v[0] - i + 1) * (v[1] - j + 1) * (v[2] - x + 1));  
                }
            }
        }
    }
    cout<<ans<<endl;    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Final_Boss.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
int Health = 0;

bool cmp(vector<pair<int, int>> &v, int &h, int mid){
    int H = Health;
    int T = 0;
    mid --;
    
    for(auto a : v){
        int x = mid / a.second;
        T += x;
        H += x * a.first;

        if(T > 1e8)return 1;
        if(H >= h)return 1;
    }
    if(H < h)return 0;
    else return 1;
}


void solve()
{
    int h, n;
    cin>>h>>n;
    vector<pair<int, int>> v(n);
    forn(i,n){
        cin>>v[i].first;
        Health += v[i].first;
    }
    forn(i,n)cin>>v[i].second;

    int lo = 1, hi = 1e18, mid;

    while(hi > lo){
        mid = (hi + lo) / 2;
        if(cmp(v, h, mid)){
            hi = mid;
        }
        else{
            lo = mid + 1;
        }
    }
    cout<<lo<<endl; 
    Health = 0;
      
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/GCD and LCM.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef 				long long ll;
typedef 				long double ld;

#define forn(i,e) 		for(ll i=0;i<e;i++)
#define rforn(i,s) 		for(ll i=s-1;i>=0;i--)
#define yes 			cout<<"YES"<<endl
#define no 				cout<<"NO"<<endl
#define pb 				push_back
#define pp 				pop_back
#define nl 				cout<<"\n"
#define sz(x) 			((ll)(x).size())

int gcd(ll a, ll b)
{

    while(a!=b)
    {
        if(a>b)swap(a,b);
        b=b-a;
        // cout<<a<<" "<<b;nl;
    }
    return a;
}

int lcm(ll a,ll b)
{
    return (a*b)/gcd(a,b);
}


int main()
{
    ll a,b;
    cin>>a>>b;
    // cout<<a;
    cout<<gcd(a,b);nl;
    cout<<lcm(a,b);nl;
    cout<<b;

    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/High_Score.java"

"/home/raihan/Desktop/Codeforces/L_Controllers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    lin(n);
    ll a,b,ps=0,ng;

    string str; cin>>str;
    forn(i,n)if(str[i]=='+')ps++;
    ng=n-ps;
    if(ps>ng)swap(ps,ng);

    lin(q);
    while(q--)
    {
        cin>>a>>b;
        if(a<b)swap(a,b);
        ll f,s;
        s=ps*a; f=ng*b;

        if(ps==ng){yes; continue;}
        if(ps*a<ng*b){no; continue;}

        // /*Difference*/
        ll mi=0;
        mi=(s-f)/a;
        s=((ps-mi)*a);
        s+=(mi*b);


        bool ck =0;
        ll spd=1000;
        a*=spd; b*=spd; /*Now I can easily bypass the time limit by speeding up the process*/
        forn(i,ps-mi)
        {
            if(f==s){ ck=1; break;}
            else if(f>s)
            {
                a/=spd; b/=spd;
                forn(zz,spd)
                {
                    s+=a; s-=b;
                    if(f==s){ck=1; break;}
                }
                break;
            }
            s-=a;
            s+=b;
        }
        
        if(ck==0)no;
        else yes;


    }
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/Search.java"
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Search {
    public static void main(String[] args) {
        if (args.length < 2) {
            System.out.println("Usage: java Search <word> <file1> <file2> ...");
            return;
        }

        String word = args[0];

        for (int i = 1; i < args.length; i++) {
            String filename = args[i];
            try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
                String line;
                int lineNumber = 1;
                while ((line = reader.readLine()) != null) {
                    if (line.contains(word)) {
                        System.out.println(filename + ": " + line);
                    }
                    lineNumber++;
                }
            } catch (IOException e) {
                System.err.println("Error reading file " + filename + ": " + e.getMessage());
            }
        }
    }
}

"/home/raihan/Desktop/Codeforces/A_Sliding.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m, r, c;
    cin >> n >> m >> r >> c;
    int ans = (n - r) * m + (n * m) - ((((r - 1) * m) + c) + (n - r));
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Soccer.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    int x1, y1, x2, y2;
    cin>>x1>>y1>>x2>>y2;

    if(x1 < y1 && x2 < y2)yes;
    else if(x1 > y1 && x2 > y2)yes;
    else no;
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Soccer.java"

"/home/raihan/Desktop/Codeforces/A_Split_the_Multiset.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int recur(int n, int k){
    if(n <= k)return 1;
    return 1 + recur(n - (k - 1), k);
}

 
void sukuna(){
    lin(n) lin(k);
    if(n == 1){
        cout<<0<<endl;
        return;
    }

    cout<<recur(n, k)<<endl;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Spy_Detected.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i,x,y,same=0,ans;
        cin>>n;
        int arr[n];
        for(i=0;i<n;i++)cin>>arr[i];
        if(arr[0]==arr[1] || arr[0]==arr[2]) same=arr[0];
        
        if(same==arr[0])
        {
            for(i=0;i<n;i++)
            {
                if(arr[i]!=same){ans=i+1;break;}
            }
            cout<<ans<<endl;
        }
        else cout<<"1\n";
    }
}

"/home/raihan/Desktop/Codeforces/A_Square_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    string str;
    cin >> str;
    int n = str.size();
    if(n & 1){no; return;}
    for(int i = 0, j = n / 2; i < n / 2; i++, j++){
        if(str[i] != str[j]){no; return;}
    }
    yes;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Stair_Peak_or_Neither.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    int a,b,c;
    cin>>a>>b>>c;
    if(a<b && b<c)cout<<"STAIR\n";
    else if(a<b && b>c)cout<<"PEAK\n";
    else cout<<"NONE\n";
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Stones_on_the_Table.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    ll n,cnt=0;
    cin>>n;
    string str;
    cin>>str;

    forn(i,n-1)
        if(str[i]==str[i+1]){cnt++;}
    cout<<cnt;nl;
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Stones_on_the_Table.java"

"/home/raihan/Desktop/Codeforces/A_Stone_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    int s = min_element(all(v)) - v.begin();
    int l = max_element(all(v)) - v.begin();
    
    if(s > l)swap(s, l);

    cout<<min(min(1 + l, n - s), (s + 1) + (n - l))<<endl;
    


}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Strange_Birthday_Party.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m;
    cin >> n >> m;
    vin v(n), c(m);
    forn(i,n)cin >> v[i];
    forn(i,m)cin >> c[i];
    sort(all(v), greater<int>());

    int ans = 0;
    for(int i = 0, j = 0; i < n; i++){
        if(j < v[i]){
            j++;
            ans += c[i];
        }else{
            ans += c[v[i] - 1];
        }
    }

    cout << ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Strange_Splitting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    if(v[0]== v[n-1]){
        no; return;
    }
    yes;
    cout<<"RB";
    for(int i = 0; i < n-2; i++){
        cout<<"R";
    }
    nl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_String_Task.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    string str, ans;
    cin>>str;
    for(int i = 0; i < str.size(); i++)str[i] |= (1 << 5);
    for(auto a : str){
        if(a == 'a' || a == 'e' || a == 'i' || a == 'o' || a=='u' || a == 'y')continue;
        else{
            ans.push_back('.');
            ans.push_back(a);
        }
    }
    cout<<ans<<endl;
}

"/home/raihan/Desktop/Codeforces/A_Strong_Password.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    string str, ans;
    cin >> str;
    int i = 0, n = str.size();
    
    for(i = 0; i < n - 1; i++){
        if(str[i] == str[i + 1])break;
    }

    for(int j = 0; j <= i; j++)ans.push_back(str[j]);
    if(str[i] == 'z')ans.pb('y');
    else ans.pb(str[i] + 1);

    i++;
    for(;i < n; i++)ans.pb(str[i]);

    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Subtractions.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int func(int a, int b){

    if(a == 0)return 0;
    if(a == b)return 1;
    return (b / a) + func(b % a, a);
}


void sukuna(){
    int a, b;
    cin >> a >> b;    
    if(a > b)swap(a, b);
    cout << func(a, b) << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Sum_of_Odd_Integers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


void sukuna()
{
    lin(a) lin(b)
    if(a % 2 == b % 2) {
        if(a >= b * b)yes;
        else no;
    }
    else no;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Sum_of_Round_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n;
    vector<int>v;
	cin>>n;int m=10;
    while (n){
        if (n % m)
            v.push_back(n % m), n -= n % m;
        m *= 10;
    }
    	cout<<v.size()<<endl;
    print(v);
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Valera_and_Plates.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, m, k, x, d = 0, dd = 0;
    cin >> n >> m >> k;

    for(int i = 1; i <= n; i++){
        cin >> x;
        if(x == 1)d++;
        else dd++;
    }

    int du = max(m - d, 0ll);
    cout << max(0ll, d - m) + max(0ll, dd -k - du);
    
    
}

"/home/raihan/Desktop/Codeforces/A_Vanya_and_Cards.cpp"
#include <bits/stdc++.h>
#include <math.h>
#include <cmath>
using namespace std;
int main()
{
    int n, x,xx, i, sum = 0;
    cin >> n >> x;
    for (i = 0; i < n; i++)
    {
        cin >> xx;
        sum = sum + xx;
    }
    if (sum == 0)
        cout << "0\n";
    else
    {
        sum = abs(sum);
        for (i = 1; i < n; i++)
        {
            if (sum <= x)
                break;
            sum = sum - x;
        }
        cout << i << endl;
    }
}

"/home/raihan/Desktop/Codeforces/A_Vanya_and_Fence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    ll n,h,cnt=0;
    cin>>n>>h;
    forn(i,n)
    {
        lin(x);
        if(x>h)cnt++;
    }
    cout<<(n-cnt)+cnt*2;nl;

    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Vlad_and_the_Best_of_Five.cpp"
#include<bits/stdc++.h>
using namespace std;

#define nl cout<<"\n"
#define sz(x) ((ll)(x).size())
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        string str; cin>>str;
        int a=0,b=0;
        for(int i=0;i<5;i++)
        {
            if(str[i]=='A')a++;
            else b++;
        }
        if(a>=b)cout<<"A";
        else cout<<"B";
        nl;

    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_XOR_Mixup.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int bitm(vector<int>v, int x)
{    
    int sum=0;
    forn(i,v.size())
        if(i!=x)sum^=v[i];
    if(sum==v[x])return 1;
    else return 0;
}

int solve()
{
    in(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    forn(i,n)
        if(bitm(v,i)){cout<<v[i]<<endl; return 0;}

    return 0;
}

int main()
{
    fast_in_out;
    in(t);
    while(t--)solve();
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_XXXXX.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, x, sum = 0;
    cin >> n >> x;
    vin v(n);
    forn(i,n)cin >> v[i], sum += v[i];


    int f = n, l = n, s = sum;
    for(int i = 0; i < n; i++, f--){
        if(s%x != 0)break;
        s -= v[i];
    }

    for(int i = n - 1; i >= 0; i--, l--){
        if(sum % x!= 0)break;
        sum -= v[i];
    }

    int ans = max(f, l);

    if(ans == 0)cout<<-1<<endl;
    else cout<<ans<<endl;


    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_X_Axis.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    vin v(3);
    forn(i,3)cin>>v[i];
    sort(all(v));
    int ans, mn = INT_MAX;
    for(int i = v[0]; i <= v[2]; i++){
        int x = abs(v[0] - i) + abs(v[1] - i) + abs(v[2] - i);
        if(x < mn){
            mn = x;
        }
    }
    cout<<mn<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Yes_Yes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    string str;
    cin >> str;

    for(int i = 0; i < str.size() - 1; i++){
        if(str[i] == 'Y'){
            if(str[i + 1] != 'e'){
                no; return;
            }
        }else if(str[i] == 'e'){
            if(str[i + 1] != 's'){
                no;
                return;
            }
        }else if(str[i] == 's'){
            if(str[i + 1] != 'Y'){
                no;
                return;
            }
        }else{
            no;
            return;
        }
    }
    if(str.back() != 'Y' && str.back() != 'e' && str.back() != 's')no;
    else yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Yogurt_Sale.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,a,b;
    cin>>n>>a>>b;
    if(n==1)cout<<a;
    else
    {
        if(n%2==0)
        {
            if(n*a<(n*b)/2)cout<<n*a;
            else cout<<n*b/2;
        }
        else 
        {
            if(((n-1)*a+a)<((n-1)*b)/2+a)cout<<((n-1)*a+a);
            else cout<<((n-1)*b)/2+a;
        }
    }nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Zhan_s_Blender.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, x, y;
    cin >> n >> x >> y;
    x = min(x, y);
    int ans = ceil(n * 1.0 / x);

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/boi.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_1_Bouquet_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    int ans = 0, i = 0, j = 0, x = 0;
    while(i < n){
        x += v[i];
        while(x > k || v[i] - v[j] > 1 && j < n)x -= v[j], j++;
        ans = max(ans, x);
        i++;
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_1_D_Keyboard.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string inp = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

int32_t main(){
    fast_in_out;
    string str;
    cin >> str;

    int ans = 0;
    int n = str.size();
    map<char,int> mp;
    forn(i,n){
        mp[str[i]] = i;
    }

    int cur = 0;
    forn(i,n){
        ans += abs(mp[inp[i]] - cur);
        cur = mp[inp[i]];
    }
    cout << ans <<endl;


    
    
}

"/home/raihan/Desktop/Codeforces/B_1_Palindrome_Game_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"ALICE\n"
#define no                 cout<<"BOB\n"
#define draw               cout<<"DRAW"<<endl
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string v;
    cin >> v;
    int zero = 0;
    forn(i, n){
        if(v[i] == '0'){
            zero++;
        }
    }

    if(zero == 0)draw;
    else if(n & 1 && v[(n + 1) / 2 - 1] == '0' && zero > 1)yes;
    else no;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_1_The_Strict_Teacher_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m, q;
    cin >> n >> m >> q;
    vin v(m);
    forn(i,m)cin >> v[i];
    lin(p);
    sort(all(v));
    int l = -1, r = -1;

    forn(i,m){
        if(v[i] <= p)l = v[i];
    }
    forn(i,m){
        if(v[i] >= p){
            r = v[i];
            break;
        }
    }

    if(l == -1){
        cout << r - 1<< endl;
        return;
    }
    if(r == -1){
        cout << n - l << endl;
        return;
    }

    cout << (r - l) / 2 << endl;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_2_The_Strict_Teacher_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m, q;
    cin >> n >> m >> q;
    vin v(m);
    forn(i,m)cin >> v[i];
    sort(all(v));

    while(q--){
        lin(p);
        int l = lower_bound(all(v), p) - v.begin();
        int r = lower_bound(all(v), p) - v.begin();

        if(l > 0)l--;
        else l = -1;
        if(r == m)r = -1;


        if(l != -1)l = v[l];
        if(r != -1)r = v[r];

        // cout << l <<" " << r << endl;

        if(l == -1){
            cout << r - 1<< endl;
            continue;
        }
        if(r == -1){
            cout << n - l << endl;
            continue;
        }

        cout << (r - l) / 2 << endl;    
    }



}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_AccurateLee.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string v, ans;
    cin >> v;
    int f = 0, l = n - 1;
    for(; f < n; f++)if(v[f] == '1')break;
    for(; l >= 0; l--)if(v[l] == '0')break;
<<<<<<< HEAD

    for(int i = 0; i < f; i++)ans.push_back('0');
    
    if(f < l)ans.push_back('0');
=======
    for(int i = 0; i < f; i++)ans.push_back('0');
    
    if(f <= l)ans.push_back('0');
>>>>>>> 1f6306d ( AC)
    for(++l; l < n; l++)ans.push_back('1');

    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Alice_s_Adventures_in_Permuting.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int x, y, z;
    cin >> x >> y >> z;
    __int128_t n = x, b = y, c = z, mid;

    if(b == 0){
        if(c == n - 2){
            cout << x - 1 << endl;
            return;
        }
        if(c >= n - 1){
            if(c == n - 1)cout << x - 1 << endl;
            else cout << x << endl;
            return;
        }else{
            cout << -1 << endl;
            return;
        }
    }


    int lo = 0, hi = n;

    while(hi > lo){
        mid = (lo + hi) / 2;

        if(c + b * mid < n){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }

    int ans = n - lo;
    
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Alice_s_Adventures_in_Permuting.java"

"/home/raihan/Desktop/Codeforces/B_Alice_s_Adventures_in_Permuting.py"
test = (int) (input())

for _ in range(test):
    n, b, c = map(int, input().split())
    tot = c + (n - 1) * b
    if tot < n - 2:
        print(-1)
    else:
        ans = int (0)
        if c > n:
            ans = n
        elif b != 0:
            ans = (n - c) / b
            ans = n - ans
            # if c % b != 0:
            #     ans += 1
        else:
            ans = n - 1


        print(int (ans))

"/home/raihan/Desktop/Codeforces/B_Aliquot_Sum.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


set<int> divisors(int n){
    set<int> s;
    for(int i = 1; i * i <= n; i++){
        if(n % i)continue;
        s.insert(i);
        s.insert(n / i);
    }
    return s;
}


void sukuna(int test){
    lin(n);
    int sum = -n;
    for(auto i : divisors(n))sum += i;

    if(sum == n)cout << "perfect" << endl;
    else if(sum > n)cout << "abundant" << endl;
    else cout << "deficient" << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_All_Distinct.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    map<int, int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
    }
    int cnt = 0;
    for(auto a : mp){
        if(a.second > 1)cnt += a.second - 1;
    }

    if(cnt & 1)cnt++;
    n -= cnt;
    cout<<n<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_All_Pairs_Segments.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n), q(k);
    map<int, int> mp;
    forn(i,n)cin >> v[i];
    forn(i,k)cin >> q[i];
    for(int i = 0, p = n - 1; i < n - 1; i++){
        mp[v[i]] += p--;
    }

    for(int i = n - 1, p = n - 1; i > 0; i--){
        mp[v[i] + 1] -= p--;
    }

    int m = mp.size();
    vector<pr> nums;
    for(auto i : mp){
        nums.push_back({i.first, i.second});
    }

    // mprint(mp);nl;

    for(int i = 1; i < m; i++){
        nums[i].second += nums[i - 1].second;
    }
    map<int, int> ans;
    // mprint(nums);nl;

    for(int i = 0; i < m - 1; i++){
        ans[nums[i].second] +=nums[i + 1].first - nums[i].first;
    }
    // mprint(ans);

    for(auto i : q){
        cout << ans[i] <<" ";
    }nl;

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Anatoly_and_Cockroaches.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n;
string s;

int func1(){
    string str = s;
    int ans = 0;
    bool flg = true;

    for(int i = 0; i < n; i++){
        if(flg){
            if(str[i] == 'b');
            else{
                if(str[i + 1] == 'b')swap(str[i], str[i + 1]);
                else str[i] = 'b';
                ans++;
            }
        }
        else{
            if(str[i] == 'r');
            else{
                if(str[i + 1] == 'r')swap(str[i], str[i + 1]);
                else str[i] = 'r';
                ans++;
            }
        }
        flg = !flg;
    }

    for(int i = 1; i < n; i++){
        if(str[i] == str[i - 1])return INF;
    }

    return ans;
}


int func2(){
    string str = s;
    int ans = 0;
    bool flg = true;

    for(int i = 0; i < n; i++){
        cout << str << " " << ans << endl;
        if(flg){
            if(str[i] == 'r');
            else{
                if(str[i + 1] == 'r')swap(str[i], str[i + 1]);
                else str[i] = 'r';
                ans++;
            }
        }
        else{
            if(str[i] == 'b');
            else{
                if(str[i + 1] == 'b')swap(str[i], str[i + 1]);
                else str[i] = 'b';
                ans++;
            }
        }
        flg = !flg;
    }

    for(int i = 1; i < n; i++){
        if(str[i] == str[i - 1])return INF;
    }

    return ans;
}

int32_t main(){
    fast_in_out;
    cin >> n >> s;

    cout << min(func1(), func2()) << endl;
}

"/home/raihan/Desktop/Codeforces/B_And_It_s_Non_Zero.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int l, r;

int func(int x, int j){
    return (x >> j + 1 << j) + min((x % (1 << j + 1)), (1 << j) * 1ll);

}

void sukuna(){
    cin >> l >> r;
    int ans = INF;
    for(int i = 0; i < 20; i++){
        ans = min(ans, func(r + 1, i) - func(l, i));
    }

    cout << ans <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_AND_Reconstruction.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n - 1), ans(n);
    forn(i,n - 1){
        cin >> v[i];
        ans[i] |= v[i];
        ans[i + 1] |= v[i];
    }

    forn(i,n - 1){
        if((ans[i] & ans[i + 1]) != v[i]){
            cout<<-1<<endl;
            return;
        }
    }
    print(ans);   
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Angry_Monk.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int k, n;
    cin >> k >> n;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int ans = 0;
    for(int i = 0; i < n - 1; i++){
        ans += 2 * v[i] - 1;
    }
    cout<<ans<<endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Appleman_and_Card_Game.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    int n, k, ans = 0;
    cin>>n>>k;
    string str;
    cin>>str;
    vector<int> v(26);
    for(int i = 0; i < str.size(); i++){
        v[str[i] -  65]++;
    }
    sort(v.rbegin(), v.rend());
    
    for(int i = 0; k > 0; i++){
        if(v[i] >= k){
            ans += k * k;
            break;
        }
        else{
            ans += v[i] * v[i];
            k -= v[i];
        }
    }
    cout<<ans<<endl;
    


    
}

"/home/raihan/Desktop/Codeforces/B_Applying_MAX_to_Segment.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);
 
int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        // tree[node] += dx * (hi - lo + 1);
        tree[node] = max(dx, tree[node]);

        if(lo != hi){
            lazy[2 * node] = max(dx, lazy[2 * node]);
            lazy[2 * node + 1] = max(dx, lazy[2 * node]);
        }
    }
    
    if(lo > r or hi < l)return 0;
    if(lo >= l and hi <= r)return tree[node];
 
    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);
 
    return max(q1, q2);
}
 
void update(int node, int lo, int hi, int &l, int &r, int &val){
 
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        // tree[node] += dx * (hi - lo + 1);
        tree[node] = max(dx, tree[node]);

        if(lo != hi){
            lazy[2 * node] = max(dx, lazy[2 * node]);
            lazy[2 * node + 1] = max(dx, lazy[2 * node]);
        }
    }
    
    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        tree[node] = max(tree[node], val);
        
        if(lo != hi){
            lazy[2 * node] = max(val, lazy[2 * node]);
            lazy[2 * node + 1] = max(val, lazy[2 * node]);
        }
        return;
    }
 
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);
 
    tree[node] = max(tree[2 * node], tree[2 * node + 1]);
}
 
 
void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }
 
    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);
 
    tree[node] = tree[2 * node] + tree[2 * node + 1];
}
 

int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;

    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l;
            cout << query(1, 0, n - 1, l, l) << endl;
        }
    }    
}

"/home/raihan/Desktop/Codeforces/B_Collatz_Conjecture.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);



void sukuna()
{
    int x, y, k;
    cin>>x>>y>>k;

    if(y == 2){
        if(x >= 2){
            // k += x;
            if(x % 2 == k % 2)cout<<2<<endl;
            else cout<<3<<endl;
        }
        else{
            cout<<1<<endl;
        }
        return;
    }

    int rem;
    int xx = x + k;

    while(x != 1){
        rem = y - x % y;
        k -= rem;
        if(k < 0){
            k += rem;break;
        }
        if(x == y && y == 2)break;

        x += rem;
        x /= y;
    }
    // cout<<x<<' '<<y<<' '<<k<<endl;
    if(k == 0){
        if(x > y)x /= y, x++;
        else if(x == y)x = 1;
        

        cout<<x<<endl;
        return;
    }

    x +=k;
    if(xx == x){
        cout<<x<<endl;
        return;
    }

    int ans = x % (y - 1);
    if(ans == 0)ans = y - 1;
    cout<<ans<<endl;
    // nl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Collecting_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    map<int, int> m;
    vin v(n), pf(n), a(n);
    
    forn(i,n)cin>>a[i];

    v = a;
    sort(all(v));

    pf[0] = v[0];

    for(int i = 1; i < n; i++){
        pf[i] = pf[i - 1] + v[i];
    }


    for(int i = 0, j = 0; i < n; i++){
        if(j <= i)j = i;
        while(v[j + 1] <= pf[j] && j < n - 1){
            j++;
        }
        m[v[i]] = j;
    }
    

    for(int i = 0; i < n; i++){
        cout<<m[a[i]]<<" ";
    }    
    nl;
  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Collecting_Packages.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;
    sort(all(v));

    for(int i = 1; i < n; i++){
        if(v[i].second < v[i - 1].second){
            no; return;
        }
    }
    string ans;
    for(int i = 0, x = 0, y = 0; i < n; i++){
        while(x < v[i].first)ans.push_back('R'), x++;
        while(y < v[i].second)ans.push_back('U'), y++;
    }
    yes;
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Come_Together.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll xa,ya,xb,yb,xc,yc,ans;
    cin>>xa>>ya>>xb>>yb>>xc>>yc;
    
    ll x1,y1,x2,y2,s=0,r=0,m=0,n=0;
    x1=xb-xa; x2=xc-xa;
    y1=yb-ya; y2=yc-ya;
    
    if(x1*x2>0)s+=min(abs(x1),abs(x2)); 
    if(y1*y2>0)r+=min(abs(y1),abs(y2));
    
    if(xa==xb && xb==xc && ya == yb && yb== yc && xa==ya)cout<<"0";
    else cout<<s+r+1;nl;

    return 0;
}

int main()
{
    fast_in_out;
   int test; cin>>test;
   while(test--)solve();
   return 0;
}

"/home/raihan/Desktop/Codeforces/B_Consecutive_Points_Segment.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int cnt = 0;
    for(int i = 1; i < n; i++){
        cnt += (v[i] - v[i - 1]);
        cnt--;
    }
    if(cnt > 2)no;
    else yes;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_CopyCopyCopyCopyCopy.cpp"
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i, e) for (ll i = 0; i < e; i++)
#define rforn(i, s) for (ll i = s - 1; i >= 0; i--)
#define yes cout << "YES" << endl
#define no cout << "NO" << endl
#define nl cout << "\n"

int killme()
{
    int n;

    cin >> n;
    int arr[n];
    forn(i, n) cin >> arr[i];
    sort(arr, arr + n);
    int m = n;

    for (ll i = 1; i < n; i++)
    {
        if (arr[i] == arr[i - 1])
            m--;
    }
    cout << m;
    nl;
    return 0;
}

int main()
{
    int test;
    cin >> test;
    while (test--)
    {
        killme();
    }
    return 0;
}

// Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Corner_Twist.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void operation(char &ch, int x){
    ch = char('0' + (ch - 48 + x) % 3);
}

void solve(){
    int n, m;
    cin >> n >> m;
    vector<string> a(n), b(n);
    forn(i,n)cin >>a[i];
    forn(i,n)cin >> b[i];
    
    for(int i = 0; i < n - 1; i++){
        for(int j = 0; j < m - 1; j++){
            while(a[i][j] != b[i][j]){
                operation(a[i][j], 1);
                operation(a[i + 1][j + 1], 1);
                operation(a[i][j +  1], 2);
                operation(a[i + 1][j], 2);
            }
        }
    }
    if(a == b)yes;
    else no;    
}

int32_t main(){
    fast_in_out;

    int t;	cin>>t;
    while(t--)solve();
}

"/home/raihan/Desktop/Codeforces/B_Counting_Rectangles_is_Fun.cpp"

"/home/raihan/Desktop/Codeforces/B_Crafting.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(v)             forn(i,n)cout << v[i].first <<" ";nl; forn(i,n)cout << v[i].second <<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    sort(all(v), [](pr &a, pr &b){
        return (a.second - a.first) < (b.second - b.first);
    });

    int cnt = 0, rem = 0;
    for(auto i : v)if((i.first - i.second) < 0)cnt++, rem = (i.second - i.first);
    if(cnt > 1){no; return;}

    for(auto &i : v){

        if((i.first - i.second) >= 0)i.first -= rem;
        else i.first += rem;
    }

    for(auto i : v){
        if(i.first < i.second){no; return;}
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Creating_the_Contest.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n;
vin v, dp(N, -1);

int recur(int ind){
    if(ind == n)return 1;
    if(dp[ind] != -1)return dp[ind];

    int next_ind = upper_bound(all(v), v[ind]) - v.begin();
    
    if(next_ind == n)return 1;
    if(v[next_ind] > 2 * v[ind])return 1;

    return dp[ind] = 1 + recur(next_ind);
}

int32_t main(){
    fast_in_out;
    cin >> n;

    forn(i,n){
        lin(x);
        v.push_back(x);
    }

    int ans = 0;
    for(int i = 0; i < n; i++){
        ans = max(ans, recur(i));
    }
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/B_Cutting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, b;
    cin >> n >> b;
    vin v(n), ans;
    forn(i,n)cin >> v[i];
    v.pb(0);
    int cnt = 0;
    for(int i = 0; i < n; i++){
        if(v[i] & 1)cnt--;
        else cnt++;
        if(cnt == 0){
            ans.push_back(abs(v[i] - v[i + 1]));
        }
    }
    ans.pp;
    sort(all(ans));
    int sum = 0; cnt = 0;
    for(int i = 0; i < ans.size(); i++){
        sum += ans[i];
        if(sum > b)break;
        cnt++;
    }
    cout<<cnt<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Diameter_of_Graph.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int op(int n){
    if(n < 3)return n - 1; 
    return n + ((n - 3) * n / 2);
}

void sukuna(){
    int n, m, d;
    cin >> n >> m >> d;
    if(d < 2){no; return;}
    if(op(n) < m){no; return;}
    if(m < (n - 1)){no; return;}
    if(d >= 4){yes; return;}
    if(d == 3){
        if(op(n) <= m)yes;
        else no;
        return;
    }
    if(d == 2){
        if(n == 1)yes;
        return;
    }
    no;   
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Difference_of_GCDs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, l, r;
    cin >> n >> l >> r;

    bool flg = 0;
    for(int i = 1; i <= n; i++){
        if(r / i * i < l)flg = 1;
    }
    if(flg){no; return;}

    yes;
    for(int i = 1; i <= n; i++){
        cout << r / i * i << " ";
    }
    nl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Digits.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, d;

int query(int dig){
    if(dig == 1)return true;
    if(dig == 5)return d == 5;

    if(dig == 3){
        if(d % 3 == 0)return true;
        return n >= 3;
    }

    if(dig == 7){
        if(d == 7)return true;
        return n >= 3;
    }

    if(d == 9)return true;
    if(d % 3 == 0)return n >= 3;
    return n >= 6;
}


void sukuna(int test){
    cin >> n >> d;
    for(int i = 1; i < 10; i += 2){
        if(query(i))cout << i <<" ";
    }nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Distances_to_Zero.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin v(n), zero;
    forn(i,n){
        cin >> v[i];
        if(v[i] == 0)zero.pb(i);
    }

    // print(zero);
    int m = zero.size();
    for(int i = 0; i < n; i++){
        int lb = lower_bound(all(zero), i) - zero.begin();
        if(zero[lb] == i){cout << 0 <<" "; continue;}
        if(lb == 0){
            cout << abs(i - zero[lb]) <<" ";
            continue;
        }
        if(lb == m){
            cout << abs(i - zero[--lb]) <<" ";
            continue;
        }
        int x = abs(i - zero[lb]);
        int y = abs(i - zero[--lb]);
        cout << min(x, y) <<" ";
    }

    
}

"/home/raihan/Desktop/Codeforces/B_Divisor_Subtraction.cpp"
#include<bits/stdc++.h>
using namespace std;
#define int  long long

int op(int &n){
    int pm = 0;
    for(int i = 2; i * i <= n; i++){
        if(n % i == 0){
            pm = i;
            break;
        }
    }
    if(pm == 0)pm = n;
    return n - pm;
}

int32_t main(){
    int n;
    cin >> n;
    int ans = 0;
    if(n & 1){ans = 1; n = op(n);}
    ans += n / 2;

    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/B_Equalize.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v;
    set<int> s;
    forn(i,n){
        lin(x);
        s.insert(x);
    }
    for(auto a : s)v.push_back(a);

    int ans = 1, m = v.size();

    for(int i = 0; i < m; i++){
        int up = upper_bound(all(v), v[i] + n - 1) - v.begin();
        ans = max(ans, up - i);
    }
    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Equalize_by_Divide.cpp"

"/home/raihan/Desktop/Codeforces/B_Equal_Rectangles.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    n <<= 2;

    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int area = v.front() * v.back();

    for(int i = 0, j = n - 1; i < j; i+= 2, j -= 2){
        if(v[i] != v[i + 1] || v[j] != v[j - 1] || (v[i] * v[j]) != area){
            no;
            return;
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Equal_XOR.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()

#define F                  first
#define S                  second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int hoh()
{
    int n,k,i,j,x=0,m,nn,y;
    cin>>n>>k;
    vin v1(n),v2(n),pr1,pr2;
    int arr[n+1]={0};
    forn(i,n)
    {
        cin>>v1[i];
        arr[v1[i]]++;
    }
    forn(i,n)cin>>v2[i];
    
    sort(v1.begin(),v1.end());
    sort(v2.begin(),v2.end());
    
    forn(i,n-1)
    {
        if(v1[i]==v1[i+1])
        {
            v1[i]=0; v1[i+1]=0;
        }
    }

    forn(i,n-1)
    {
        if(v2[i]==v2[i+1])
        {
            v2[i]=0; v2[i+1]=0;
        }
    }

    for(i=1;i<=n;i++)
    {
        if(arr[i]==2)
        {
            pr1.pb(i);
            pr1.pb(i);
        }

        if(arr[i]==0){ pr2.pb(i); pr2.pb(i);}
    }
    sort(v1.begin(),v1.end());
    sort(v2.begin(),v2.end());

    int s=pr1.size();
    
    if(s>0)
    {
        for(i=0;i<s;i++)
        {
            v1.pb(pr1[i]);
            v2.pb(pr2[i]);
        }
    }

    n=v1.size();
    for(i=n-1;i>=n-(2*k);i--)
    {
        cout<<v1[i]<<" ";
    }nl;

    for(i=n-1;i>=n-(2*k);i--)
    {
        cout<<v2[i]<<" ";
    }nl;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)hoh();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Them_Odd.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int div(int n){
    int cnt = 0;
    while(n % 2 == 0){
        n /= 2;
        cnt++;
    }
    return cnt;
}

void sukuna(){
    lin(n);
    vin v;
    map<int, int> mp;
    forn(i,n){
        lin(x);
        if(x % 2 == 0)v.pb(x), mp[x]++;
    } n = v.size();

    if(v.size() == 0){
        cout<<0<<endl;
        return;
    }
    sort(all(v));
    int rng = v.back();

    for(int i = 0; i < n; i++){
        int x = v[i]; x <<= 1;
        for(; x <= rng; x <<= 1){
            if(mp[x] > 0){
                mp[v[i]] = 0;
                break;
            }
        }
    }
    int ans = 0;

    for(auto a : mp){
        if(a.second == 0)continue;
        ans += div(a.first);
    }

    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Three_Regions.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, sum = 0;
    cin >> n;
    string a, b;
    cin >> a >> b;

    for(int i = 0; i < n - 2; i++){
        if(a[i] == 'x' && a[i + 1] == '.' && a[i + 2] == 'x' && b[i] == '.' &&  b[i + 1] == '.' && b[i + 2] == '.')sum++;

        if(b[i] == 'x' && b[i + 1] == '.' && b[i + 2] == 'x' && a[i] == '.' && a[i + 1] == '.' && a[i + 2] == '.')sum++;

    }  
    cout<<sum<<endl; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Three_Regions.java"
import java.util.*;

public class B_Make_Three_Regions {
    static Scanner in = new Scanner(System.in);

    static void solve(){
        int n = in.nextInt();
        String a = in.next();
        String b = in.next();
        
        int ans = 0;

        for(int i = 0; i < n - 2; i++){
            if(a.charAt(i) == 'x' && a.charAt(i + 1) == '.' && a.charAt(i + 2) == 'x' && b.charAt(i) == '.' && b.charAt(i + 1) == '.' && b.charAt(i + 2) == '.')ans++;
            if(b.charAt(i) == 'x' && b.charAt(i + 1) == '.' && b.charAt(i + 2) == 'x' && a.charAt(i) == '.' && a.charAt(i + 1) == '.' && a.charAt(i + 2) == '.')ans++;
        }
        System.out.println(ans);
    }

    public static void main(String[] args) {
        int test = in.nextInt();
        while (test > 0) {
            test--;
            solve();
        }
    }
}

"/home/raihan/Desktop/Codeforces/B_Make_Three_Regions.py"
test = int(input())
for _ in range(test):
    n = int(input())
    ans = 0
    a = input()
    b = input()
    
    for i in range (n - 2):
        if a[i] == 'x' and a[i + 1] == '.' and a[i + 2] == 'x' and b[i] == '.' and b[i + 1] == '.' and b[i + 2] == '.':
            ans += 1
        if b[i] == 'x' and b[i + 1] == '.' and b[i + 2] == 'x' and a[i] == '.' and a[i + 1] == '.' and a[i + 2] == '.':
            ans += 1
    print(ans)

"/home/raihan/Desktop/Codeforces/B_Matrix_Stabilization.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void chk(vector<vector<int>> &v, int i, int j, int n, int m){
    
    int a = v[i][j];
    vector<int> x;

    if(i != n - 1) x.push_back(v[i + 1][j]); 
    if(i != 0) x.push_back(v[i - 1][j]);

    if(j != m - 1) x.push_back(v[i][j + 1]); 
    if(j != 0) x.push_back(v[i][j - 1]);

    sort(x.rbegin(), x.rend());

    if(!x.empty())
    if(x[0] < v[i][j])v[i][j] = x[0];
    
}




void sukuna()
{
    int n, m;
    cin>>n>>m;
    vector<vector<int>> v;

    forn(i,n){
        vin vv;
        forn(j,m){
            lin(x);
            vv.push_back(x);
        }
        v.push_back(vv);
    }
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            chk(v, i, j, n, m);            
        }
    }
    chk(v, 0, 0, n, m);

    for(auto a : v){
        print(a);
    }



}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Maximize_Mex.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, x;
    cin >> n >> x;
    vin v(n);
    map<int, int> mp;
    forn(i,n)cin >> v[i], mp[v[i]]++;

    int i = 0;
    for(;; i++){
        if(mp[i] == 1)continue;
        if(mp[i] > 1)mp[i + x] += --mp[i];
        else break;
    }
    cout << i << endl;   
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Maximum_Multiple_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(n);
    int sum = 0, digit =2;

    for(int i = 2; i <=n; i++){
        int s = 0;
        for(int j = 1; j * i <=n; j ++){
            s+= (j * i);
        }
        if(s > sum){
            sum = s;
            digit = i;
        }
    }

    cout<<digit<<endl;

}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Maximum_Product.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
int mx = LONG_LONG_MIN;

void dp(vin &v, int cnt, int sum, int i, int j){
    if(cnt == 5){
        mx = max(sum, mx);
        return;
    }

    dp(v, cnt + 1, sum * v[i], i+1, j);
    dp(v, cnt + 1, sum * v[j], i, j-1);
}




void sukuna()
{
    int n, nag = 0, ans = 1;
    cin >> n;
    vin v(n);
    forn(i,n){
        cin>>v[i];
    }
    sort(all(v));
    // print(v);
    dp(v, 0, 1, 0, n - 1);
    cout<<mx<<endl;
    mx = LONG_LONG_MIN;    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Maximum_Strength.cpp"

/*
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▓▓▓▓▓▓████████████████████▓▓▓▓▓▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░▒▒▒▓▓▓██████████████████████████████████████████████████▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░▒▒▒▒▓███████████████████████████████████████████████████████████████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░▒▓████████████████████████████████████████████████████████████████████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░▓██████████████████████████████████████████████████████████████████████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░▒█████████████████████████████████████████████████████████████████████████████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░▒▒▒▒▒▓██████████████████████████████████████████████████████████████▓▓███████████████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░▒▒▒▓▓████████████████████████████████████████████████████▓▓▓███░░░░░░▒██▓░░░░░▓███████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░▒▓█████████▓█████████████████████████████████████▒░░░░░▒█▒░░░▒▓▓▓▓█▒░░░░░▒█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░▒▒▓▓▓▓███████████████████████████████████████████████▓▓▓█▓░░░░░░░█▒░░▒█░▒▒░░░▒▓▒▒▒░░░▒▓██████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░▒▓█████████████████████████████████████████████▓░░░░▒█░░░░░░░▓▓░░▒█▒░░░░░░░░░░░░░░░▒███████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░▒▒▓███████████████████████████████████████████▓░░░░░░▓▓░░░░░░░█░░░██▓░░░░░░░░░░░░░░░▓████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░▒▒▒▓▓▓▓▓▓▓███▓▓▓▓▓████████████▓▓▒▒▒░░░░░░░░░▒███░░░░░░░░▒█░░░░░░▒░░░░▒███▓▒▒▒░▒▓░░░░░░░█████████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░▒▒▒▓▓▓▓▓▓▓█████████████████████▓▒░░░░░░░░░░░░███▒░▒▒░░░░░░▓░░░░░░░▓░░░░░░▒██████░░░░░░░░░██████████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░▒▒▓██████████████████████████▓░░░░░░░░░░▒███▒░░█░░░░░░▒░░░░░░░█▓░░░░░▓██████░░░░░░░░░▒███████████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓███████████████████████████▓▒░░░░░░░▓███▒░░▓▒░░░░░░▓░░░░░░███▓▓▓████████▓░░░░░░░░░█████████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▒▓████████████████████████████▓▒░░░░░███▒▒░░░▓▓░░░░▒██▓▒▒▓████████▓▒▒▒██░░░░░░░░░░░▒████████████████▓▓▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░▒▒▓▓██████████████████████████████▓░░░▒███░░░░░░▓█████████████████▓░░░░░░▓▒░░░░░░░░░░▓█████████████████████████████████████▓▒░░░░░░░░░░░░
░░░░░░░░░░░░░▒▒▒▒▒▓██████████████████████████████▒░▓███░▒▓████████████████▓▓██▒░░░░░░░░░░░░░░░░░░▒██████████████████████████████████████████▓░░░░░░░░░
░░░░░░░░▒▓████████████████████████████████████████▓████░░░░░░░▒▓▓▒▒░░▒█▒░░░░█▒░░░░░░░░░░░░░░░░░░▓██████████████████████████████████████████████▓░░░░░░
░░░░░░░░░▒▓███████████████████████████████████████▓████░░░░░░░░░░░░░▒█░░░░░░▓░░░░░░░░░░░░░░░░░░████████████████████████████▓▓▓████▓▒░░░░░░░▒▒▓███▓░░░░
░░░░░░▒▒▓██████████████████████████████████████▓▓▒░░████░░░░░░░░░░░░▒░░░░░░░░░░░░░░░░░░░░░░░░▒███████████████████████████████▒░░░░░▒░░░░░░░░░░░░▒▓█▓░░
░░░░░░░▒▒▓▓▓▓▓▓▓████████████████████████████▓▒░░░░░░▓███▓▓░░░░░░░░░░░░░▒░░░░░░░░░░░░░░░░░░░░████▓█████████████████████████▓████▓▒░░░▒▓▓▒░░░░░░░░░░░░▒░
░░░░░░░░░░▒▒▓▓███████████████████████████▓▒░░░░░░░░░░████▒▒▒░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░▓████░░░░▒█████████████████████▓▓░░░▒▒▓█▒░░░░▒▒░░░░░░░░░░░░░
░░░░░░░░░░░░░░▒▓██████████████████████▓▓░░░░░░░░░░░░░░████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓████▓░░░░░░░░▒▓█████████████████████▓░░░░▒▓▒░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▒████████████████████▓▒░░░░░░░░░░░░░░░░░█████▓▒▒░░░░░░░░░░░░░░░░░░░░░░▒▓█████░░░░░░░░░░░░░░▒▓▓█████████████████▓▓▒░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▒▓▓▓▓▓█████████████▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████████████▓██▒░░░░░░░░▒▒▒▒▓████▒░░░░░░░░░░░░░░░░░░░░▒▒▓██████▓▒░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░▒▓▓▓████████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████░░░░░░░░░█▒░░░░░░░░░░░░░▓███░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓█████▒░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░▒▓███████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████░░░░░░░░░█░░░░░░░░░░░░░░▓███░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓████▓▒░░▒▒░░░░░░░░░░░░░░░░░
░░░░░░░░░▒▓▒▒▒▒▒▓▓▓█████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████░░░░░░░░░▓░░░░░░░░░░░░░░▓███░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓███▓▒░░░░░░░░░░░░░░░░░░
░░░░░░░░▒▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓░░░░░░░░░▒░░░░░░░░░░░░░░▒███▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓████▒░░░░░░░░░░░░░░░
░░░░░░░░░▒▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▒░░░░░░░░▒░░░░░░░░░▒░░░░░▒███▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓███▓░░░░░░░░░░░░░
░░░░░░░░░░░░▒▓█████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▒░░░░░░░░▒░░░░░░░░░▓░░░░░▒████▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▓░░░░░░░░░░░
░░░░░░░░▒▒▒▒▒▒███████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████░░░░░░░░░░░░░░░░░░░▓░░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒██░░░░░░░░░░
░░░░░▒▓█████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████░░░░░░░░░░░░░░░░░░░█░░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▒░░░░░░░░
░░░░░░░░▓█████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████░░░░░░░░░░░░░░░░░░░█░░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░▒▓█████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓░░░░░░░░▒░░░░░░░░░▒█░░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░▓▓▓█████▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░▓███▓░░░░░░░░▓░░░░░░░░░▓█░░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓███▓░░░░░░░░█░░░░░░░░░▓█▒░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▒░░░░░░░░█░░░░░░░░░██▒░░░░░▓███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▒░░░░░░░▒█▒░░░░░░░░██▓░░░░░▓███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▒░░░░░░░▓█▓░░░░░░░░███░░░░░▒███▒░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▒░░░░░░░███░░░░░░░▒███░░░░░▒███▓░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒████▒░░░░░░░███░░░░░░░▓███▓░░░░▒███▓░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░▒░▒░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒█████████▓▓████▓▒▒▒▒▒▒█████▓▓███████░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▓▓▓▓▓▓▒▒░░░░▒▒▒░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▓██████████████████████████▓▓▒▒░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░▒▓▓▓▓▓▓▒▒░░░░░▒░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▒▒░░░░▒▒▓▓▓▓▓▒▒░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░▒▒▓▓▓▓▒░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▓▓▓▓▒░░░░░░░▒░░░░░░░░▒▒▒▒▒░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▓▓▓▒░░░░░▒▒▒░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▓▓▒░▒▓▓▓▓▓▓▓▒▒▒░░░░░▒▓▓▓▓▓▓▓▓▓▓▒░░▒▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░▒▒▒▓▓▓▒▒░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░███████████▓░▓███████████▓░░░████████████░░████████████░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████░░░░░░░░░▓████░░░▒█████░░████▒░░░░░░░░░████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▒▒▒▒▒▒░░░▓████░░░░▓████░░█████▓▓▓▓▓▓░░░█████▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████▓░░▓████████████▒░░██████████▓░░░██████████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▒▒▒▒▒▒░░░▓██████████▓░░░░████▒░░░░░░░░░████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████░░░░░░░░░▓████░░▒████▒░░░█████▓▓▓▓▓▓▓░░█████▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████░░░░░░░░░▒███▓░░░░▓███▓░░▓███████████░░▓███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░▒▒▒▒░░░░░░░░▒▒▒▒░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒░░░░░▒▓▓▓▓▓▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒░░░▒▒▒▒░░░░░░▒▒▒▒░░░▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓███████████▓░░░░░░░██████░░░░░░▒████░░░░░░░░▒███████████░░▒██████████▒░█████████████░▒███▓░░▒█████░░░░▒████░░░███████████▓░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓████░░░▒█████░░░░░███████▓░░░░░▒████░░░░░░░░▒███▓░░░░░░░░░████▒░░░░▒▒░░░░░░▓███▓░░░░░▒███▓░░▒██████▒░░▒████░░░████░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓████░░░░▓████░░░░████▒▒███▓░░░░▒████░░░░░░░░▒████▓▓▓▓▓▓░░░█████▓▓▒▒░░░░░░░░▓███▓░░░░░▒███▓░░▒████████▒▒████░░░████▓▓▓▓▓▓▒░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓████▓▓▓█████▒░░░▓███▒░░████▓░░░▒████░░░░░░░░▒██████████░░░░▒▓████████▓░░░░░▓███▓░░░░░▒███▓░░▒████▒█████████░░░██████████▒░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓██████████▒░░░░▓████████████▒░░▒████░░░░░░░░▒███▓░░░░░░░░░░░░░░░░▒████▒░░░░▓███▓░░░░░▒███▓░░▒████░░▓███████░░░████░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓████░░░░░░░░░░▓████▓▓▓▓▓▓████░░▒████▓▓▓▓▓▓▓░▒████▓▓▓▓▓▓▓▒░███▓▓▓▓▓████░░░░░▓███▓░░░░░▒███▓░░▒████░░░░██████░░░████▓▓▓▓▓▓▓▓░░░░░░░░░░░░
░░░░░░░░░░░░░░░▓███▓░░░░░░░░░▒████░░░░░░░▒████░▒██████████▓░▒███████████▒░▓▓███████▓▒░░░░░░▒███▓░░░░░▒███▓░░▒████░░░░░▒████░░░███████████▓░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

*/



#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    string l,r,x;
    cin>>l>>r;

    ll f=r.size(),s=l.size(),ans=0,i,p=f-1;
    forn(i,f-s)x+="0";
    x+=l; l=x;

    for(i=f-1;i>=0;i--)
    {
        if(r[i]>l[i])p=i;
    }

    for(i=f-1;i>=0;i--)
    {
        if(i>p)ans+=9;
        else ans+=r[i]-l[i];
    }
    cout<<ans;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Maximum_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin vv(n), v;
    
    forn(i,n)cin >> vv[i];
    sort(all(vv));

    int i = 0;
    for(; i <= n / 2; i += 2){
        v.push_back(vv[i] + vv[i + 1]);
    }
    for(; i < n; i++)v.push_back(vv[i]);
    n = v.size();



    int sum = accumulate(all(v), 0LL);
    int sum1 = sum, sum2 = sum;

    forn(i,k)sum1 -= v[i];
    for(int j = n - 1; j >= n - k; j--)sum2 -= v[j];
    int j = n - 1; i = 0;

    while (k--){
        if(v[j] <= v[i]){
            sum -= v[j];
            j--;
        }else{
            sum -= v[i];
            i++;
        }
    }

    // print(vv);
    // print(v);
    
    cout<<max(sum, max(sum1, sum2))<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Medians.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    if(n == 1){
        cout <<"1\n1" << endl;
        return;
    }
    if(k == 1 or k == n){
        cout << -1 << endl;
        return;
    }

    if(k & 1){
        cout << 3 <<endl;
        cout << 1 <<" " << k - 1 <<" " << k + 2<< endl;
    }else{
        cout << 3 << endl;
        cout << 1 <<" " << k <<" " <<  k + 1 << endl;
    }

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Mike_and_Children.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    map<int, int> mp;

    int ans = 0;
    for(int i = 0; i < n; i++){
        for(int j = i + 1; j < n; j++){
            mp[v[i] + v[j]]++;
            ans = max(ans, mp[v[i] + v[j]]);
        }
    }

    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/B_Minimise_Oneness.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string ans;
    forn(i,n)ans.pb('0');
    ans[n / 2] = '1';
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Minimize_Equal_Sum_Subarrays.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n), ans(n);
    forn(i,n)cin >> v[i];
    forn(i,n)ans[i] = v[(i + 1) % n];
    print(ans);    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Minimize_Inversions.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i;
        cin>>n;
        int a[n],b[n],arr[n];

        for(i=0;i<n;i++)cin>>a[i];
        for(i=0;i<n;i++)
        {
            cin>>b[i];
            arr[a[i]-1]=b[i];
        }
        for(i=1;i<=n;i++)printf("%d ",i);nl;
        for(i=0;i<n;i++)printf("%d ",arr[i]);nl;

    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Minimum_and_Maximum.cpp"

"/home/raihan/Desktop/Codeforces/B_Mocha_and_Red_and_Blue.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string func(int n, char x){
    bool flg = 1;
    string str;

    if(n & 1 && x == 'B')flg = 0;
    if(n % 2 == 0 && x == 'R')flg = 0;

    for(int i = 0; i < n; i++){
        if(flg)str.push_back('B');
        else str.push_back('R');
        flg = !flg;
    }
    return str;
}

void fck(string &str){
    int n = str.size();
    bool flg = 0;

    for(int i = 0; i < n; i++){
        if(str[i] == '?')flg = 1;
    }
    if(!flg)return;
    for(int i = 0; i < n; i++){
        if(flg)str[i] = 'B';
        else str[i] = 'R';
        flg = !flg;
    }

}

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    char x;
    int ind = 0;
    for(int i = 0; i < n; i++){
        if(str[i] != '?'){x = str[i]; ind = i;}
    }
    bool flg = 1;
    if(x == 'B')flg = 0;
    for(int i = ind + 1; i < n; i++){
        if(flg)str[i] = 'B';
        else str[i] = 'R';
        flg = !flg;
    }

    for(int i = 0; i < ind; i++){
        if(str[i] != '?')continue;
        int j = i, cnt = 0;
        char c;
        for(; i <= ind; i++){
            if(str[i] != '?'){
                c = str[i];
                break;
            }
            cnt++;
        }
        string ans = func(cnt, c);
        for(int k = 0;j < i; k++, j++){
            str[j] = ans[k];
        }
    }

    fck(str);
    cout << str <<endl;
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Monsters.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;

    vin v(n);
    forn(i,n){
        cin >> v[i];
        v[i] %= k;
        if(!v[i])v[i] = k;
    }
    vector<int> ord(n);
    forn(i,n)ord[i] = i;
    stable_sort(ord.begin(), ord.end(), [&](int i, int j) {
      return v[i] > v[j];
    });

    for(auto i : ord) cout << i + 1 << " "; nl;

    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Shohag_Loves_Strings.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str;
    cin >> str;
    int n = str.size();
    for(int i = 0; i < n - 1; i++){
        if(str[i] == str[i + 1]){
            cout << str[i]<< str[i] << endl;
            return;
        }
    }
    for(int i = 0; i < n - 2; i++){
        if(str[i] != str[i + 1] and str[i] != str[i + 2]){
            cout << str[i] << str[i + 1] << str[i + 2] << endl;
            return;
        }
    }
    cout << -1 << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Shower_Line.cpp"

"/home/raihan/Desktop/Codeforces/B_Sorted_Adjacent_Differences.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    vin f, l;
    bool odd = 0;
    if(n & 1)odd = 1;
    for(int i = 0, j = n / 2 + odd; i < n / 2; i++, j++){
        f.pb(v[i]);
        l.pb(v[j]);
    }
    reverse(all(l));
    
    if(odd)cout<<v[n / 2]<<' ';

    for(int i = 0 ; i < n / 2; i++){
        cout<<f.back()<<" "<<l.back()<<' ';
        f.pp; l.pp;
    }
    nl;


    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Sort_the_Array.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
#define yes                cout<<"yes\n"
#define no                 cout<<"no\n"
const int M = 1e9 + 7;



int32_t main(){
    int n, x = 1, y = 1, cnt = 0;
    cin>>n;
    vector<int> v(n); v.push_back(1e9 + 10);
    for(int i = 0; i < n; i++)cin>>v[i];
    if(n == 1){
        yes;
        cout<<1<<' '<<1<<endl;
        return 0;
    }

    for(int i = 0; i < n - 1; i++){
        
        if(v[i] > v[i + 1]){
            x = i + 1;
            cnt ++;
            while(v[i] >= v[i + 1])i++;
            y = i + 1;
        }
        if(cnt > 1){
            no;
            return 0;
        }
    }

    reverse(v.begin() + x - 1, v.begin() + y);
    // print(v);
    for(int i = 0; i < n; i++){
        if(v[i] > v[i + 1]){
            no;
            return 0;
        }
    }
    yes;
    cout<<x<<' '<<y<<endl;
    
}

"/home/raihan/Desktop/Codeforces/B_Sort_the_Subarray.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin a(n), b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    int l = 0, r = n - 1;
    while(a[l] == b[l] && l < n)l++;
    while(a[r] == b[r] && r >= 0)r--;
    for(; l > 0; l--){
        if(b[l] < b[l - 1])break;
    }
    for(; r < n; r++){
        if(b[r] < b[r - 1])break;
    }

    cout<<l + 1<<" "<<r<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Special_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, a, b;
    cin >> n >> a >> b;
    int m = n / 2;
    if((a <= m && b <= m) || (a > m && b > m)){
        cout<<-1<<endl;
        return;
    }
    if(a > m && a != m + 1){
        cout<<-1<<endl;
        return;
    }
    if(b <= m && b != m){
        cout<<-1<<endl;
        return;
    }
    
    set<int> s;
    int cnt = 1;
    cout<<a<<' ';
    s.insert(a);
    for(int i = n; i > a && cnt < m; i--){
        if(i == b)continue;
        cnt++;
        cout<<i<<' ';
        s.insert(i);
    }
    for(int i = 1; i <= n; i++){
        if(s.count(i) == 0)cout<<i<<" ";
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Split_a_Number.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
#define all(v) v.begin(), v.end()
const int M = 1e9 + 7;
const int N = 2e5 + 10;

int n;
string str, INF;

void strPrint(string str){
	for(auto i : str)cout << (int) i; cout << endl;
}

bool cmp(string &a, string &b){
	if(a.size() != b.size())return a.size() > b.size();
	for(int i = 0; i < a.size(); i++){
		if(a[i] != b[i])return a[i] > b[i];
	}
	return false;
}

string func(int mid){
	if(str[mid] == '0')return INF;
	string left, right;
	for(int i = 0; i < mid; i++)left.push_back(str[i] - '0');
	for(int j = mid; j < n; j++)right.push_back(str[j] - '0');


	reverse(all(left)); reverse(all(right));
	int n = left.size(), m = right.size();

	if(n < m)left.append(m - n, 0), n = m;

	int carry = 0, s;
	for(int i = 0; i < n; i++){
		if(i < m){
			s = left[i] + right[i] + carry;
		}else{
			s = left[i] + carry;
		}

		carry = s / 10;
		left[i] = s % 10;
	}
	if(carry)left.push_back(carry);
	reverse(all(left));

	return left;
}


int32_t main(){
	cin >> n >> str;
	INF.append(n + 10, 9);
	string ans;
	for(auto i : str)ans.push_back(i - '0');

	int mid = n / 2;

	for(int i = mid, cnt = 0; i > 0 and cnt < 10; i--){
		if(str[i] != '0'){
			string temp = func(i);
			if(cmp(ans, temp))ans = temp;
			cnt++;
		}
	}

	for(int i = mid + 1, cnt = 0; i < n and cnt < 10; i++){
		if(str[i] != '0'){
			string temp = func(i);
			if(cmp(ans, temp))ans = temp;
			cnt++;
		}
	}

	strPrint(ans);	
}

"/home/raihan/Desktop/Codeforces/B_Square_or_Not.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Yes\n";
#define no                 cout<<"No\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    double nn = sqrt(n * 1.0);
    if(nn != (int)nn){
        no;
        return;
    }
    n = nn;
    vector<string> v;
    string temp;
    for(int i = 0; i < n * n; i++){
        temp.push_back(str[i]);
        if((i + 1) % n == 0){
            v.push_back(temp);
            temp.clear();
        }
    }
    bool ck = 1;
    for(auto i : v.front())if(i == '0')ck = 0;
    for(auto i : v.back())if(i == '0')ck = 0;
    for(int i = 0; i < n; i++)if(v[0][i] == '0')ck = 0;
    for(int i = 0; i < n; i++)if(v[n - 1][i] == '0')ck = 0;

    if(ck == 0){no; return;}

    for(int i = 1; i < n - 1; i++){
        for(int j = 1; j < n - 1; j ++){
            if(v[i][j] == '1'){
                no;
                return;
            }
        }
    }
    yes;



    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Stalin_Sort.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int op(vin &v){
    int mx = *max_element(all(v));
    int ans = 0, ind = 0;
    for(int i = 0; v[i] < mx && i < v.size(); i++)ans++;
    ind = ans;
    v.erase(v.begin() + ind);
    
    return ans;
}

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    
    int ans = INF;
    int cnt = 0;
    while(!v.empty()){
        ans = min(ans, cnt + op(v));
        cnt++;
    }

    cout << ans << endl;

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Stand_up_Comedian.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int a, b, c, d;
    cin >> a >> b>> c >> d;
    if(a == 0){
        cout<<1<<endl;
        return;
    }
    cout<<a + min(b, c) * 2 + min(a + 1, abs(b - c) + d)<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Startup.c"
#include<stdio.h>
#include<stdlib.h>

int cmp(const void *a, const void *b) {
    return (*(int *)b - *(int *)a);
}

int main(){
    int test;
    scanf("%d",&test);

    for(int t = 0; t < test; t++){
        int n, k;
        scanf("%d %d", &n, &k);

        int map[k + 1];
        //Filled with zero
        for(int i = 0; i <= k; i++)map[i] = 0;
        
        //Input taken
        for(int i = 0; i < k; i++){
            int a, b;
            scanf("%d %d", &a, &b);
            map[a] += b;
        }

        //Sort the map array in descending order
        qsort(map + 1, k, sizeof(int), cmp);


        int ans = 0;
        for(int i = 1; i <= k; i++){
            ans+= map[i]; n--;
            if(n == 0)break;
        }

        printf("%d\n", ans);
    }

}

"/home/raihan/Desktop/Codeforces/B_Startup.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    map<int,int>mp;
    for(int i = 0; i < k; i++){
        int x, y;
        cin >> x >> y;
        mp[x]+= y;
    }

    vector<pr> v;
    for(auto i : mp)v.push_back({i.second, i.first});
    sort(all(v), greater<>());
    int ans = 0;
    for(int i = 0; i < n && i < v.size(); i++)ans += v[i].first;
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_StORage_room.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;
const int INF = 1e18;

void sukuna(){
    lin(n);
    vector<int> v[n], ans(n);

    forn(i,n){
        forn(j,n){
            lin(x);
            v[i].push_back(x);
        }
    }

    int cnt = 0;
    for(int i = 0; i < n; i++){
        int mn = INF;
        for(int j = 0; j < n; j++){
            if(v[i][j] == 0)cnt++;
            if(i == j)continue;
            mn = min(mn, v[i][j]);
        }
        ans[i] = mn;
    }
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            if(i == j)continue;
            if(v[i][j] != (ans[i] | ans[j])){
                cout<<v[i][j]<<" "<<(ans[i] | ans[j])<<endl;
                cout<<i<<" "<<j<<endl;
                no;
                // return;
            }
        }
    }
    yes;
    print(ans);
        
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Strange_List.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, k;

int op(int x){
    int cnt = 0;
    while(x % k == 0){
        cnt++;
        x /= k;
    }
    return cnt;
}

void sukuna(){
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];

    int ind = 0, mn = INF;

    for(int i = 0; i < n; i++){
        if(op(v[i]) < mn){
            mn = op(v[i]);
            ind = i;
        }
    }
    mn++;
    int ans = 0;

    for(int i = 0; i < n && mn > 0; i++){
        if(i < ind)ans += v[i];
        ans += v[i] * mn;
    }
    cout << ans <<endl;
    


}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    string s,t;
    cin>>s>>t;
    int n=s.length(),m=t.length(),i,j,k,l;
    char str[n],str2[n];
    for(i=0,k=0;i<n;i++)
    {
        for(j=i;j<m;j++)
        {
            if(s[i]==t[j])
            {
                str[k]=s[i];
                k++;
                break;
            }
        }
    }
    cout<<str;nl;
    for(i=0,l=0;i<m;i++)
    {
        for(j=i;j<n;j++)
        {
            if(s[j]==t[i])
            {
                str2[l]=s[j];
                l++;
                break;
            }
        }
    }
    cout<<str2; nl;


    return 0;
}



"/home/raihan/Desktop/Codeforces/B_Students_in_Railway_Carriage.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, a , b;
    cin >> n >> a >> b;
    string str;
    cin >> str;
    int t = a + b;
    for(int i = 0; i < n; i++){
        if(a < b)swap(a, b);
        if(str[i] == '*')continue;
        for(;str[i] == '.'; i++, swap(a, b)){
            if(a > 0)a--;
            else a = 0;
        }
    }
    cout << t - a - b << endl;
    
}

"/home/raihan/Desktop/Codeforces/B_Substring_and_Subsequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    string a, b;
    cin >> a >> b;
    int n = a.size(), m = b.size(), ans = 0;

    for(int i = 0; i < m; i++){
        int r = i, cnt = 0;
        for(int j = 0; j < n; j++){
            if(a[j] == b[r]){
                cnt++;
                r++;
            }
        }
        ans = max(ans, cnt);
    }

    cout << m + n - ans <<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Subtract_Operation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n); lin(k);
    set<int> s;
    forn(i,n){
        lin(x);
        s.insert(x);
    }    

    for(auto i : s){
        if(s.count(i - k)){
            yes;
            return;
        }
    }
    no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Summation_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;




void sukuna(){
    int n, k, x, ans = 0, sum = 0, sub = 0;
    cin >> n >> k >> x;
    vin v(n);
    forn(i,n){
        cin>>v[i];
        sum += v[i];
    }
    sort(all(v));
    vin ck = v;
    forn(i,k)ck.pop_back();

    int sum2 = 0;
    for(int i = 0; i < n; i++){
        if(i < (n - x))sum2 += v[i];
        else sum2 -= v[i];
    }

    for(int i = 0, j = ck.size() - 1; i < ck.size() && i < x; i++, j--){
        ans -= v[j];
    }
    ans = max(ans, sum2);

    

    for(int i = n - x; i < n; i++){
        sum -= 2 * v[i];
    }

    int f = n - x - 1, l = n - 1;
    
    for(int i = 0; i < k && f >= 0; i++, f--, l--){

        // cout<<v[f]<<' '<<v[l]<<" "<<sum<<endl;

        sum += v[l];
        sum -=2 * v[f];

        ans = max(ans, sum);
    }
    cout<<ans<<endl;
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Sum_of_Digits.cpp"
// Nothing to say
#include <bits/stdc++.h>
using namespace std;

typedef long double ld;

#define forn(i, e) for (ll i = 0; i < e; i++)
#define rforn(i, s) for (ll i = s - 1; i >= 0; i--)
#define yes cout << "YES" << endl
#define no cout << "NO" << endl
#define nl cout << "\n"
#define ll long long int

int str_to_int(string str)
{
    int sum=0,i;
    for(i=0;i<str.length();i++)
    {
        sum=sum+(str[i]-48);
    }
    return sum;
}

int main()
{
    string str;
    cin>>str;
    if(str.length()==1)cout<<"0";
    else{
    ll n=str_to_int(str);
    ll sum = 0, i;
    for (i = 1; i < n; i++)
    {
        if (n < 10)
            break;
        else
        {
            while (n > 0)
            {
                sum = sum + (n % 10);
                n = n / 10;
            }
            n=sum; sum=0;
        }
    }
    cout<<i;nl;}
}

// Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Sum_of_Two_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

map<int, pr> mp; //LOL Map

int digit_sum(int n){
    int sum = 0;
    while(n > 0){
        sum += n%10;
        n /= 10;
    }
    return sum;
}

void sukuna(){
    int n;
    cin >> n;
    if(n % 2 == 0){
        cout<<n / 2<<' '<<n / 2<<endl;
        return;
    }
    int a = n / 2, b = n / 2 + 1;
    int dif = abs(digit_sum(a) - digit_sum(b));
    if(dif <= 1){
        cout<<a<<" "<<b<<endl;
        return;
    }
    if(mp[n].first != 0 && mp[n].second != 0){
        cout<<mp[n].first<<" "<<mp[n].second<<endl;
        return;
    }
    if(a < b)swap(a, b);
    
    for(int i = 1; i < b; i++){
        a++;
        b--;
        if(abs(digit_sum(a) - digit_sum(b)) <= 1){
            cout<<a<<' '<<b<<endl;
            mp[n] = {a, b};
            return;
        }
    }

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_2_Potions_Hard_Version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    multiset<int> s;
    int sum = 0, sz = 0;

    for(int i = 0; i < n; i++){
        s.insert(v[i]); sz++; sum += v[i];
        if(sum < 0){
            sum -= *s.begin();
            sz--;
            s.erase(s.begin());
        }
    }

    cout << sz << endl; 
}

int32_t main(){
    fast_in_out;

    int test = 1;  // cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_2_Powering_the_Hero_hard_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int ans = 0;
    priority_queue<int> q;
    for(int i = 0; i < n; i++){
        lin(x);
        if(x == 0){
            if(q.empty())continue;
            ans += q.top();
            q.pop();
        }else{
            q.push(x);
        }
    }

    cout << ans << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_2_Shohag_Loves_XOR_Hard_Version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_3_SUM_Closure.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    lin(n);
    vector<ll>v(n);
    set<ll>s;

    forn(i,n)
    {
        cin>>v[i];
        s.insert(v[i]);
    }
    srt(v);
    if(s.count(v[0]+v[1]+v[2])==0 || s.count(v[n-1]+v[n-2]+v[n-3])==0 || s.count(v[0]+v[1]+v[n-1])==0 || s.count(v[0]+v[n-1]+v[n-2])==0){no; return 0;}
    yes;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

/*

                |     set             | unordered_set
---------------------------------------------------------
Ordering        | increasing  order   | no ordering
                | (by default)        |

Implementation  | Self balancing BST  | Hash Table
                | like Red-Black Tree |  

search time     | log(n)              | O(1) -> Average 
                |                     | O(n) -> Worst Case

Insertion time  | log(n) + Rebalance  | Same as search
                      
Deletion time   | log(n) + Rebalance  | Same as search


Search time greater then set in worst case that's the problem

*/

"/home/raihan/Desktop/Codeforces/C_Absolute_Zero.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

int func(vin & v){
    sort(all(v));
    // print(v);
    if(v.front() == v.back())return 0;
    int f = v.back(), s = v.front();
    return (f + s) / 2;
}

void sukuna(){
    lin(n);
    vin v(n), ans, temp(n);
    forn(i,n)cin >> v[i];

    if(n == 1){
        cout<<1<<endl<<v.back()<<endl;
        return;
    }

    int dif = func(v);
    int cnt = 0;
    ans.push_back(dif);

    while(dif != 0 && cnt <= 40){
        for(int i = 0; i < n; i++){
            v[i] = abs(v[i] - dif);
        }

        dif = func(v);
        ans.push_back(dif);
        cnt++;
    }

    if(v.front() != v.back()){
        cout<<-1<<endl;
        return;
    }

    ans.pop_back();
    ans.push_back(v.back());
    cout<<ans.size()<<endl;
    print(ans);

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Absolute_Zero.java"

"/home/raihan/Desktop/Codeforces/C_Action_Figures.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;
    str = "*" + str;

    vin zero, one;
    one.push_back(0);
    for(int i = 1; i <= n; i++){
        if(str[i] == '1')one.push_back(i);
        else zero.push_back(i);
    }

    int zeroSize = zero.size() - 1, oneSize = one.size() - 1, i, j, ans = 0;

    for(i = oneSize, j = zeroSize; i > 0; i--){
        if(j < 0)break;
        vin temp;
        int next = one[i - 1];

        while(j >= 0 && zero[j] > next)temp.push_back(zero[j--]);
        if(temp.size()){
            ans += accumulate(all(temp), 0ll);
        }else{
            ans += zero[j--];
        }

    }
    
    for(int j = 0; j <= (i + 1) / 2; j++)ans += one[j];
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Add_Divide_and_Floor.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int op(int &x, int &y){
    if(x % 2 == y % 2 || x == 0){
        x >>= 1; y >>= 1;
        return 0;
    }
    if(x & 1){
        x = (x + 1) / 2;
        y = (y + 1) / 2;
        return 1;
    }
    x >>= 1; y >>= 1;
    return 0;
}

void sukuna(){
    lin(n);
    vin v(n), ans;
    forn(i,n)cin >> v[i];
    int x = *min_element(all(v));
    int y = *max_element(all(v));
    
    while(x != y){
        if(x > y)swap(x, y);
        ans.push_back(op(x, y));
    }
    cout << ans.size()<<endl;
    if(ans.size() <= n){
        print(ans);
    }
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Add_One.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int recur(int d, int m){
    if(m < 0 and d == 0)return 1;
    if(m < 0)return -1;
    if(m == 0)return 1;

    int left = 1 + recur(1, m + d - 10);
    int right = 1 + recur(0, m + d - 10);

    return left + right;
}

void sukuna(int test){
    int n, m;
    cin >> n >> m;

    cout << recur(0, m) << endl;
    
}


int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

/*
0 = 0
10 = 10
109 = 19
2110 = 20
10998 = 28
2110109 = 29
*/

"/home/raihan/Desktop/Codeforces/C_Add_Zeros.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e5 + 100;

int n;
vin pos, dp(N, -1);
vector<pr> p;

int recur(int ind){
    if(dp[ind] != -1)return dp[ind];
    int next = p[ind].first + p[ind].second;
    int lb = lower_bound(all(pos), next) - pos.begin();

    if(p[lb].first != next)return dp[ind] = next;
    else {    
        int ans = 0;
        while(p[lb].first == next)ans = max(ans, recur(lb++));
        return dp[ind] = ans;
    }
}

void reset(){
    pos.clear(); p.clear();
    for(int i = 0; i <= n; i++)dp[i] = -1;
}

void sukuna(int test){
    cin >> n;
    reset();
    vin v(n);
    forn(i,n)cin >> v[i];
    for(int i = 1; i < n; i++){
        int x = n - i;
        x = v[i] - x;
        if(x < 0)continue;
        p.push_back({x, i});
        pos.push_back(x);
    }
    p.push_back({INF, INF});
    
    sort(all(p));
    sort(all(pos));

    int ans = 0;
    for(int i = 0; i < n; i++){
        if(p[i].first != 0)break;
        ans = max(ans, recur(i));
    }
    cout << n + ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Advantage.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    vin v(n),b(n);
    forn(i,n)
    {
        cin>>v[i];
        b[i]=v[i];
    }
    sort(b.begin(),b.end());
    ll mx=b[n-1],mx2=b[n-2];

    forn(i,n)
    {
        if(v[i]!=mx)cout<<v[i]-mx<<" ";
        else cout<<v[i]-mx2<<" ";
    }
    nl;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Air_Conditioner.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


struct grp{int t, l, r; void display(){cout << t <<" " << l << " " << r << endl;}};


void sukuna(int test){
    int n, temp;
    cin >> n >> temp;
    vector<grp> v(n);
    forn(i,n)cin >> v[i].t >> v[i].l >> v[i].r;

    int prev_time = 0, lo = temp, hi = temp;

    for(int i = 0; i < n; i++){
        int ext = v[i].t - prev_time;
        prev_time = v[i].t;
        
        lo += ext;
        hi -= ext;

        if(lo < v[i].l or hi > v[i].r){no; return;}
        lo = min(lo, v[i].r);
        hi = max(hi, v[i].l);
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Alice_and_the_Cake.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int sum;
map<int, int>mp;
set<int> s;

bool master_chk = true;

bool recur(int sum){
    
    if(!master_chk)return false;
    if(s.count(sum) == 0 && *s.begin() > sum){
        master_chk = false;
        return false;
    }

    if(s.count(sum))
    if(mp[sum] > 0){
        mp[sum]--;
        if(mp[sum] == 0){
            s.erase(sum);
        }
        return true;
    }
    if(sum == 1)return false;

    return recur(sum / 2) & recur((sum + 1) / 2);
}

void sukuna(){
    lin(n);
    sum = 0;
    s.clear();
    mp.clear();
    master_chk = true;
    vin v(n);
    forn(i,n){
        cin >> v[i];
        mp[v[i]]++;
        sum += v[i];
        s.insert(v[i]);
    }

    if(recur(sum))yes;
    else no;   
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Alice_s_Adventures_in_Cutting_Cake.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m, x, tot = 0;
    cin >> n >> m >> x;
    vin v(n + 2), fr(n + 2), bk(n + 2), pff(n + 2), pfb(n + 2);
    Forn(i,n){
        cin >> v[i];
        pff[i] = pff[i - 1] + v[i];
        tot += v[i];
    }
    for(int i = n; i > 0; i--){
        pfb[i] += pfb[i + 1] + v[i]; 
    }
    
    int sum = 0;
    int ans = 0, ans2 = 0, cnt = 0;

    for(int i = 1; i <= n; i++){
        sum += v[i];
        cnt += v[i];
        if(sum >= x){
            fr[i]++;
            sum = 0;
        }
        fr[i] += fr[i - 1];
        if(fr[i] == m){
            ans = max(ans, tot - cnt);
        }
    }

    sum = 0, cnt = 0;
    for(int i = n; i > 0; i--){
        sum += v[i];
        cnt += v[i];
        if(sum >= x){
            bk[i]++;
            sum = 0;
        }
        bk[i] += bk[i + 1];
        if(bk[i] == m){
            ans = max(ans, tot - cnt);
        }
    }
    if(bk[1] < m){
        cout << -1 << endl;
        return;
    }

    for(int i = 1, j = 1; i <= n; i++){
        if(fr[i] + bk[j] > m){
            while(fr[i] + bk[j] >= m and j <= n)j++;
            j--;
            ans = max(ans,tot - (pff[i] + pfb[j]));
        }
    }

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Almost_All_Multiples.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, x;
    cin >> n >> x;
    if(n % x != 0){
        cout << -1 << endl;
        return;
    }

    cout << x << " ";
    for (int i = 2; i < n; ++i) {
        if (i == x){
            int m = 2;
            while ((n / x) % m){
                ++m;
            }
            x *= m;
            cout << x << " ";
        }
        else
            cout << i << " ";
    }
    
    cout << "1" << endl;;

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Almost_Equal.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    ll n,s=0;
    cin>>n;
    if(n%2==0){no; return 0;}
    yes;

    vector<ll>x,y;
    
    for(ll i=2;i<2*n;i+=2)
    {
        if(s==0)
        {
            x.pb(i);
            x.pb(i+1);
            s=1;
        }
        else 
        {
            y.pb(i);
            y.pb(i+1);
            s=0;
        }
    }
    cout<<1<<" ";

    print(y);
    print(x);

    cout<<2*n;nl;


    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Alternating_Subsequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    
    int sum = 0;

    for(int i = 0; i < n;){
        int x = v[i];
        if(v[i] > 0){
            while(v[i] > 0 && i < n){
                x = max(x, v[i]);
                i++;
            }
        }else{
            while(v[i] < 0 && i < n){
                x = max(x, v[i]);
                i++;
            }
        }
        sum += x;
    }

    cout<<sum<<endl;


}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Alya_and_Permutation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

set<int>p2;

void p2func(int n){
    set<int> s;
    Forn(i,n)s.insert(i);
    vin ans;
    ans.push_back(n); s.erase(n);
    ans.push_back(n - 1); s.erase(n - 1);
    ans.push_back(n - 2); s.erase(n - 2);
    ans.push_back(1); s.erase(1);
    ans.push_back(n - 3); s.erase(n - 3);
    for(auto i : s){
        ans.push_back(i);
    }
    reverse(all(ans));
    print(ans);
}

void func(int n){
        if(n == 4){
            cout << "2 1 3 4 ";
            return;
        }
    set<int> s;
    Forn(i,n)s.insert(i);
    if(p2.count(n)){p2func(n); return;}
    vin ans;
    ans.push_back(n); s.erase(n);
    int lb = *p2.lower_bound(n);
    lb /= 2; lb--;
    ans.push_back(lb); s.erase(lb);
    n &= lb;
    ans.push_back(lb ^ n); s.erase(lb ^ n);
    
    for(auto i : s)ans.push_back(i);
    reverse(all(ans));
    print(ans);
}

void sukuna(int test){
    lin(n);
    int even = 0;
    Forn(i,n)even |= i;

    if(n & 1){
        cout << n << endl;
        func(n - 1); cout << n;
        nl;        

    }else{
        cout << even << endl;
        func(n);nl;
    }
    
}

int32_t main(){
    fast_in_out;
    forn(i,25)p2.insert((1 << i));

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Andrew_and_Stones.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    if(n == 3){
        if(v[1] & 1)cout<<-1<<endl;
        else cout<<v[1] / 2<<endl;
        return;
    }

    int one = 0, even =  0, ans = 0, odd = 0, cnt = 0;
    for(int i = 1; i < n - 1; i++)if(v[i] == 1)one++;
    if(one == n - 2){
        cout<<-1<<endl;
        return;
    }

    for(int i = 1; i < n - 1; i++){
        if(v[i] % 2 == 0)even += v[i];
        else odd += v[i], cnt ++;
    }

    if(even > 0){
        ans += even / 2;
        even = 1;
    }

    rept:
    if(even){
        odd++;
        odd -= (cnt - 1);
        ans += odd / 2;
        ans += (cnt - 1);
        cout<<ans<<endl;
        return;
    }

    ans += 2;
    odd -= 2; cnt -= 2; even = 1;
    
    goto rept;  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Another_Permutation_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
vin dp(505, -1);

int rev(vin v, int i){
    int mx = 0, n = v.size(), ans = 0;
    reverse(v.begin() + n - i, v.end());
    
    for(int i = 1; i <= n; i++){
        ans += v[i - 1] * i;
        mx = max(mx, v[i - 1] * i);
    }
    return ans - mx;
}

void sukuna(){
    lin(n);
    if(dp[n] != -1){
        cout<<dp[n]<<endl;
        return;
    }
    int ans = 0;
    vin v(n);
    for(int i = 1; i <= n; i++){
        v[i - 1] = i;
    }
    for(int i = 2; i <= n; i++){
        ans = max(ans, rev(v, i));
    }
    dp[n] = ans;
    cout<<ans<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Anya_and_1100.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str;
    cin >> str;
    int n = str.size();


    set<int>s;
    for(int i = 0; i < n - 3; i++){
        if(str.substr(i, 4) == "1100"){
            s.insert(i);
        }
    }

    int ans = s.size();
    lin(q);
    while(q--){
        int i; char x;
        cin >> i >> x;
        i--;

        int l = max(0ll, i - 3);
        int r = min(n - 4, i);

        for(int i = l; i <= r; i++){
            if(str.substr(i, 4) == "1100"){
                s.erase(i);
                ans--;
            }
        }
        str[i] = x;

        for(int i = l; i <= r; i++){
            if(str.substr(i, 4) == "1100"){
                s.insert(i);
                ans++;
            }
        }

        if(ans)yes;
        else no;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Array_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    // print(v);
    
    if(k == 1){
        int mn = v.front();
        for(int i = 1; i < n; i++){
            mn = min(mn, v[i] - v[i - 1]);
        }
        cout << mn << endl;
        return;
    }
    if(k >= 3){
        cout << 0 << endl;
        return;
    }

    int ans = v.front();
    
    for(int i = 0; i < n; i++){
        for(int j = i + 1; j < n; j++){
            
            int dif = v[j] - v[i];
            int lb = upper_bound(all(v), dif) - v.begin();
            
            for(int _ = lb; _ < n && _ < lb + 2; _++){
                ans = min(ans, abs(dif - v[_]));
            }
            for(int _ = lb; _ >= 0 && _ > lb - 2; _--){
                ans = min(ans, abs(dif - v[_]));
            }
            ans = min(ans, dif);
        }
    }

    cout << ans << endl;    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Assembly_via_Minimums.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 se
#define fi                 fi
#define fi                 first
#define se                 serst
#define se                 seco
#define fi                 first
#define se                 send
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9;

void sukuna(){
    int n, m;
    cin >> n;
    m = n * (n - 1) / 2;
    vin v(m);
    forn(i,m)cin >> v[i];
    sort(all(v));

    int point = 0;
    for(int i = 1; i < n; i++){
        cout<<v[point]<<" ";
        point += (n - i);
    }
    cout<<M<<endl;
    return;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Inhabitant_of_the_Deep_Sea.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,k,x,cnt=0,sum=0,ck=0;
    cin>>n>>k;
    vector<ll>v(n);
    forn(i,n)
    {
        cin>>v[i];
        sum+=v[i];
    }

    if(sum<=k){cout<<n;nl; return 0;} //LOL
    
    if(k%2==1){k--;  ck=1; }

    while(k>0)
    {
        ll &f=v[0],&l=v[v.size()-1],sm;
        sm=min(f,l);

        if(sm*2<=k)
        {
            f-=sm; l-=sm;
            k-=sm*2;

            if(f==0)
            {
                v.erase(v.begin());
                cnt++;
            }
            if(l==0)
            {
                v.erase((--v.end()));
                cnt++;
            }
        }
        else
        {
            f-=(k/2);
            l-=(k/2);
            k=0;
            break;
        }
        if(v.size()<2)break;

    }
    k+=ck;
    
    if(v.size()==1 && v[0]<=k)cnt++;
    else if( v.size()>0 && v[0]<=k)cnt++;

    cout<<cnt;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Insert_and_Equalize.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    lin(n);
    vin v(n);
    set<int> s;
    forn(i,n){
        cin>>v[i];
        s.insert(v[i]);        
    }

    if(n == 1){
        cout<<1<<endl;
        return;
    }
    int mx = *max_element(all(v));

    int gcd = mx - *min_element(all(v));
    forn(i,n){
        if(mx == v[i])continue;
        gcd = __gcd(gcd, mx - v[i]);
    }
    int ans = 0;

    forn(i,n){
        ans += (mx - v[i]) / gcd;
    }

    for(int j = mx - gcd; ; j-= gcd){
        ans++;
        if(s.count(j) == 0)break;
    }
    cout<<ans<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Inversion_Graph.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
   lin(n);
   vin v(n);
   forn(i,n)cin >> v[i];
   v.pb(INF);
   int ans = 0, mx = 0, cnt = 0;

   for(int i = 0; i < n;){
        if(v[i] > mx){
            ans++;
            mx = v[i];
            while(v[i] <= mx && i < n){
                cnt++;
                i++;
            }
            if(cnt < mx)ans--;
        }
        else{
            cnt++;
            i++;
        }
   }

   cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Jatayu_s_Balanced_Bracket_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<vin> graph;
bool vis[N];

void dfs(int vertex){
    if(vis[vertex])return;
    vis[vertex] = true;
    for(auto child : graph[vertex]){
        dfs(child);
    }
}


void sukuna(){
    lin(n); n <<= 1;
    string str;
    cin >> str;
    str.push_back('*');
    vector<vin> gph(n);
    stack<int> s;

    for(int i = 0; i < n; i++){
        vis[i] = 0;
        if(str[i] == ')' && str[i + 1] == '('){
            gph[i].push_back(i + 1);
            gph[i + 1].push_back(i);
        }
        if(str[i] == '(')s.push(i);
        else {
            gph[s.top()].push_back(i);
            gph[i].push_back(s.top());
            s.pop();
        }
    }
    graph = gph;


    int ans = 0;
    for(int i = 0; i < n; i++){
        if(vis[i])continue;
        dfs(i);
        ans++;
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Kefa_and_Park.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define gprint(v)          Forn(i,n)cout<<v[i]<<' ';nl;


#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m;
vin graph[N];
int height[N], cats[N];

void dfs(int vertex, int par = 0){

    for(auto child : graph[vertex]){
        if(child == par)continue;

        if(cats[vertex] > 0 && cats[child]){
            cats[child] += cats[vertex];
        }
        if(cats[vertex] > m){
            cats[child] = cats[vertex];
        }

        dfs(child, vertex);
        height[vertex] = max(height[vertex], height[child] + 1);
    }
}

int32_t main()
{
    fast_in_out;
    cin >> n >> m;
    Forn(i,n)
        cin >> cats[i];

    forn(i,n - 1){
        int x, y;
        cin >> x >> y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }
    dfs(1);

    int ans = 0;
    Forn(i,n){
        if(height[i] == 0){
            ans++;
            if(cats[i] > m)ans--;
        }
    }
    cout<<ans<<endl;
}

"/home/raihan/Desktop/Codeforces/C_Kevin_and_Binary_Strings.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;
string str;

string Xop(string& a, string b){
    string ans = a;

    for(int i = n - 1, j = m - 1; j >= 0; i--, j--){
        if(a[i] == b[j])ans[i] = '0';
        else ans[i] = '1';
    }
    return ans;
}

void sukuna(int test){
    cin >> str;
    n = str.size();

    string ans;
    for(int i = 0; i < n; i++)ans.push_back('0');

    m = 1;
    for(int i = 0; i < n; i++){
        if(str[i] == '0'){
            m = n - i;
            break;
        }
    }

    int l = 1, r = l + m - 1;
    for(int i = 0; i <= n - m; i++){
        string temp;
        for(int j = i; j < i + m; j++)temp.push_back(str[j]);
        temp = Xop(str, temp);
        if(temp > ans){
            ans = temp;
            l = i + 1;
            r = l + m - 1;
        }
    }

    cout << 1 <<" " << n << " " << l << " " << r << endl;



    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_K_Dominant_Character.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n;
string str;

bool check(char c, int x){
    int cnt = 0;
    for(int i = 0; i < x; i++)if(str[i] == c)cnt++;
    if(cnt <= 0)return false;

    for(int i = x, j = 0; i < n; i++, j++){
        if(str[i] == c)cnt++;
        if(str[j] == c)cnt--;
        if(cnt <= 0)return false;
    }
    return true;
}

int binSearch(char c){
    int lo = 1, hi = n, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(!check(c, mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    if(check(c, lo - 1))return lo - 1;
    return lo;

}

void sukuna(int test){
    cin >> str;
    n = str.size();
    set<char> s;

    for(auto i : str)s.insert(i);

    int ans = n;
    for(auto i : s){
        ans = min(ans, binSearch(i));
    }
    cout << ans << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_K_th_Not_Divisible_by_n.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    
    int lo = 0, hi = INF, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(mid - mid / n < k){
            lo = mid + 1;
        }else {
            hi = mid;
        }
    }

    cout<<lo<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Largest_Subsequence.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str, ans, subs = "1", trace;
    cin >> str; ans = str; trace = str;
    sort(all(ans));

    if(str == ans){
        cout << 0 << endl;
        return;
    }

    for(int i = n - 1; i >= 0; i--){
        if(str[i] >= subs.back()){
            subs.push_back(str[i]);
            trace[i] = '*';
        }
    }
    subs.erase(subs.begin());
    
    for(int i = 0, j = 0; i < n; i++){
        if(trace[i] == '*'){
            trace[i] = subs[j++];
        }
    }

    if(trace == ans){
        int ans = subs.size() - 1;
        for(int i = ans; i >= 0; i--){
            if(subs.back() == subs[i])ans--;
        }
        ans++;
        cout << ans<< endl;
        return;
    }else {
        cout << -1 << endl;
    }

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Lazy_Narek.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vector<string> v;
string narek = "narek";
int n, m;
int dp[N][6];

int recur(int i, int pos){
    if(i == n)return -pos;
    if(dp[i][pos] != -INF)return dp[i][pos];

    int gain = 0, loss = 0, cur_pos = pos;
    for(auto c : v[i]){
        if(c == narek[cur_pos]){
            cur_pos ++;
            if(cur_pos == 5){
                gain += 5;
                cur_pos = 0;
            }
            continue;
        }
        loss++;
    }

    int res = max(recur(i + 1, pos), gain - loss + recur(i + 1, cur_pos));

    return dp[i][pos] = res;
}

bool isValid(char c){
    for(auto x : narek){
        if(x == c)return true;
    }
    return false;
}

string op(string str){
    string temp;
    for(auto c : str){
        if(isValid(c))temp.push_back(c);
    }
    return temp;
}


void reset(){
    v.clear();
    forn(i,n){
        forn(j,6){
            dp[i][j] = -INF;
        }
    }
}

void sukuna(){
    cin >> n >> m;
    reset();
    int x = 0;
    forn(i,n){
        string temp;
        cin >> temp;
        temp = op(temp);
        if(temp.size() == 0)continue;
        v.push_back(temp);
        x++;
    }   
    n = x;

    cout << recur(0, 0) << endl;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Left_and_Right_Houses.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n;
    cin >> n;
    string str;
    cin >> str;
    vin v(n), one(n), zero(n);
    if(str[0] == '0')zero[0]++;
    for(int i = 1; i < n; i++){
        zero[i] = zero[i - 1];
        if(str[i] == '0')zero[i]++;
    }
    if(str[n - 1] == '1')one[n - 1]++;
    for(int i = n - 2; i >=0; i--){
        one[i] = one[i + 1];
        if(str[i] == '1')one[i]++;
    }

    int ans, xx = 0, yy = 0;

    for(int i = 0; i < n; i++){
        int x = (i + 2) / 2;
        int y = (n - i + 1) / 2;
        
        if(zero[i] >= x && one[i] >= y){
            if(zero[i] >= xx && one[i] >= yy){
                xx = zero[i]; 
                yy = one[i];
                ans = i + 1;
            }
        }
    }
    cout<<ans<<endl;
    // cout<<0<<endl;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Less_or_Equal.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    if(k == 0){
        if(v.front() == 1)cout << -1 <<endl;
        else cout << v.front() - 1 <<endl;
        return;
    }
    if(k == n){
        cout << v[k - 1] << endl;
    }else if(v[k] == v[k - 1]){
        cout << - 1 << endl;
    }else{
        cout << v[k - 1] << endl;
    }

}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Lexicographically_Largest.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int test; cin>>test;
    while(test--)
    {
        int n;
        cin>>n;
        int arr[n],i;
        
        for(i=0;i<n;i++)cin>>arr[i];
        for(i=0;i<n;i++)
        {
            arr[i]+=(i+1);
        }
        sort(arr, arr + n, greater<int>());
        for(i=0;i<n;i++)cout<<arr[i]<<" ";
        nl;


    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/C_LIS_or_Reverse_LIS.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    map<int,int> mp;
    forn(i,n)cin >> v[i], mp[v[i]]++;

    int m = 0;
    for(auto i : mp){
        m += min(2ll, i.second);
    }

    cout << max((m + 1 )/ 2, 1ll) << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Little_Alawn_s_Puzzle.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 4e5 + 100;
bool vis[N];
vector<vin> graph;
vin c;

void dfs(int vertex){
    if(vis[vertex])return;
    vis[vertex] = true;
    c.push_back(vertex);
    for(auto child : graph[vertex]){
        dfs(child);
    }
}


void sukuna(){
    graph.clear();
    lin(n);
    vector<vin> gph(n + 1), cc;
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;

    forn(i,n){
        gph[v[i].first].push_back(v[i].second);
    }

    Forn(i,n)vis[i] = 0;
    graph = gph;


    for(int i = 1; i <= n; i++){
        if(vis[i])continue;
        c.clear();
        dfs(i);
        cc.push_back(c);
    }

    int cnt = cc.size();

    int ans = 1;
    for(int i = 1; i <= cnt; i++){
        ans = (ans << 1) % M;
    }

    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Longest_Good_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int dif;

bool chk(int n){
    int sum = n * (n + 1) / 2;
    return dif >= sum;
}

void sukuna(){
    int l, r;
    cin >> l >> r;
    dif = r - l;
    int ans = 1;

    int lo = 0, hi = M, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(chk(mid)){
            lo = mid + 1;
        }else {
            hi = mid;
        }
    }

    cout<<lo<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Long_Multiplication.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    string x,y;
    cin>>x>>y;
    ll i,n=x.size();
    for(i=0;i<n;i++)
    {
        if(x[i]>y[i])break;
        else if(x[i]<y[i])
        {
            swap(x[i],y[i]);
            break;
        }
    }i++;

    for(;i<n;i++)if(x[i]>y[i])swap(x[i],y[i]);

    cout<<x<<"\n"<<y;nl;


    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Lose_it.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    map<int, int> m;
    vin v = {4, 8, 15, 16, 23};
    int ans = 0;

    forn(i,n){
        lin(x);
        if(x == 4)m[x]++;
        if(x == 8){
            if(m[4] > 0){
                m[x]++;
                m[4]--;
            }
            else ans++;
        }
        if(x == 15){
            if(m[8] > 0){
                m[x]++;
                m[8]--;
            }
            else ans++;
        }
        if(x == 16){
            if(m[15] > 0){
                m[x] ++;
                m[15]--;
            }
            else ans++;
        }
        if(x == 23){
            if(m[16] > 0){
                m[x]++;
                m[16]--;
            }
            else ans++;
        }
        if(x == 42){
            if(m[23] > 0){
                m[23]--;
            }
            else ans++;
        }
    }
    for(int i  = 0; i < v.size(); i++){
        ans += m[v[i]] * (i + 1);
    }
    cout<<ans<<endl;
    
    
}

"/home/raihan/Desktop/Codeforces/C_Ski_Resort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int func(int n, int k){
    n -= (k - 1);
    if(n <= 0)return 0;
    return n * (n + 1) / 2;
}


void sukuna(){
    int n, k, t;
    cin >> n >> k >> t;
    vin v(n);
    forn(i,n)cin >> v[i];
    vin days;

    int sum = 0;
    for(int i = 0; i < n; i++){
        if(v[i] <= t)sum++;
        else{
            if(sum > 0)days.push_back(sum);
            sum = 0;
        }
    }
    if(sum > 0)days.push_back(sum);

    int ans = 0;
    for(auto day : days){
        ans += func(day, k);
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Slay_the_Dragon.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int sum = accumulate(all(v), 0LL);

    lin(q);
    while(q--){
        int x, y;
        cin >> x >> y;
        
        auto lo = lower_bound(all(v), x);

        int a = -INF, b = *lo;
        if(lo != v.begin())a = *--lo;
        int ans1 = max(0LL, x - b) + max(0LL, y - (sum - b));
        int ans2 = max(0LL, x - a) + max(0ll, y - (sum - a));

        cout<<min(ans1, ans2)<<endl;
    }
}

"/home/raihan/Desktop/Codeforces/C_Sofia_and_the_Lost_Operations.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define printmp(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(n);
    vin a(n), b(n);
    forn(i,n)cin>>a[i];
    forn(i,n)cin>>b[i];
    lin(m);
    map<int, int> mp;
    int last ;
    forn(i,m){
        lin(x);
        mp[x]++;
        if(i == (m - 1))last = x;
    }
    
    bool flag = 0;
    for(int i = 0; i < n; i++){
        if(b[i] == last)flag = 1;
        if(b[i] == a[i])
            continue;
        else{
            if(mp[b[i]] > 0){
                a[i] = b[i];
                mp[b[i]]--;
            }
            else{
                no;
                return;
            }
        }
    }
    if(a == b && flag)yes;
    else no;
    


}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, q;
    cin >> n >> q;
    string a, b;
    cin >> a >> b;

    vector<vector<int>> u(n + 1, vin(26)), v(n + 1, vin(26));

    u[1][a[0] - 97]++;
    v[1][b[0] - 97]++;

    for(int i = 1; i < n; i++){
        u[i + 1][a[i] - 97]++;
        v[i + 1][b[i] - 97]++;

        for(int j = 0; j < 26; j++){
            u[i + 1][j] += u[i][j];
            v[i + 1][j] += v[i][j];
        }
    }

    while(q--){
        int l, r, ans = 0;
        cin >> l >> r;
        
        vin aa(26), bb(26);

        for(int i = 0; i < 26; i++){
            aa[i] = u[r][i] - u[l - 1][i];
            bb[i] = v[r][i] - v[l - 1][i]; 
        }

        forn(i,26){
            ans += max(0LL, bb[i] - aa[i]);
        }
        cout<<ans<<endl;
        
    }
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sort_Zero.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool chk(vin & v){
    int n = v.size();
    for(int i = n - 1; i > 0; i--){
        if(v[i] < v[i - 1])return false;
    }
    return true;
}


void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n){
        cin >> v[i];
    }
    int ans = 0;
    while(chk(v) == false){
        set<int> s;
        int i;
        for(i = n - 1; i > 1; i--){
            if(v[i] < v[i - 1])break;
        }
        i--;
        for(; i >= 0;i--){
            if(v[i] == 0)continue;
            s.insert(v[i]);
        }
        forn(i,n){
            if(s.count(v[i])){
                v[i] = 0;
            }
        }

        ans += s.size();
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Splitting_Items.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int l = 0;
    if(n & 1)l++;

    for(int i = n - 1; i >= l; i -= 2){
        int x = min(v[i] - v[i - 1], k);
        v[i - 1] += x;
        k -= x;
    }
    int ans = 0;
    if(n & 1){
        ans += v[0];
    }

    for(int i = n - 1; i >= l; i -= 2){
        ans += v[i] - v[i - 1];
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Stable_Groups.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    int n, k, x;
    cin >> n >> k >> x;
    vin v(n), dif;
    forn(i,n)cin >> v[i];
    sort(all(v));

    int cnt = 0;

    for(int i = 0; i < n; i++){
        int d = v[i] - v[i - 1];
        if(d <= x)continue;
        else dif.push_back(d);
    }
    cnt = dif.size() + 1;

    sort(all(dif));

    for(int i = 0; i < dif.size(); i++){
        if(dif[i] % x == 0){
            if((dif[i] / x) - 1 <= k){
                k -= dif[i] / x - 1;
                cnt--;
            }
            else break;
        }else{
            if(dif[i] / x <= k){
                k -= dif[i] / x;
                cnt--;
            }
            else break;
        }
    }
    cout<<cnt<<endl;
}

"/home/raihan/Desktop/Codeforces/C_Strange_Function.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int lcm(int a, int b){
    return (__uint128_t) a * b / __gcd(a, b);
}


void sukuna(int test){
    lin(n);
    int ans = 0;
    int lc = 1;

    for(int i = 2;; i++){
        if(lc > n)break;
        
        int a = n / lc;
        //a denotes all the number that are dividable by 1 to i - 1

        lc = lcm(lc, i);
        int b = n / lc;
        //b denotes all the number that are dividable by 1 to i

        //Hence (a - b) denotes all the number that are not dividable by i 
        //Therefore (a - b) * i should be added to our ans.

        ans += (__uint128_t) (a - b) * i;
        ans %= M; 
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_String_Equality.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"Yes\n"
#define no                 cout<<"No\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    string a, b;
    cin >> a >> b;
    sort(all(a));
    sort(all(b));
    map<char, int> x, y;
    forn(i,n)x[a[i]]++, y[b[i]]++;

    int rem = 0;
    for(int i = 'a'; i < 'z'; i++){
        int acnt = x[i], bcnt = y[i];
        if(rem + acnt < bcnt or (bcnt - acnt) % k != 0){
            no;
            return;
        }
        rem += acnt - bcnt;
    }
    yes;

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_String_Transformation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string str;
    cin >> str;
    int n = str.size();

    char c = 'a';
    for(int i = 0; i < n; i++){
        if(str[i] <= c){
            str[i] = c;
            c++;
        }
        if(c == 'z' + 1)break;
    }

    if(c <= 'z')cout << -1 <<endl;
    else cout << str << endl;
    
    
}

"/home/raihan/Desktop/Codeforces/C_Stripe.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin v(n + 1), bf(n + 1), gf(n + 1);
    Forn(i,n)cin >> v[i];
    gf[n] = v[n];
    for(int i = 1; i <= n; i++)bf[i] = bf[i - 1] + v[i];
    for(int i = n - 1; i > 0; i--)gf[i] = gf[i + 1] + v[i];

    int ans = 0;
    for(int i = 1; i < n; i++){
        if(bf[i] == gf[i + 1])ans++;
    }
    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Stripes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vector<string> v;
int n = 8;

void sukuna(){
    v.clear();
    forn(i,n){
        string str;
        cin >> str;
        v.pb(str);
    }
    int sidesx = 0, cnt = 0;
    int sides2 = 0;
    for(auto i : v.front()){
        if(i == 'R')sidesx++;
    }
    for(auto i : v.back()){
        if(i == 'R')sides2++;
    }

    sidesx = max(sides2, sidesx);
    int sidesy = 0; sides2 = 0;
    for(int i = 0; i < n; i++)if(v[i][0] == 'R')sidesy++;
    for(int i = 0; i < n; i++)if(v[i][7] == 'R')sides2++;
    sidesy = max(sidesy, sides2);

    int b_sum = 0;
    for(auto str : v){
        for(auto c : str){
            if(c == 'R')cnt++;
            if(c == 'B')b_sum++;
        }
    }
    // cout<<sidesx<<' '<<sidesy<<endl;
    int sum = sidesx * 8 + sidesy * 8 - (sidesx * sidesy);
    if(sidesx == 8 || sidesy == 8)sum = min(sidesx, sidesy) * 8;
    // cout<<sum<<endl;

    
    if(sum == cnt)cout<<'R'<<endl;
    else if(b_sum < 64 - sum)cout<<'R'<<endl;
    else cout<<'B'<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Strongly_Composite.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e7 + 100;

vin isPrime(N), lp(N);

void seive(){
    isPrime[0] = isPrime[1] = 1;
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            lp[i] = i;
            for(int j = i * 2; j < N; j += i){
                if(lp[j] == 0)lp[j] = i;
                isPrime[j] = 1;
            }
        }
    }
}


void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    map<int, int> mp;
    for(auto a : v){
        while(a > 1){
            int pm = lp[a];
            while(a % pm == 0){
                a /= pm;
                mp[pm]++;
            }
        }
    }
    int ans = 0, cnt = 0;
    
    for(auto a : mp){
        cnt += a.second % 2;
        if(a.second >= 2)ans += a.second / 2;
    }
    ans += cnt / 3;
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;
    seive();

    // for(int i = 1; i <= 10; i++)cout<<i<<" ";nl;
    // for(int i = 1; i <= 10; i++)cout<<lp[i]<<" ";nl;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Strongly_Composite.java"
import java.util.*;

public class C_Strongly_Composite {
    static Scanner in = new Scanner(System.in);
    static final int N = 10000100;

    static int isPrime[] = new int[N];
    static int lp[] = new int[N];
    
    static void seive(){
        isPrime[0] = 1;
        isPrime[1] = 1;

        for(int i = 2; i < N; i++){
            if(isPrime[i] == 0){
                lp[i] = i;
                for(int j = i * 2; j < N; j += i){
                    isPrime[j] = i;
                    if(lp[j] == 0){
                        lp[j] = i;
                    }
                }
            }
        }
    }

    static void Jujutsu_Kaisen(){
        int n = in.nextInt();
        int v[] = new int[n];
        for(int i = 0; i < n; i++){
            v[i] = in.nextInt();
        }
        HashMap<Integer, Integer> mp = new HashMap<>();
        
        for(int i = 0; i < n; i++){
            while(v[i] > 1){
                int pm = lp[v[i]];
                while(v[i] % pm == 0){
                    v[i] /= pm;
                    mp.put(pm, mp.getOrDefault(pm, 0) + 1);
                }
            }
        }
        int ans = 0, cnt = 0;
        for (var a : mp.entrySet()) {
            if (a.getValue() >= 2) ans += a.getValue() / 2;
            cnt += a.getValue() % 2;
        }

        ans += cnt / 3;
        System.out.println(ans);
       
    }
    public static void main(String[] args) {
        seive();
        int test = in.nextInt();
        while(test > 0){
            test--;
            Jujutsu_Kaisen();
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_Strong_Password.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e5 + 100;

int n, m;
vin sz(11);
vector<vin> pos(11), dp(11, vin (N, -1));
string str, a, b;

bool recur(int ind, int p){
    if(ind >= m)return 0;

    if(p != -1 and dp[ind][p] != -1)return dp[ind][p];

    bool isOk = false;
    for(int i = a[ind] - '0'; i <= b[ind] - '0'; i++){

        if(sz[i] == 0)return 1;

        int lb = lower_bound(all(pos[i]), p) - pos[i].begin();
        if(p == pos[i][lb])lb = lower_bound(all(pos[i]), p + 1) - pos[i].begin();
        
        if(p != -1)
        if(lb >= sz[i])return dp[ind][p] = 1;

        isOk |= recur(ind + 1, pos[i][lb]);
    }

    if(p == -1)return isOk;
    return dp[ind][p] = isOk;
}


void reset(){
    forn(i, 10)pos[i].clear();
    forn(i,n + 1)forn(j, 10)dp[j][i] = -1;
}

void sukuna(int test){
    reset();
    cin >> str >> m >> a >> b;
    n = str.size();

    forn(i,n)pos[str[i] - '0'].push_back(i);
    forn(i,10)sz[i] = pos[i].size();

    if(recur(0, -1))yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Summarize_to_the_Power_of_Two.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
map<int, int> mp;
set<int> s;
vin power;
int mx = 0;


bool func(int n){
    for(auto p : power){
        if(p > mx + n)return false;
        if(p <= n)continue;
        if(!s.count(p - n))continue;
        if(p - n == n){
            if(mp[n] > 1)return true;
            continue;
        }
        if(mp[p - n] > 0)return true;
    }
    return false;
}


int32_t main(){
    fast_in_out;
    for(int i = 1; i < INF; i <<= 1){
        power.push_back(i);
    }
    lin(n);
    vin v(n);
    forn(i,n){
        cin >> v[i];
        mp[v[i]]++;
        s.insert(v[i]);
        mx = max(mx, v[i]);
    }    

    int ans = 0;
    for(auto i : v){
        if(mp[i] == 0)continue;
        if(!func(i)){
            ans += mp[i];
            mp[i] = 0;
        }
    }
    cout << ans << endl;    
}

"/home/raihan/Desktop/Codeforces/C_Sums_on_Segments.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    set<int> ans; ans.insert(0);

    for(int i = 0; i < n; i++){
        int sum = 0;
        for(int j = i; j < n; j++){
            sum += v[j];
            ans.insert(sum);
        }
    }
    cout << ans.size() << endl;
    print(ans);

}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sum_in_Binary_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int dc_universe()
{
    ll n,sum=0;
    cin>>n;
    while(n>0)
    {
        sum=sum+n;
        n/=2;
    }
    cout<<sum;nl;
    return 0;
}

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        dc_universe();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/C_Superultra_s_Favorite_Permutation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    public:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        set<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            return divisors;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            if(l > r)swap(l, r);
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};


SeiveAlgo sv;

void sukuna(int test){
    lin(n);
    if(n <= 4){
        cout << -1 << endl;
        return;
    }

    vin ans;
    set<int> s;

    for(int i = 1, j = 2; i <= n; i += 2){
        ans.pb(i);
    }
    for(int i = 2; i <= n; i += 2){
        s.insert(i);
    }

    print(ans);
    for(auto i : s){
        if(sv.isPrime[ans.back() + i]){
            cout << i << " ";
            s.erase(i);
            break;
        }
    }
    print(s);nl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Swap_Columns_and_Find_a_Path.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n), u(n);
    int ans = 0, mn = -INF;
    
    forn(i,n)cin >> v[i];
    forn(i,n)cin >> u[i];

    forn(i,n){
        ans += max(v[i], u[i]);
        mn = max(mn, min(v[i], u[i]));
    }

    ans += mn;

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Swap_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Alice\n"
#define no                 cout<<"Bob\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    if(*min_element(all(v)) == v[0])no;
    else yes; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Swap_Letters.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first + 1<<" "<<a.second + 1<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string s, t;
    cin >> s >> t;
    int cnt1 = 0, cnt2 = 0;
    for(int i = 0; i < n; i++){
        if(s[i] == 'a')cnt1++;
        else cnt2++;
        if(t[i] == 'a')cnt1++;
        else cnt2++;
    }

    if(cnt1 & 1 or cnt2 & 1){
        cout << -1 << endl;
        return;
    }
    vin ab, ba;
    for(int i = 0; i < n; i++){
        if(s[i] == t[i])continue;
        if(s[i] == 'a' and t[i] == 'b')ab.push_back(i);
        if(t[i] == 'a' and s[i] == 'b')ba.push_back(i);
    }


    vector<pr> ans;
    for(int i = 0; i < ab.size() - (ab.size() & 1); i+= 2){
        ans.push_back({ab[i], ab[i + 1]});
    }
    
    if(ab.size() & 1){int tmp = ab.back(); ab.clear(); ab.pb(tmp);}
    else ab.clear();

    for(int j = 0; j < ba.size() - (ba.size() & 1); j+= 2){
        ans.push_back({ba[j], ba[j + 1]});
    }
    
    if((ba.size() & 1)){int tmp = ba.back(); ba.clear(); ba.pb(tmp);}
    else ba.clear();

    if(ba.size() and ab.size()){
        ans.push_back({ba.back(), ba.back()});
        ans.push_back({ab.back(), ba.back()});
    }

    cout << ans.size() << endl;
    mprint(ans);

}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sweets_Eating.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         Forn(i,n) cout<<arr[i]<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    vin v(n + 1), ans(n + 1);
    Forn(i,n)cin >> v[i];
    sort(all(v)); 

    print(v);

    int cur = 0;
    for(int i = 1; i <= n; i++){
        cur += v[i];
        ans[i] = cur;
        if(i >= m){
            ans[i] += ans[i - m];
        }
    }

    print(ans);   
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Symbols.cpp"
#include<bits/stdc++.h>
using namespace std;

#define nl cout<<"\n"

int main()
{
    string str;
    cin>>str;
    int n=str.length(),i,ans=0;
    for(i=0;i<n;i++)
    {
        if(str[i]=='+')ans++;
        else ans--;
    }
    cout<<ans;nl;
}



"/home/raihan/Desktop/Codeforces/D_Friends_and_the_Restaurant.cpp"

"/home/raihan/Desktop/Codeforces/D_Fun.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, x;
    cin >> n >> x;
    set<int> s;
    int cnt = 0;
    for(int i = 1; i <= x; i++){
        for(int j = 1; j <= x - i; j++){
            for(int k = 1; k <= x - (i + j); k++){
                if(i * j  + j * k + k * i <= n){
                    cout<<i << ' '<< j << ' '<<k<<endl;
                    s.insert(i);
                    s.insert(j);
                    s.insert(k);
                    cnt ++;
                }
            }
        }
    }
    cout<<cnt<<endl;

    // print(s);
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_GCD_sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool func(vin vv, int x){
    vin v;
    forn(i, vv.size()){
        if(i == x)continue;
        v.push_back(vv[i]);
    }
    int n = v.size();
    vin b(n - 1);
    for(int i = 1; i < n; i++){
        b[i - 1] = __gcd(v[i], v[i - 1]);
    }
    for(int i = 1; i < b.size(); i++){
        if(b[i - 1] > b[i])return false;
    }
    return true;
}


void sukuna(){
    lin(n);
    vin v(n), b(n - 1);
    forn(i,n)cin >> v[i];

    for(int i = 1; i < n; i++){
        b[i - 1] = __gcd(v[i], v[i - 1]); 
    }

    int x = 0, y = 0;
    for(int i = 1; i < b.size(); i++){
        if(b[i] < b[i - 1]){
            x = max(0ll, i - 2);
            y = min(n - 1, i + 2);
            break;
        }
    }

    bool ans = func(v, - 1);
    for(int i = x; i <= y; i++){
        ans |= func(v, i);
    }

    if(ans)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Harder_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    set<int> s;
    for(int i = 1; i <= n; i++)s.insert(i);
    forn(i,n){
        cin >> v[i];
        if(s.count(v[i]))s.erase(v[i]);
    }
    map<int, int> mp;

    vin ans(n);
    for(int i = 0; i < n; i++){
        if(mp[v[i]]){
            ans[i] = *s.begin();
            s.erase(s.begin());
            continue;
        }else{
            ans[i] = v[i];
            mp[v[i]]++;
        }
    }

    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Igor_In_the_Museum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e3 + 100;

int n, m, q;
vector<string> graph;
int vis[N][N], val[N][N];
vector<pair<int, int>> movements = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
vector<pair<int, int>>toConstruct;

bool isValid(int x, int y){
    return x > 0 && x <= n && y > 0 && y <= m;
}

int calCulate(int x, int y){
    int ans = 0;
    for(auto mv : movements){
        int i = x + mv.first;
        int j = y + mv.second;
        if(graph[i][j] == '*')ans++;
    }
    return ans;
}

int dfs(int x, int y){
    if(vis[x][y])return 0;
    vis[x][y] = true;
    toConstruct.push_back({x, y});

    int sum = calCulate(x, y);
    for(auto mv : movements){
        int childx = x + mv.first;
        int childy = y + mv.second;
        if(!isValid(childx, childy))continue;
        if(graph[childx][childy] == '*')continue;

        sum += dfs(childx, childy);
    }

    return sum;
}

void preDfs(int x, int y){
    if(graph[x][y] == '*')return;
    if(vis[x][y])return;
    toConstruct.clear();
    int sum = dfs(x, y);

    for(auto v : toConstruct){
        val[v.first][v.second] = sum;
    }
}

int32_t main(){
    fast_in_out;
    cin >> n >> m >> q;
    string temp;
    for(int i = 0; i < n + 3; i++)temp.push_back(' ');
    graph.push_back(temp);
    forn(i,n){
        string str;
        cin >> str;
        str = " " + str;
        str += " ";
        graph.push_back(str);
    } graph.push_back(temp);

    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            preDfs(i, j);
        }
    }

    while(q--){
        int x, y;
        cin >> x >> y;
        cout << val[x][y] << endl;
    }
}

"/home/raihan/Desktop/Codeforces/D_Inaccurate_Subsequence_Search.cpp"

"/home/raihan/Desktop/Codeforces/D_Ingenuity_2.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
	int n,m,q,xp=-1,xn=-1,yp=-1,yn=-1,x=0,y=0;
	cin >> n;
	string str;
    vin a(n);
	cin >> str;
	for(int i = 0;i < n; ++i){
		if(str[i]=='N') yp=i,++y; 
		if(str[i]=='S') yn=i,--y; 
		if(str[i]=='E') xp=i,++x; 
		if(str[i]=='W') xn=i,--x; 
	}
	if(x%2 || y%2){
		no;
		return;
	}
	if(x == 0 && y == 0 && n == 2){
		no;
		return;
	}
	if(xp > -1 && xn >- 1){
		a[xp] = 1, a[xn] = 1;
	}else if(yp > -1 && yn > -1){
		a[yp] = 1, a[yn] = 1;
	}
	x /= 2, y /= 2;
	for(int i = 0; i < n; ++i){
		if(a[i]) continue;
		if(str[i]=='N'&&y>0) a[i]=1,--y; 
		if(str[i]=='S'&&y<0) a[i]=1,++y; 
		if(str[i]=='E'&&x>0) a[i]=1,--x; 
		if(str[i]=='W'&&x<0) a[i]=1,++x; 
	}
	for(int i = 0; i < n; ++i){
		if(a[i]) cout<<"H";
		else cout<<"R";
	}
	nl;  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_I_Love_1543.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Kevin_and_Competition_Memories.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    vin a(n), b(m);
    forn(i,n)cin >> a[i];
    sort(a.begin() + 1, a.end());
    
    forn(i,m){
        cin >> b[i];
        if(b[i] <= a[0] or b[i] > a.back()){
            b[i] = 0;
        }
    }
    ppfr(a);

    // print(a);
    // print(b);
    n--;
    
    for(auto &i : b){
        if(i == 0)continue;
        int lb = lower_bound(all(a), i) - a.begin();
        i = n - lb;
    }

    sort(all(b));
    // for(int i = 1; i < m; i++)b[i] += b[i - 1];
    // print(b);

    for(int i = 1; i <= m; i++){
        int ans = 0;
        for(int j = i - 1; j < m; j += i){
            ans += b[j] + 1;
        }
        // cout << i <<" ";nl;
        cout << ans << " "; 
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Kousuke_s_Assignment.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];        
    map<int, int> mp;
    mp[0]++;

    int sum = 0, ans = 0; 
    for(int i = 0; i < n; i++){ 
        sum += v[i];
        
        if(mp[sum]){ 
            sum = 0; 
            mp.clear(); 
            mp[sum] = 1; 
            ans++; 
        } 
        mp[sum]++;
    } 
    cout << ans << endl;
        
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Line.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int sum = 0;
    for(int i = 0; i < n; i++){
        if(str[i] == 'R'){
            sum += n - i - 1;
        }else{
            sum += i;
        }
    }
    vin ans(n), v;

    for(int i = 0; i < n / 2; i++){
        if(str[i] == 'L'){
            v.push_back(n - i - 1);
        }
    }
    for(int i = n - 1; i >= n / 2; i--){
        if(str[i] == 'R'){
            v.push_back(i);
        }
    }
    sort(all(v), greater<int>());

    for(int i = 0; i < v.size(); i++){
        ans[i] = sum + v[i] - (n - v[i] -1);
        sum = ans[i];
    }

    for(int i = 0; i < n; i++){
        if(ans[i] == 0)ans[i] = sum;
    }

    print(ans);


    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Longest_Max_Min_Subsequence.cpp"

"/home/raihan/Desktop/Codeforces/D_Lunar_New_Year_and_a_Wander.cpp"
#include<bits/stdc++.h>
using namespace std;

const int N = 2e5 + 10;
int n, m;
vector<int> graph[N], ans, vis(N);

void bfs(int vertex = 1){
    priority_queue<int, vector<int> ,greater<int>> q;
    q.push(vertex);
    vis[vertex] = true;

    while(!q.empty()){
        vertex = q.top();
        ans.push_back(vertex);
        q.pop();
        for(auto child : graph[vertex]){
            if(vis[child])continue;
            vis[child] = true;
            q.push(child);
        }
    }

}

int32_t main(){
    cin >> n >> m;
    for(int i = 0; i < m; i++){
        int x, y;
        cin >> x >> y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }   
    bfs(); 
    
    for(auto i : ans){
        cout << i << " ";
    }
}

"/home/raihan/Desktop/Codeforces/D_Magic_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e3 + 10;

int m, dig, n;
string digits;
int dp[N][2][2][2][N];


int recur(int ind, bool flg, bool leading, bool even, int cur){

    if(ind >= n)return (cur % m == 0);
    if(dp[ind][flg][leading][even][cur] != -1)return dp[ind][flg][leading][even][cur];
    int ans = 0, limit = (flg ? digits[ind] - '0': 9);
    
    if(even){
        if(flg and limit < dig)return dp[ind][flg][leading][even][cur] = 0;
        else{
            int temp = cur * 10 % m;
            temp = (temp + dig) % m;
            return dp[ind][flg][leading][even][cur] = recur(ind + 1, flg & (limit == dig), false, false, temp) % M;
        }
    }

    for(int d = 0; d <= limit; d++){
        if(leading and d == 0){
            ans += recur(ind + 1, false, true, 0, 0);
            ans %= M; continue;
        }
        if(d == dig)continue;
        int temp = cur * 10 % m;
        temp = (temp + d) % m;

        if(flg and d == limit){
            ans += recur(ind + 1, flg, false, 1, temp);
            ans %= M; continue;
        }
        ans += recur(ind + 1, false, false, 1, temp);
        ans %= M;        
    }

    return dp[ind][flg][leading][even][cur] = ans;

}

int func(string &str){
    memset(dp, -1, sizeof(dp));
    digits = str;
    n = digits.size();

    return recur(0, 1, 1, 0, 0);
}

void decrement(string &str){
    int n = str.size();
    int carry = 1;
    for(int i = n - 1; i >= 0; i--){
        if(str[i] > '0'){
            str[i] --;
            carry = 0;
        }else{
            str[i] = '9';
            carry = 1;
        }
        if(!carry)break;
    }
    if(str.front() == '0')str.erase(str.begin());
    if(str.empty())str.push_back('0');
}

int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);
    
    string l, r;
    cin >> m >> dig;
    cin >> l >> r;
    decrement(l);
    int ans = (func(r) + M - func(l)) % M;
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/D_Make_a_Power_of_Two.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
vector<string> v;

int func(string a, string b){
    int match = 0;
    for(int i = 0, j = 0; i < a.size() && j < b.size(); i++){
        if(a[i] == b[j]){
            j++;
            match++;
        }
    }
    int ans = (a.size() - match) + (b.size() - match );
    return ans;
}


void sukuna(){
    lin(n);
    string str = to_string(n);
    int ans = INF;

    for(auto a : v){
        ans = min(ans, func(str, a));
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;
    int b = 1;
    v.push_back("1");
    while(b < INF){
        b <<= 1;
        string str = to_string(b);
        v.push_back(str);
    }

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Make_It_Round.cpp"

"/home/raihan/Desktop/Codeforces/D_Manhattan_Circle.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    int n, m;
    cin>>n>>m;
    vector<string>v(n);
    forn(i,n)cin>>v[i];    
    int ind = 0;
    string str = v[0];

    for(int i = 0; i < n; i++){
        if(v[i] < str){
            ind = i;
            str = v[i];
        }
    }
    bool flg = 0;
    int st = 0, cnt  = 0;
    for(int i = 0; i <m; i++){
        if(str[i] == '#'){
            cnt++;
            if(flg == 0){
                st = i;
                flg = 1;
            }
        }
    }
    cout<<ind + 1<<' '<<st + (cnt + 1) / 2<<endl;
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Masha_and_a_Beautiful_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int func(vin &v, int x){
    int n = v.size(), ans = 0;
    vector<vin> tmp;
    for(int i = 0; i < n; i+= x){
        vin t;
        for(int j = i; j < i + x; j++){
            t.push_back(v[j]);
        }
        tmp.push_back(t);
    }

    for(int i = 0; i < tmp.size(); i += 2){
        
        if(tmp[i].back() > tmp[i + 1].back()){
            swap(tmp[i], tmp[i + 1]);
            ans++;
        }
    }

    v.clear();
    for(auto a : tmp){

        for(auto b : a){
            v.push_back(b);
        }
    }
    return ans;
}


void sukuna(){
   lin(n);
   vin v(n);
   forn(i,n)cin >> v[i];
   int ans = 0;

   for(int i = 1; i < n; i <<= 1){
        ans += func(v, i);
   }
   
   for(int i = 1; i < n; i++){
        if(v[i] < v[i - 1]){
            cout<<-1<<endl;
            return;
        }
   }
   cout<<ans<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Mathematical_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

bool primary_check(string str){

    for(int i = 0; i < str.size() - 1; i++){
        for(int j = 0; j < str.size(); j++){
            if(j == i || j == (i + 1))continue;
            if(str[j] == '0')return true;
        }
    }
    return false;
}



void sukuna()
{
    lin(n);
    string str;
    cin>>str;
    vector<int> v(n);
    forn(i,n)v[i] = str[i] - 48;

    if(n == 2){
        cout<<v[0] * 10 + v[1]<<endl;
        return;
    }

    if(primary_check(str)){
        cout<<0<<endl;
        return;
    }
    int ans = INT_MAX;

    for(int i  = 0; i < n - 1; i++){
        int sum = v[i] * 10 + v[i + 1];
        for(int j = 0; j < n; j++){
            if(j == i || j == i + 1)continue;
            if(v[j] == 1)continue;
            if(sum == 1)sum = v[j];
            else sum += v[j];
        }
        ans = min(ans, sum);
    }
    cout<<ans<<endl;

    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Matryoshkas.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define printmap(mp)       for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    vector<pr> p;
    map<int, int> mp;
    forn(i,n)cin >>v[i], mp[v[i]]++;

    for(auto a : mp)p.push_back({a.fi, a.se});
    printmap(p);

    n = p.size();
    int rem = 0, mn = p[0].second;

    for(int i = 1; i < n; i++){
        if(p[i].fi == p[i - 1].fi + 1){
            mn = min(mn, p[i].second);
            rem += (p[i - 1].second - mn);
        }
    }


    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Maximize_the_Root.cpp"

"/home/raihan/Desktop/Codeforces/D_Maximum_Sum_on_Even_Positions.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(int i = 1; i <= n; i++)cout<<arr[i]<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1);
    vin ev = v, od = v;
    bool flg = false;
    Forn(i,n){
        cin >> v[i];
        if(flg)od[i] += v[i];
        else ev[i] += v[i];
        flg = !flg;
        od[i] += od[i - 1];
        ev[i] += ev[i - 1];
    }

    print(ev);
    print(od);

    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Min_Cost_String.cpp"
#include <bits/stdc++.h>

using namespace std;

int n, k;
int cur[26];
vector<int> path;

void dfs(int v)
{
    while (cur[v] < k)
    {
        int u = cur[v]++;
        dfs(u);
        path.push_back(u);
    }
}

int main()
{
    scanf("%d%d", &n, &k);
    dfs(0);
    printf("a");
    for (int i = 0; i < n - 1; ++i)
        printf("%c", path[i % path.size()] + 'a');
}

"/home/raihan/Desktop/Codeforces/D_Move_Back_at_a_Cost.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n), ans;
    multiset<int> s;
    forn(i,n){
        cin >> v[i];
        s.insert(v[i]);
    }

    for(int i = 0; i < n; i++){
        if(v[i] == *s.begin()){
            s.erase(s.find(v[i]));
            ans.push_back(v[i]);
        }else{
            ans.push_back(v[i] + 1);
            s.insert(v[i] + 1);
            s.erase(s.find(v[i]));
        }
    }

    sort(all(ans));
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Firefly_s_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, q;

void cycle(vin &v){
    vin ans;
    for(int i = 1; i < n; i++){
        ans.pb(v[i]);
    }    
    ans.pb(v[0]);
    v = ans;
}


void sukuna(){
    cin >> n >> q;
    vin v(n), pf(n + 1);
    forn(i,n)cin >> v[i];
    forn(i,n){
        pf[i + 1] = pf[i] + v[i];
    }
    int sum = pf[n];

    while(q--){
        int l, r;
        cin >> l >> r;
    
        int fcl = ceil(l * 1.0 / n);   fcl %= (n + 1);
        cout<<fcl<<endl;


    }



    print(v);
    for(int i = 0; i < n; i++){
        cycle(v);
        print(v);
    }
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Fix_Flooded_Floor.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n = 2, m = n, pf[2][N];
string v[2];


int recur(int i, int j){

    if(v[i][j] == '#'){
        if(v[!i][j] == '#')return recur(i, j + 1);
        else return recur(!i, j);
    }

    int a = 0, b = 0;
    
}


void sukuna(int test){
    cin >> m;
    forn(i,n)cin >> v[i];
    
    vector<vin> v(4, vin(n + 2));

    pf[0][0] = v[0][0] == '.';
    pf[1][0] = v[1][0] == '.';
    
    for(int j = 0; j < 2; j++){
        for(int i = 1; i < n; i++){
            if(v[j][i] == '#')continue;
            pf[j][i] = pf[j][i - 1] + 1;
        }
    }
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Forever_Winter.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int m, n;
    cin >> m >> n;
    vin gph(m + 1);
    forn(i,n){
        int v1, v2;
        cin >> v1 >> v2;
        gph[v2]++;
        gph[v1]++;
    }

    map<int, int> mp;
    for(auto a : gph){
        if(a > 1)mp[a]++;
    }
    if(mp.size() == 1){
        cout<<mp.begin()->first<<' '<<mp.begin()->first - 1<<endl;
    }else{
        int x = mp.begin()->first, y = mp.rbegin()->first;
        if(mp[y] == 1)swap(x, y);
        cout<<x<<" "<<y - 1<<endl;
    }



}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Greetings.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(v)          for(auto a : v)cout<<a.first<<' '<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vector<pr>v(n);
    vin b(n);
    forn(i,n)cin >> v[i].first >> v[i].second, b[i] = v[i].second;
    sort(all(v));
    sort(all(b));

    int ans = 0;

    for(auto a :  v){
        auto lo = lower_bound(all(b), a.second);
        int p = lo - b.begin();
        ans += p;
        b.erase(lo); //***
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Grid.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int str2bin(string str)
{
    ll sum=0;
    ll x=1;
    rforn(i,str.size())
    {
        if(str[i]==49)sum+=x;
        x<<=1;
        // cout<<x<<" ";
    }
    // cout<<sum;nl;
    return sum;
}
int main()
{
    fast_in_out;
    unsigned long long sum=0;
    forn(i,21)
    {
        string str;
        cin>>str;
        sum+=str2bin(str);
    }
    forn(i,21)sum>>=1;
    sum--;

    cout<<sum;nl;
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Ira_and_Flamenco.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


using u128 = __uint128_t;

int binExp(int a, int b, int M = 1e9 + 7){
    int ans = 1;    a %= M;
    
    while(b > 0){
        if(b & 1)ans = ((u128)(ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((u128)(a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }

int n, m;
void sukuna(int test){
    cin >> n >> m;
    vin v(n), dist(n + 1);
    map<int, int> mp;
    forn(i,n)cin >> v[i], mp[v[i]]++;
    sort(all(v));
    set<int> s;
    for(int i = 0; i < n; i++){
        if(i > 0)dist[i] = dist[i - 1];
        if(s.count(v[i]) == 0)dist[i]++, s.insert(v[i]);
    }


    int prev = -1, ans = 0, temp = 1;

    for(int i = 0; i < n; i++){
        if(prev == v[i])continue;
        int up = upper_bound(all(v), v[i] + m - 1) - v.begin(); up--;
        prev = v[i];
        if(i == 0){
            set<int> s;
            for(int j = i; j <= up; j++)s.insert(v[j]);
            for(auto i : s){
                temp = temp * mp[i] % M;
            }
        }
        else{
            temp = temp * mp[v[up]] % M;
            temp = temp * mmiOfX(mp[v[i - 1]]) % M;
        }
        if(dist[up] - (i == 0 ? 0 : dist[i - 1]) < m)continue;
        ans += temp;
        ans %= M;
    }
    cout << ans << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Kosuke_s_Sloth.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    n %= M;
    if(k == 1){
        cout << n << endl;
        return;
    }
    int first_index = 1;
    int x = 1, y = 1;
    while(x % k != 0){
        int temp = (x + y) % k;
        x = y;
        y = temp;
        first_index++;
    }

    cout << (first_index % M * n % M) % M <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Longest_Strike.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    map<int, int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
    }
    vin v;
    bool flg = 1;
    for(auto i : mp){
        if(i.second >= k){
            flg = 0;
            v.push_back(i.first);
        }
    }
    if(flg){
        cout<<-1<<endl;
        return;
    }
    
    vector<vin> ans;
    for(int i = 1; i < v.size(); i++){
        vin tmp;
        if((v[i] - v[i - 1]) == 1){
            tmp.push_back(v[i - 1]);
            while(v[i] - v[i - 1] == 1 && i < v.size()){
                tmp.push_back(v[i]);
                i++;
            }
            ans.push_back(tmp);
        }
    }

    if(ans.size() == 0){
        cout<<v.front()<<' '<<v.front()<<endl;
        return;
    }
    int mx = 0, x, y;
    for(auto i : ans){
        if(i.size() > mx){
            mx = i.size();
            x = i.front();
            y = i.back();
        }
    }

    cout<<x<<" "<<y<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Lost_in_Transliteration.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string func(string str){
    string ans;
    str.push_back('*');

    for(int i = 0; i < str.size(); i++){
        if(str[i] == 'u'){
            ans += "oo";
        }else if(str[i] == 'k' && str[i + 1] == 'h'){
            ans.push_back('h');
            i++;
        }else{
            ans.push_back(str[i]);
        }
    }
    ans.pop_back();
    return ans;
}

int32_t main(){
    fast_in_out;
    lin(n);

    map<string, int>mp;

    forn(i,n){
        string str;
        cin >> str;
        str = func(str);
        while(str != func(str))str = func(str);
        mp[str]++;
    }
    cout << mp.size() << endl;   
}

"/home/raihan/Desktop/Codeforces/F_Make_It_Connected.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> cost(N), vis(N);

class grp{public: int x, y, z; grp(){}grp(int a, int b, int c){x = a; y = b; z = c;} void display(){cout << x <<" " << y <<" " << z << endl;}};
class dsu{
    private:
        int n; vector<int> par, sz;
        void make(){
            for(int v = 1; v <= n; v++){
                par[v] = v; 
                sz[v] = 1;
            }
        }
    public:
        dsu(int n){
            this->n = n;
            par = vector<int> (n + 1); sz = vector<int> (n + 1);
            make();
        }
        
        int Find(int v){
            if(par[v] == v)return v;
            return par[v] = Find(par[v]);
        }
        void Union(int a, int b){
            a = Find(a);
            b = Find(b);

            if(a != b){
                if(sz[a] < sz[b])swap(a, b);
                par[b] = a;
                sz[a] += sz[b];
            }
        }
};

void kruskal(){
    int n, m, mn = INF, par;
    cin >> n >> m;
    for(int i = 1; i <= n; i++){
        cin >> cost[i];
        if(cost[i] < mn){
            mn = cost[i];
            par = i;
        }
    }
    vis[par] = 1;

    vector<grp> graph;
    for(int i = 0; i < m; i++){
        int x, y, z;
        cin >> x >> y >> z;
        z = min(z, cost[x] + cost[y]);
        graph.push_back({x, y, z});
    }
    sort(graph.begin(), graph.end(),[](grp a, grp b){return a.z < b.z;});

    // for(auto i : graph)i.display();

    int total_cost = 0;
    dsu obj(n);

    //3 4 5 10 10 9 5 4 7 8

    for(auto edge : graph){
        int x = edge.x;
        int y = edge.y;
        int z = edge.z;
        // cout << total_cost << endl;

        if(obj.Find(x) == obj.Find(y))continue;
        // if(vis[x] & vis[y])continue;
        if(vis[x]){
            z = min(z, mn + cost[y]);
            total_cost += z;
            vis[x] = vis[y] = 1;
            obj.Union(y, par);
            obj.Union(x, par);
            cost[x] = mn;
            cost[y] = mn;
            continue;
        }
        if(vis[y]){
            swap(x, y);
            z = min(z, mn + cost[y]);
            total_cost += z;
            vis[x] = vis[y] = 1;
            obj.Union(y, par);
            obj.Union(x, par);
            cost[x] = mn;
            cost[y] = mn;
            continue;
        }

        vis[x] = vis[y] = 1;

        z = min(mn + z + min(cost[x], cost[y]), 2 * mn + cost[x] + cost[y]);
        obj.Union(x, par);
        obj.Union(y, par);
        cost[x] = cost[y] = mn;
        total_cost += z;
    }

    // for(int i = 1; i <= n; i++)cout << vis[i] <<" ";nl;

    for(int i = 1; i <= n; i++){
        if(vis[i])continue;
        total_cost += mn + cost[i];
    }

    
    

    

    cout << total_cost << endl;
}


int32_t main(){
    fast_in_out;
    kruskal();    
}

"/home/raihan/Desktop/Codeforces/F_Money_Trees.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    int n, k, ans = 0, sum = 0;
    cin>>n>>k;
    vin a(n), h(n);
    forn(i,n)cin>>a[i];
    forn(i,n)cin>>h[i];

    for(int i = 0, j = 0; i < n; i++){

        while(j < n && (j <= i || h[j - 1] % h[j] == 0)){
            if(sum + a[j] > k)break;
            sum += a[j];
            j++;
        }
        ans = max(ans, j - i);
        sum -= a[i];
    }
    cout<<ans<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Range_Update_Point_Query.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, q;
vin v;
set<int>s;

int digit_sum(int n){
    int sum = 0;
    while(n > 0){
        sum += n % 10;
        n /= 10;
    }
    return sum;
}

void op(int i, int j){
    if(s.empty())return;
    auto l = s.lower_bound(i);
    
    vin temp;
    for(; l != s.end() && *l <= j; l++){
        i = *l;
        v[i] = digit_sum(v[i]);
        if(v[i] == digit_sum(v[i]))temp.push_back(i);
    }
    for(auto i : temp)s.erase(i);

}


void sukuna(){
    cin >> n >> q;
    
    s.clear();
    v.clear(); v.push_back(0);
    Forn(i,n){
        lin(x);
        v.push_back(x);

        if(x == digit_sum(x))continue;
        s.insert(i);
    }


    while(q--){
        lin(t);
        if(t == 1){
            int x, y;
            cin >> x >> y;
            op(x, y);
        }else{
            lin(x);
            cout<<v[x]<<endl;
        }
    }
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Sakurako_s_Box.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int binExp(int a, int b){
    int ans = 1;
    a %= M;
    while(b > 0){
        if(b & 1)ans = ((ans % M)* (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}


void sukuna(){
    int sum = 0, ans = 0;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i], sum += v[i];

    for(auto i : v){
        int x = (((sum - i) % M) * (i % M)) % M;
        ans = (ans + x) % M;
    }

    int x = (n * (n - 1)) % M;
    int mmi = binExp(x, M - 2);

    ans = ((ans % M) * (mmi % M)) % M;
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Simple_Cycles_Edges.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> graph[N], vis(N), height(N), depth(N);
int n,m;

void dfs(int vertex = 1, int par = -1){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        if(vis[child])continue;
        
        depth[child] = depth[vertex] + 1;
        dfs(child);
        height[vertex] = max(height[vertex], height[child] + 1);
    }
}

void reset(){
    for(int i = 1; i <= n; i++){
        graph[i].clear();
        vis[i] = 0;
        height[i] = 0;
        depth[i] = 0;
    }
}
void sukuna(){
    cin >> n >> m;
    reset();
    for(int i = 0; i < m; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }



}

int32_t main(){
    fast_in_out;
    sukuna();  
    
}

"/home/raihan/Desktop/Codeforces/F_Smaller.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int x;
string s;
map<char, int> a, b;

void op(map<char, int> &mp){
    for(auto c : s)mp[c] += x;
}

bool chk(){
    if(a.begin()->first != b.rbegin()->first)return true;
    if(a['a'] < b['a']){
        if(b.size() > 1)return true;
        if(a.size() == 1)return true;
    }

    return false;
}


void sukuna(){
    lin(n);
    a.clear();
    a['a']++; b = a;

    while(n--){
        int t;
        cin >> t >> x >> s;

        if(t == 1){
            op(a);
            if(chk())yes;
            else no;
            
        }else{
            op(b);
            if(chk())yes;
            else no;            
        }
    }  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Spy_string.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;
vector<string> v;

bool chk(string str){
    for(auto s : v){
        int cnt = 0;
        for(int i = 0; i < m; i++){
            if(s[i] != str[i])cnt++;
            if(cnt > 1)return false;
        }
    }
    return true;
}


void sukuna(int test){
    v.clear();
    cin >> n >> m;
    forn(i,n){
        string str;
        cin >> str;
        v.push_back(str);
    }   
    for(int i = 0; i < m; i++){
        for(char c = 'a'; c <= 'z'; c++){
            string str = v[0];
            str[i] = c;
            if(chk(str)){
                cout << str << endl;
                return;
            }
        }
    } 
    cout << -1 << endl;    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_SUM_and_REPLACE.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 3e5 + 100;
const int X = 1e6 + 100;

bool isPrime[X];
int hp[X];

void seive(){
    isPrime[0] = isPrime[1] = 1;

    for(int i = 2; i < X; i++){
        if(!isPrime[i]){
            hp[i] = i;
            for(int j = i + i; j < X; j += i){
                isPrime[j] = true;
                hp[j] = i;
            }
        }
    }
}

int cnt(int n){
    int tot = 1;
    while(n > 1){
        int cntt = 1;
        int pm = hp[n];

        while(n % pm == 0){
            cntt++;
            n /= pm;
        }
        tot *= cntt;
    }
    return tot;
}

int n, q;
int v[N], tree[4 * N], mx[4 * N];

void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        mx[node] = v[lo];
        v[lo] = cnt(v[lo]);
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1];
    mx[node] = max(mx[2 * node], mx[2 * node + 1]);
}

int query(int node, int lo, int hi, int &l, int &r){
    if(lo > r or hi < l)return 0;
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return q1 + q2;
}


void update(int node, int lo, int hi, int l, int r){
    if(lo > r or hi < l)return;
    if(lo >= l and hi <= r){
        if(mx[node] > 2)build(node, lo, hi);
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r);
    update(2 * node + 1, mid + 1, hi, l, r);

    tree[node] = tree[2 * node] + tree[2 * node + 1];
    mx[node] = max(mx[2 * node], mx[2 * node + 1]);
}


int32_t main(){

    ios_base::sync_with_stdio(false); 
    cin.tie(NULL); cout.tie(NULL);

    seive();
    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];
    build(1, 0, n - 1);

    while(q--){
        int typ, l, r;
        cin >> typ >> l >> r;
        --l, --r;

        if(typ == 1){
            update(1, 0, n - 1, l, r);
        }else{
            cout << query(1, 0, n - 1, l, r) << endl;
        }
    }

}

"/home/raihan/Desktop/Codeforces/F_The_Treasure_of_The_Segments.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    map<int, int> mp;
    forn(i,n){
        int l, r;
        cin >> l >> r;
        mp[l]++; mp[r + 1]--;
    }
    vin v;
    for(auto i : mp)v.push_back(i.second);
    print(v);
    int ans = v[0];
    for(int i = 1; i < v.size(); i++){
        v[i] += v[i - 1];
        ans = max(ans, v[i]);
    }
    cout << n - ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}


"/home/raihan/Desktop/Codeforces/F_Tree_with_Maximum_Cost.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> graph[N], vis(N), height(N), depth(N);
int n,m;

void dfs(int vertex = 1, int par = -1){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        if(vis[child])continue;
        
        depth[child] = depth[vertex] + 1;
        dfs(child);
        height[vertex] = max(height[vertex], height[child] + 1);
    }
}

void reset(){
    for(int i = 1; i <= n; i++){
        vis[i] = 0;
        height[i] = 0;
        depth[i] = 0;
    }
}
void sukuna(){
    cin >> n;
    reset();
    for(int i = 0; i < n - 1; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }
    int leaf1 = 1, leaf2 = 1, mx = 0;
    dfs(1);
    for(int i = 1; i <= n; i++){
        if(depth[i] > mx){
            mx = depth[i];
            leaf1 = i;
        }
    }
    reset();
    dfs(leaf1);
    mx = 0;
    for(int i = 1; i <= n; i++){
        if(depth[i] > mx){
            mx = depth[i];
            leaf2 = i;
        }
    }

    cout << leaf1 <<" " << leaf2 << endl;

}

int32_t main(){
    fast_in_out;
    sukuna();   
    
}

"/home/raihan/Desktop/Codeforces/F_We_Were_Both_Children.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n; m = n;
    map<int, int> mp, pf;
    for(int i = 0; i < n; i++){
        lin(x);
        if(x <= m)mp[x]++;
    }

    int ans = 0;
    for(auto a : mp){
        for(int j = a.first; j <= m; j += a.fi){
            pf[j] += a.second;
            ans = max(ans, pf[j]);
        }
    }

    cout<<ans<<endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Yet_Another_Problem_About_Pairs_Satisfying_an_Inequality.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vector<pr>v;
    vin a(n);
    forn(i,n)cin >> a[i];

    for(int i = 0; i < n; i++){
        if(a[i] <= i)v.push_back({a[i], i + 1});
    }
    sort(all(v));
    a.clear();
    for(auto i : v)a.push_back(i.first);
    n = v.size();
    // mprint(v);

    int ans = 0;
    for(int i = 0; i < n; i++){
        int up = upper_bound(all(a), v[i].second) - a.begin();
        ans += n - up;
    }

    cout << ans <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_You_Are_So_Beautiful.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int ans = 0, sum = 0;
    map<int, int> fnl, mp;
    vin v(n);
    forn(i,n)cin >> v[i], fnl[v[i]]++;
    forn(i,n){
        mp[v[i]]++;
        if(mp[v[i]] == 1)sum++;
        if(mp[v[i]] == fnl[v[i]])ans += sum;
    }

    cout << ans <<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_1_Erase_and_Extend_Easy_Version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, k;
string op(string str){
    while(str.size() < k){
        str += str;
    }
    while(str.size() > k)str.pop_back();
    return str;
}


void sukuna(int test){
    string str, temp;
    cin >> n >> k >> str;
    temp.push_back(str.front());
    string ans = op(temp);

    for(int i = 1; i < n; i++){
        if(str[i] > str[0])break;
        temp.push_back(str[i]);
        ans = min(ans, op(temp));
    }
    cout << ans << endl;    
}

int32_t main(){
    fast_in_out;

    int test = 1;  // cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_1_Game_with_Marbles_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

bool cmp(pair<int, int> a, pair<int, int> b){
    return a.first + a.second > b.first + b.second;
}

void sukuna(){
    lin(n);
    vector<pair<int, int>> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    sort(all(v), cmp);

    int ans = 0;
    bool ck = 1;
    for(int i = 0; i < n; i++){
        if(ck)ans += v[i].first - 1;
        else ans -= v[i].second - 1;
        ck = !ck;      
    }

    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_2_Array_and_Segments_Hard_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, q;
vin glv;

int op(vin v, vector<pr> seg){
    vin sub(n + 2);
    for(auto x : seg)sub[x.first]++, sub[x.second + 1]--;
    for(int i = 1; i < n; i++)sub[i] += sub[i - 1];
    for(int i = 0; i < n; i++){
        v[i] -= sub[i];
    }
    
    glv = v;
    int mx = *max_element(all(v));
    int mn = *min_element(all(v));
    return mx - mn;
}

void sukuna(int test){
    vector<pr> p;
    vin v;
    cin >> n >> q;
    forn(i,n){
        lin(x);
        v.push_back(x);
    }
    forn(i,q){
        int x, y;
        cin >> x >> y;
        p.push_back({--x, --y});
    }
    vin seg;
    

    int ans = *max_element(all(v)) - *min_element(all(v));
    for(int i = 0; i < n; i++){
        vector<pr> temp;
        vin segTemp;
        int xx = 0;
        for(auto x : p){
            xx++;
            if(i >= x.first && i <= x.second)continue;
            temp.push_back(x);
            segTemp.push_back(xx);
        }
        if(temp.empty())continue;
        int val = op(v, temp);
        if(val > ans){
            ans = val;
            seg = segTemp;
        }

        for(int j = i; j < n; j++){
            if(v[j] != glv[j])break;
            i = j;
        }
    }


    for(int i = n - 1; i >= 0; i--){
        vector<pr> temp;
        vin segTemp;
        int xx = 0;
        for(auto x : p){
            xx++;
            if(i >= x.first && i <= x.second)continue;
            temp.push_back(x);
            segTemp.push_back(xx);
        }
        if(temp.empty())continue;
        int val = op(v, temp);
        if(val > ans){
            ans = val;
            seg = segTemp;
        }

        for(int j = i; j >= 0; j--){
            if(v[j] != glv[j])break;
            i = j;
        }
    }


    cout << ans << endl;
    cout << seg.size() << endl;
    print(seg);
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_2_Close_Tuples_hard_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


using u128 = __uint128_t;

int binExp(int a, int b, int M = 1e9 + 7){
    int ans = 1;    a %= M;
    
    while(b > 0){
        if(b & 1)ans = ((u128)(ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((u128)(a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }

int n, m, k, r;
int fact[N];

int nCr(int n){
    if(n < m)return 0;
    int n_r = mmiOfX(fact[n - m]);
    int ans = fact[n] * r % M;
    ans = ans * n_r % M;
    return ans;
}

void sukuna(int test){
    cin >> n >> m >> k;
    vin v(n), freq(n + 1);
    forn(i,n)cin >> v[i], freq[v[i]]++;
    sort(all(v));

    int ans = 0, prev = 0, sub = 0;
    r = mmiOfX(fact[m]);

    for(int i = 0; i < n; i++){
        if(prev == v[i])continue;
        int cnt = freq[v[i]];
        int up = upper_bound(all(v), v[i] + k) - v.begin(); up--;

        ans = (ans + M - sub) % M;
        ans += nCr(up - i + 1);

        sub = nCr(up - i + 1 - cnt);
        prev = v[i];
    }
    cout << ans << endl; 
}

int32_t main(){
    fast_in_out;
    fact[0] = 1;
    for(int i = 1; i < N; i++){
        fact[i] = fact[i - 1] * i % M;
    }

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_2_Game_with_Marbles_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

bool cmp(pair<int, int> a, pair<int, int> b){
    return a.first + a.second > b.first + b.second;
}

void sukuna(){
    lin(n);
    vector<pair<int, int>> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    sort(all(v), cmp);

    int ans = 0;
    bool ck = 1;
    for(int i = 0; i < n; i++){
        if(ck)ans += v[i].first - 1;
        else ans -= v[i].second - 1;
        ck = !ck;      
    }

    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Add_Modulo_10.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Yes\n"
#define no                 cout<<"No\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool isPossible(int x, int y){
    if(x == y)return true;
    vin temp;
    int xx = x;
    while(x - xx <= 20){
        if(x % 10 == 0)break;
        x += x % 10;
        if(x == y)return true;
        temp.push_back(x);
    }

    for(auto i : temp){
        if(y > i && (y - i) % 20 == 0)return true;
    }
    return false;
}

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n){
        cin >> v[i];
        if(v[i] & 1)v[i] += v[i] % 10;
    }
    int mx = *max_element(all(v));

    for(int i = 0; i < n; i++){
        if(!isPossible(v[i], mx)){
            no;
            return;
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Almost_Regular_Bracket_Sequence.cpp"
#include <bits/stdc++.h>
using namespace std;
int main()
{
    long i, j, k, n;
    cin >> n;
    string s;
    cin >> s;
    stack<long> st;
    j = 0;
    for (i = 0; i < n; i++)
    {
        if (s[i] == '(')
            st.push(i);
        else
        {
            if (st.empty())
            {
                j++;
                if (j == 1)
                    k = i;
            }
            else
                st.pop();
        }
    }
    if (j == 0 && st.size() == 2)
    {
        cout << (n - st.top()) / 2 + 1;
    }
    else if (j == 2 && st.size() == 0)
        cout << (k) / 2 + 1;
    else
        cout << 0;
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Alternating_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n;

int mk(string str, string s){
    int sum = 0;
    for(int i = 0; i < n; i += 2){
        if(str[i] != s[0])sum++;
        if(str[i + 1] != s[1])sum++;
    }
    return sum;
}

int func1(string str){
    map<string, int> mp;
    int mx = 0;
    for(int i = 0; i < n; i += 2){
        string s;
        s.pb(str[i]); s.pb(str[i + 1]);
        mp[s]++;
        mx = max(mx, mp[s]);
    }
    int ans = INF;
    for(auto i : mp){
        if(i.second == mx){
            ans = min(ans, mk(str, i.first));
        }
    }
    return ans;
}

int func2(string str){

    int ans = INF;
    int m = n, mn = INF; n--;
    map<char, int> mp;
    for(auto i : str){
        mp[i]++;
    }
    for(auto i : mp){
        if(i.second > mn)mn = i.second;
    }
    
    for(int i = 0; i < m; i++){
        string temp = str;
        temp.erase(temp.begin() + i);
        ans = min(ans, func1(temp));
    }

    return ans + 1;
}


void sukuna(){
    cin >> n;
    string str;
    cin >> str;
    if(n == 1){
        cout<<1<<endl;
        return;
    }  
    if(n % 2 == 0)cout<<func1(str)<<endl;  
    else cout<<func2(str)<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Alternating_String.py"
from collections import Counter
 
n_tests = int(input())
for _ in range(n_tests):
    n = int(input())
    s = input()
 
    if n % 2 == 0:
        even_counter = Counter()
        odd_counter = Counter()
 
        for i in range(len(s)):
            if i % 2 == 0:
                even_counter[s[i]] += 1
            else:
                odd_counter[s[i]] += 1
 
        even_counter_max = even_counter.most_common(1)[0]
        odd_counter_max = odd_counter.most_common(1)[0]
 
        result = n // 2 - even_counter_max[1] + n // 2 - odd_counter_max[1]
        print(result)
    else:
        if n == 1:
            print(1)
            continue
        best = 10**9
        even_counter = Counter()
        odd_counter = Counter()
        for i in range(len(s) - 1):
            if i % 2 == 0:
                even_counter[s[i]] += 1
            else:
                odd_counter[s[i]] += 1
        even_counter_after = Counter()
        odd_counter_after = Counter()
        best = min(best, n // 2 - even_counter.most_common(1)[0][1] + n // 2 - odd_counter.most_common(1)[0][1])
        for i in range(len(s)-2, -1, -1):
            if i % 2 == 0:
                even_counter[s[i]] -= 1
                even_counter_after[s[i+1]] += 1
            else:
                odd_counter[s[i]] -= 1
                odd_counter_after[s[i+1]] += 1
            even_counter_merged = even_counter + even_counter_after
            odd_counter_merged = odd_counter + odd_counter_after
            best = min(best, n // 2 - even_counter_merged.most_common(1)[0][1] + n // 2 - odd_counter_merged.most_common(1)[0][1])
        if n < 2:
            print(best + 2)
        else:
            print(best + 1)

"/home/raihan/Desktop/Codeforces/E_Anfisa_the_Monkey.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int k, a, b, n, dp_cnt = 0;
string str;    
vin ans;
bool flg = false;
void recur(int ind, int cnt, vin v){
    dp_cnt++;
    if(flg)return;
    if(ind == n){
        if(cnt == k){
            ans = v;
            flg = true;
        }
        return;
    }

    for(int i = ind + a; i <= n && i < ind + b; i++){
        vin temp = v;
        temp.push_back(i);
        recur(i, cnt + 1, temp);
    }
}

void sukuna(){
    cin >> k >> a >> b;
    cin >> str;
    n = str.size();

    recur(0, 0, {});

    print(ans);
    cout << dp_cnt << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Anna_and_the_Valentine_s_Day_Gift.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Sasha\n"
#define no                 cout<<"Anna\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int zeroCount(int n){
    int cnt = 0;
    while(n % 10 == 0){
        cnt++;
        n /= 10;
    }
    return cnt;
}

int digitCount(int n){
    int cnt = 0;
    while(n % 10 == 0)n /= 10;
    while(n > 0){
        cnt++;
        n /= 10;
    }
    return cnt;
}

void sukuna(){
    int n, m, ans = 0;
    cin >> n >> m;m++;
    vin v(n), a;
    forn(i,n)cin >> v[i];
    forn(i,n){
        ans += digitCount(v[i]);
        if(zeroCount(v[i]) > 0)
            a.push_back(zeroCount(v[i]));        
    }
    sort(all(a), greater<int>());

    bool flg = 0;
    for(auto i : a){
        if(flg)ans += i;
        flg = !flg;
    }

    if(ans >= m)yes;
    else no;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Arranging_The_Sheep.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;
    vin v(1);
    for(int i = 0; i < n; i++){
        if(str[i] == '.'){
            v.push_back(0);
            continue;
        }
        int cnt = 0;
        for(int j = i; j < n; j++){
            if(str[j] == '.')break;
            cnt++;
            i = j;
        }
        v.push_back(cnt);
    }
    n = v.size() - 1;
    vin fr(n + 2), bk(n + 2);
    int extra = 0, cnt = 0;
    for(int i = 1; i <= n; i++){
        if(v[i] > 0){
            fr[i] = fr[i - 1];
            extra = cnt;
            cnt += v[i];
            continue;
        }
        fr[i] += fr[i - 1] + cnt;
    }

    extra = 0, cnt = 0;
    for(int i = n; i >= 0; i--){
        if(v[i] > 0){
            bk[i] = bk[i + 1];
            extra += cnt;
            cnt += v[i];
            continue;
        }
        bk[i] += bk[i + 1] + cnt;
    }

    int ans = INF;
    for(int i = 1; i <= n; i++){
        if(v[i] == 0)continue;
        int x = fr[i - 1];
        int y = bk[i + 1];
        ans = min(ans, x + y);
    }
    if(ans == INF)ans = 0;
    cout << ans << endl;

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Arranging_The_Sheep.java"
import java.util.ArrayList;
import java.util.Scanner;

public class E_Arranging_The_Sheep {
    static Scanner in = new Scanner(System.in);

    static void solve(){
        long N = 1000000000000000000L;
        int n = in.nextInt();
        String str = in.next();
        ArrayList<Integer> v = new ArrayList<Integer>();
        v.add(0);

        for(int i = 0; i < n; i++){
            if(str.charAt(i) == '.'){
                v.add(0);
                continue;
            }
            int cnt = 0;
            for(int j = i; j < n; j ++){
                if(str.charAt(j) == '.')break;
                i = j;
                cnt++;
            }
            v.add(cnt);
        }
        n = v.size() - 1;
        long fr[] = new long[n + 2];
        long bk[] = new long[n + 2];
        
        long extra = 0, cnt = 0;
        for(int i = 1; i <= n; i++){
            if(v.get(i) > 0){
                fr[i] = fr[i - 1];
                extra = cnt;
                cnt += v.get(i);
                continue;
            }
            fr[i] += fr[i - 1] + cnt;
        }

        extra = 0; 
        cnt = 0;
        for(int i = n; i >= 0; i--){
            if(v.get(i) > 0){
                bk[i] = bk[i + 1];
                extra = cnt;
                cnt += v.get(i);
                continue;
            }
            bk[i] += bk[i + 1] + cnt;
        }

        long ans = N;

        for(int i = 1; i <= n; i++){
            if(v.get(i) == 0)continue;
            long x = fr[i - 1];
            long y = bk[i + 1];
            ans = Math.min(ans, x + y);
        }
        if(ans == N)ans = 0;
        System.out.println(ans);        


    }
    public static void main(String[] args) {
        int test = in.nextInt();

        while(test-- > 0){
            solve();
        }
    }
}

"/home/raihan/Desktop/Codeforces/E_Assignment_and_Minimum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5 + 100;



vector<int> tree(4 * N, 0), v(N), lazy(4 * N, -1);

int query(int node, int lo, int hi, int &l, int &r){

    if(lazy[node] != -1){
        int dx = lazy[node];
        lazy[node] = -1;

        tree[node] = dx;

        if(hi != lo){
            lazy[2 * node] = dx;
            lazy[2 * node + 1] = dx;
        }
    }

    if(lo > r or hi < l)return INF; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return min(q1, q2); //***
}


void update(int node, int lo, int hi, int l, int r, int val){


    if(lazy[node] != -1){
        int dx = lazy[node];
        lazy[node] = -1;

        tree[node] = dx;

        if(hi != lo){
            lazy[2 * node] = dx;
            lazy[2 * node + 1] = dx;
        }
    }
    
    if(lo > r or hi < l)return;
    if(lo >= l and hi <= r){
        tree[node] = val;

        if(hi != lo){
            lazy[2 * node] = val;
            lazy[2 * node + 1] = val;
        }
        
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);

    tree[node] = min(tree[2 * node], tree[2 * node + 1]);  //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1]; //***
}


int32_t main(){
    fast_in_out;
    int n, q;
    cin >> n >> q;

    // build(1, 0, n - 1);

    while(q--){
        int t, l, r, val;
        cin >> t >> l >> r;

        if(t == 2){
            cout << query(1, 0, n - 1, l, --r) << endl;
        }else{
            cin >> val;
            update(1, 0, n - 1, l, --r, val);
        }
    }

    
}

"/home/raihan/Desktop/Codeforces/E_Beautiful_Array.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int32_t main(){
    fast_in_out;    
    int a, b;
    cin >> a >> b;

    cout << 3 << endl;
    cout << b <<" " << -1000 <<" " << (1000 - b + 3 * a) << endl;
    
    
}

"/home/raihan/Desktop/Codeforces/E_Bertown_roads.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m, timer = 0;
vector<int> graph[N];
int in[N], low[N], vis[N];

bool isPossible = true;

void dfs(int vertex, int par){
    if(!isPossible)return;
    if(vis[vertex])return;
    vis[vertex] = true;

    in[vertex] = low[vertex] = timer++;

    for(auto child : graph[vertex]){
        if(child == par)continue;
        
        if(vis[child]){
            low[vertex] = min(low[vertex], low[child]);

        }else{
            dfs(child, vertex);
            
            if(low[child] > in[vertex]){
                isPossible = false;
                return;
            }

            low[vertex] = min(low[vertex], low[child]);
        }

    }

}


void reset(){
    for(int i = 1; i <= n; i++){
        graph[i].clear();
    }
}

void sukuna(){
    cin >> n >> m;
    reset();

    for(int i = 0; i < m; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }

    dfs(1, 0);

    if(!isPossible){
        cout << 0 << endl;
        return;
    }


}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Best_Price.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;

    sort(all(v));

    forn(i,n)cout << v[i].first <<" ";nl;
    forn(i,n)cout << v[i].second <<" ";nl;

    int ans = 0, bad = 0, neg = 0;
    multiset<int> s, st, fr;
    for(auto i : v)st.insert(i.second), fr.insert(i.first);

    for(int i = 0; i < n; i++){
        while(!s.empty() and *s.rbegin() < v[i].first){
            st.erase(st.find(*--s.end()));
            bad++;
            s.erase(--s.end());
        }
        neg = i - bad;
        s.insert(v[i].second);
        if(neg > k)continue;
        cout << v[i].first <<' ' << bad << endl;

        int cur = (n - bad) * max(v[i].first, (*st.begin()));
        ans = max(ans, cur);
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Dora_and_Search.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    if(n <= 3){
        cout<<-1<<endl;
        return;
    }
    
    int l = 0, r = n - 1;
    int mn = 1, mx = n;

    for(;l < r;){
        bool ck1 = 0, ck2 = 0;
        if(v[l] == mn){l++; mn++; ck1 = 1;}
        else if(v[l] == mx){l++; mx--; ck1 = 1;}

        if(v[r] == mn){r--; mn++; ck2 = 1;}
        else if(v[r] == mx){r--; mx--; ck2 = 1;}
        
        if((ck1 | ck2) == 0)break;
    }

    if(l >= r)cout<<-1<<endl;
    else cout<<l + 1<<" "<<r + 1<<endl;
      
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Double_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vector<pair<int, int>> v(n), ans;
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;

    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            if(v[i] < v[j]){
                swap(v[i], v[j]);
                ans.push_back({min(i,j) + 1, max(i,j) + 1});
            }
        }
    }
    forn(i,n - 1)if(v[i].second > v[i +  1].second){cout<<-1<<endl; return;}

    cout<<ans.size()<<endl;
    for(auto a : ans)cout<<a.first<<' '<<a.second<<endl; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Double_Sort.java"
import java.util.*;
import javafx.util.Pair;

public class C_Double_Sort {

    static Scanner in = new Scanner(System.in);

    static void solve(){
        int n = in.nextInt();
        ArrayList<Pair<Integer, Integer> > v
            = new ArrayList<Pair<Integer, Integer> >();
        
        for(int i = 0; i < n; i++){
            int x = in.nextInt();
            
        }


    }

    public static void main(String[] args) {
        int test = in.nextInt();
        while(test > 0){
            test--;
            solve();
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_Drazil_and_Factorial.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


string op(int n){
    if(n == 2)return "2";
    if(n == 3)return "3";
    if(n == 5)return "5";
    if(n == 7)return "7";
    if(n == 4)return "322";
    if(n == 6)return "53";
    if(n == 8)return "7222";
    if(n == 9)return "7332";
}


int32_t main(){
    fast_in_out;
    int n;
    string str, ans;
    cin >> n >> str;
    for(int i = 0; i < n; i++){
        if(str[i] <= '1')continue;
        ans += op(str[i] - '0');
    }
    
    sort(all(ans), greater<>());
    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Earning_on_Bets.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Ehab_and_a_2_operation_task.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);

    vin v(n), ans;
    forn(i,n)cin >> v[i];

    int sum = 0, mod = n + 1;
    int req = n;

    for(int i = n - 1; i >= 0; i--, req--){
        v[i] += sum;
        v[i] %= mod;

        if(req >= v[i]){
            ans.push_back(req - v[i]);
            sum += req - v[i];
            v[i] = req;
            continue;
        }
        sum += req +(mod - v[i]);
        ans.push_back(req + (mod - v[i]));
        v[i] = req;
    }    

    int ind = n;
    cout << mod << endl;
    for(auto i : ans){
        cout << 1 <<" " << ind-- << " " << i << endl;
    }
    cout << 2 <<" " << n << " " << mod <<endl;


    
}

"/home/raihan/Desktop/Codeforces/C_Elemental_Decompress.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    bool ck = 0;
    map<int, int> mp;
    vin v(n), a(n), b(n);
    forn(i,n){
        cin >> v[i];
        mp[v[i]]++;
        if(mp[v[i]] > 2)ck = 1;
    }
    if(ck){no; return;}
    set<int> s;
    map<int, int> pos;
    for(int i = 1; i <= n; i++){
        if(mp[i] == 0)s.insert(i);
    }
    for(int i = 1; i <= n; i++){
        if(mp[i] == 2)pos[i] = *s.begin(),
        s.erase(s.begin());
    }


    for(int i = 0; i < n; i++){
        if(mp[v[i]] == 1){
            a[i] = v[i];
            b[i] = v[i];
            continue;
        }

        if(mp[v[i]] == 2){
            mp[v[i]] = -1;
            a[i] = v[i];
            b[i] = pos[v[i]];
        }else if(mp[v[i]] == -1){
            mp[v[i]] = 0;
            a[i] = pos[v[i]];
            b[i] = v[i];
        }
    }

    forn(i,n){
        if(max(a[i], b[i]) != v[i]){
            no;
            return;
        }
    }
    yes;
    print(a);
    print(b);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Element_Extermination.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    if(v.front() < v.back())yes;
    else no;    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Equalize.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    string a, b;
    cin >> a >> b;
    a.push_back('*');
    int ans = 0;

    for(int i = 0; i < n; i++){
        if(a[i] == b[i])continue;
        if(a[i + 1] == b[i]){
            if(a[i + 1] == b[i + 1]){
                ans++;
                a[i] = b[i];
                continue;
            }
            swap(a[i], a[i + 1]);
            ans++;
        }else{
            a[i] = b[i];
            ans++;
        }
    }
    cout<<ans<<endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Equal_Sums.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

struct grp{int sum, seq, ind; void display(){cout << sum <<" " << seq <<" " << ind << endl;}};


int32_t main(){
    fast_in_out;
    lin(k);

    vector<grp>v;

    forn(j, k){
        lin(n);
        vin temp(n);
        forn(i,n)cin >> temp[i];
        int sum = accumulate(all(temp), 0ll);

        forn(i,n){
            v.push_back({sum - temp[i], j, i});
        }    
    }

    sort(all(v), [](grp a, grp b){return a.sum < b.sum;});

    for(int i = 1; i < v.size(); i++){
        if(v[i].sum == v[i-1].sum && v[i].seq != v[i - 1].seq){
            yes;
            cout << v[i].seq + 1 <<" " << v[i].ind + 1 << endl;
            cout << v[i - 1].seq + 1 << " " << v[i - 1].ind + 1 << endl;
            return 0;
        }
    }
    no;
    
}

"/home/raihan/Desktop/Codeforces/C_Even_Positions.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    int sum = 0, ct = 0;
    lin(n); string str;
    cin >> str;

    vin o(n), c(n);
    str[0] = '(';
    forn(i,n){
        if(str[i] == ')'){
            sum = i;
            break;
        }
    }
    rforn(i,n)
        if(str[i] == ')')c[i] = i;
        else c[i] = c[i + 1];

    forn(i, n)
        if(str[i] == '(')o[i] =  i;
        else o[i] = o[i - 1];

    forn(i, n){
        if(str[i] == '(')ct++;
        else if(str[i] == ')')ct--;
        if(str[i] == '_'){
            if(ct == 0){
                ct++;
                sum += c[i] - i;
            }else{
                ct--;
                sum += i - o[i];
            }
        }
    }
    cout<<sum<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Everything_Nim.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"Alice\n"
#define no                 cout<<"Bob\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n, ck=1;
    cin>>n;
    set<ll>s;
    forn(i,n)
    {
        lin(x);
        s.insert(x);
    }

    if(*s.begin()>1){yes; return 0;}

    auto a=s.begin(),b=a; 
    b++;

    for(;b!=s.end();a++,b++)
    {
        if(*b-*a==1)ck=!ck;
        else { ck=!ck; break;}
    }
    
    if(ck==1)yes;
    else no;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Fadi_and_LCM.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int lcm(int a, int b){
    return a * b / __gcd(a, b);
}

void sukuna(){
    lin(n);
    
    pair<int, int> ans= {INF, INF};
    int sum = INF;

    for(int i = 1; i * i <= n; i++){
        if(n%i != 0)continue;
        int a = i, b = n / i;  
        if(lcm(a, b) != n)continue;

        if(a + b < sum){
            sum = a + b;
            ans = {a, b};
        }
    }

    cout << ans.first <<" " << ans.second << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Farhan.cpp"
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long l;
typedef long double ld;
typedef unsigned long long ull;
typedef long double lld;


#define endl "\n"

#define REPn(i,n) for(ll i = 0; i < n; i++) 
#define REPsn(i,s,n) for(ll i = s; i < n; i++) 


#define fast_cin() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)

#define em emplace_back
#define mp make_pair 
#define pb push_back 
#define fi first
#define se second
#define INF 2e18
#define all(x) (x).begin(), (x).end()
#define sz(x) ((ll)(x).size()) 

vector<int>prime;

bool arr[1000001]={false};
void sieve(){
     int maxN=1000000;
     arr[0]=arr[1]=true;
     for(int i=2;i*i<=maxN;i++){
          if(!arr[i]){
                prime.push_back(i);
               for(int j=i*i;j<=maxN;j+=i) arr[j]=true;    
          }
     }
}

void siuuuuu(){
    sieve();

    int n,q;
    cin>>n>>q;

    stack<int>st,a,b;
    
        int x;

    REPn(i,n){
        cin>>x;
        st.push(x);
    }

    int j=0;
    while(q--){

       while(!st.empty()){
        if(st.top()%prime[j]==0){
            b.push(st.top());
            st.pop();
        }
        else{
            a.push(st.top());
            st.pop();
        }
       }

      while(!b.empty()){
        cout<<b.top()<<endl;
        b.pop();
     }
   
       st=a;

       while(!a.empty()){
        a.pop();
       }
     
       j++;
    }




  
     while(!st.empty()){
        cout<<st.top()<<endl;
        st.pop();
    }

}

int main(){

   fast_cin();
   clock_t z=clock();

    int tt;
     tt=1;

    while(tt--){

        siuuuuu();          
    }
  


     cerr << "Run Time : " << ((double)(clock() - z) / CLOCKS_PER_SEC);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Farhan.java"

"/home/raihan/Desktop/Codeforces/B_Generate_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n)
    if(n % 2 == 0){
        cout<<-1<<endl;
        return;
    }

    vin v(n);
    int l = 0, r = n - 1, s = 1;

    while(l <= r){
        v[l] = s++;
        if(l != r)v[r] = s, s++;
        l++;
        r--;
    }
    print(v);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Getting_Points.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, P, l, t;
    cin >> n >> P >> l >> t;

    int unlocked_test = 1 + (n - 1) / 7;

    int lo = 0, hi = n, mid = 0, p = 0;

    while(hi >= lo){
        mid = (lo + hi) / 2;
        p = min(2ll * (n - mid), unlocked_test) * t + (n - mid) * l;

        if(p < P){
            hi = mid - 1;
        }else{
            lo = mid + 1;
        }
    }
    cout<<hi<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Getting_Zero.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 32768;
const int N = 2e5 + 100;

int func(int n){
    int ans = 0;
    while(n%M != 0 && ans < 20){
        n <<= 1;
        n%= M;
        ans++;
    }
    return ans;
}


void sukuna(){
    lin(n);
    int ans = INF;
    for(int i = 0; i < 20; i++){
        ans = min(ans, func(n + i) + i);
    }
    cout<<ans<<' ';
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Good_Arrays.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef 					long long ll;
typedef 					long double ld;

#define forn(i,e) 			for(ll i=0;i<e;i++)
#define rforn(i,s) 			for(ll i=s-1;i>=0;i--)
#define yes 				cout<<"YES"<<endl
#define no 					cout<<"NO"<<endl
#define pb                 	push_back
#define pp                 	pop_back
#define nl 					cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    int n,i; cin>>n;
    vector<ll>arr(n);
    ll sum=0,fact=0;
    forn(i,n)
    {
        cin>>arr[i];
        sum+=arr[i];
    }
    sort(arr.begin(),arr.end());
    for(i=0;i<n;)
    {
        if(arr[i]==1)i++;
        else break;
    }
    sum=sum+i-n;
    if(n==1)no;
    else  
    if((i*2)<=sum)yes;
    else no;
    return 0;
}

int main()
{
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Good_Kid.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    lin(n);

    multiset<ll>s;
    forn(i,n)
    {
        lin(x);
        s.insert(x);
    }
    
    s.insert(*s.begin()+1); s.erase(s.begin());

    ll sum=1;
    for(auto a :s)sum*=a;
    cout<<sum;nl;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Good_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int l = 0, r = n - 1;
    for(int i = 0; i < n; i++){
        if(str[i] == '<')l = i;
    }
    rforn(i,n){
        if(str[i] == '>')r = i;
    }



    cout << min(n - l - 1, r) << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Haunted_House.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()

#define F                  first
#define S                  second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int st2bin(string str)
{
    ll sum=0;
    int x=0,i,j;
    // cout<<sz(str);nl;
    for(i=str.size()-1, j=0;i>=0;i--,j++)
    {
        if(str[i]==49)x=1<<j;
        sum+=x;
        x=0;
    }
    return sum;
}

int solve()
{
    in(n);
    string str;
    cin>>str;

    cout<<st2bin(str);nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_ICPC_Square.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


void sukuna(int test){
    int n, d, s;
    cin >> n >> d >> s;
    d -= d % s;
    int ans = s;

    while(d >= s){
        if(d * 2 <= n){
            ans = max(ans, d * 2);
        }
        d -= s;
    }
    // ans = max(ans, (2 * d <= n ? 2 * d : d));
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;  // cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Ilya_and_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    string str;
    cin >> str;
    int n = str.size();
    vin v(n), pf(n + 1);

    for(int i = 1; i < n; i++){
        if(str[i] == str[i - 1])v[i] = 1;
    }

    for(int i = 1; i < n; i++){
        pf[i] = v[i] + pf[i - 1];
    }
    lin(q);
    while(q--){
        lin(l) lin(r)
        l--; r--;
        cout<<pf[r] - pf[l]<<endl;
    }

    
    
}

"/home/raihan/Desktop/Codeforces/B_Incinerate.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vector<pair<int, int>> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    sort(all(v));
    for(int i = n - 1; i > 0; i--){
        v[i - 1].second = min(v[i].second, v[i - 1].second);
    }

    vin h(n), p(n);
    forn(i,n)h[i] = v[i].first, p[i] = v[i].second;

    int up = 0, kk = k;

    while(1){
        up = upper_bound(all(h), k) - h.begin();
        kk -= p[up];
        k += kk;
        if(up == n){yes; return;}
        if(kk < 0)break;
    }
    no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Increasing.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"
int avengers()
{
    int n;
    cin>>n;
    int arr[n],ck=0;
    forn(i,n)cin>>arr[i];
    sort(arr,arr+n);
    for(ll i=1;i<n;i++)
        if(arr[i]==arr[i-1]){ck++;; break;}

    (ck>0)?no:yes;
    return 0;
}

int main()
{
    int test; cin>>test;
    while(test--)
    {
        avengers();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Index_and_Maximum_Value.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m, mx = 0;
    cin >> n >> m;
    forn(i,n){
        lin(x);
        mx = max(x, mx);
    }

    forn(i,m){
        char c;
        int l, r;
        cin >> c >> l >> r;
        
        if(l <= mx && mx <= r){
            if(c == '+')mx++;
            else mx--;
        }
        cout<<mx<<' ';
    }
    nl;   
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Informatics_in_MAC.cpp"
    #include<bits/stdc++.h>
    using namespace std;
     
    typedef                    long long ll;
    typedef                    long double ld;
     
    #define forn(i,e)          for(ll i=0;i<e;i++)
    #define rforn(i,s)         for(ll i=s-1;i>=0;i--)
    #define yes                cout<<"YES"<<endl
    #define no                 cout<<"NO"<<endl
    #define pb                 push_back
    #define pp                 pop_back
    #define nl                 cout<<"\n"
    #define sz(x)              ((ll)(x).size())
     
    int sg(int m[],int n)
    {
        int ck=1;
        forn(i,n)if(m[i]==0){ck=0;break;}
        if(ck==1)return 1;
        else return 0;
    }
     
    int solve()
    {
        int n;cin>>n;
        int a[n+1]={0},i,mex,k=1;
        vector<int>arr(n);
        forn(i,n)
        {
            cin>>arr[i];
            a[arr[i]]++;
        }
        // forn(i,n)cout<<arr[i]<<" ";nl;
     
        for(i=0;i<=n;i++)if(a[i]==0){mex=i;break;}
        int m[mex]={0},cnt=0,p=0;
        // cout<<mex;nl;
        for(i=0;i<n;i++)
        {
            m[arr[i]]++;
            // forn(j,mex)cout<<m[j]<<" ";nl;
            if(sg(m,mex)==1)
            {
                cnt++;
                if(cnt==2)break;
                fill(m,m+mex,0);
                p=i+1;
     
            }
        }
        // cout<<cnt;nl;
        sort(arr.begin(),arr.end());
        if(mex==0 || arr[0]==arr[n-1])cout<<"2\n1 1\n2 "<<n;
        else if(cnt==2)cout<<"2\n1 "<<p<<"\n"<<p+1<<" "<<n;
        else cout<<"-1";
        nl;
     
        
        return 0;
    }
     
    int main()
    {
        int test;	cin>>test;
        while(test--)solve();
        return 0;
    }
     
     
    //Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Intercepted_Inputs.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    private:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        set<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            return divisors;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            if(l > r)swap(l, r);
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};

SeiveAlgo sv;

void sukuna(int test){
    lin(n);
    map<int,int> mp;
    vin v;
    forn(i,n){
        lin(x);
        v.push_back(x);
        mp[x]++;
    }


    int m = n - 2;
    // print(v);
    // cout << m << endl;

    for(auto i : v){
        if(m % i)continue;
        int j = m / i;
        if(i == j){
            if(mp[i] >= 2){
                cout << i <<" " << i << endl;
                return;
            }
            continue;
        }
        if(mp[j]){
            cout << i <<" " << j << endl;
            return;
        }

    }
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Interesting_Subarray.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    for(int i = 1; i < n; i++){
        if(abs(v[i] - v[i - 1]) >= 2){
            yes;
            cout<<i<<' '<<i + 1<<endl;
            return;
        }
    }

    no;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Turtle_and_a_MEX_Problem_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int summ(int n){
    return n * (n + 1) / 2;
}

void sukuna(){
    int n, m;
    cin >> n >> m;

    int mex = 0;
    forn(i,n){
        set<int> s;
        lin(len);
        while(len--){
            lin(x);
            s.insert(x);
        }

        int y = 0, j = 0;
        while(1){
            if(s.count(j) == 0){
                if(y == 0)y = 1;
                else{
                    mex = max(mex, j);
                    break;
                }
            }
            j++;
        }
    }

    if(mex >= m){
        cout<<(m + 1) * mex<<endl;
    }else{
        cout<<(mex * (mex + 1)) + (summ(m) - summ(mex))<<endl;
    } 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Zero_One_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, x, y;



void sukuna(){
    
    cin >> n >> x >> y;
    vin v;
    string a, b;
    cin >> a >> b;
    for(int i = 0; i < n; i++){
        if(a[i] != b[i]){
            v.pb(i + 2);
        }
    }
    if(v.size() & 1){cout << - 1 << endl; return;}
    if(v.size() == 0){cout << 0 << endl; return;}
    if(v.size() == 2){
        if(v[1] - v[0] == 1){
            if(n == 2)cout << x <<endl;
            else cout << min(x, 2 * y) <<endl;
            return;
        }else{
            cout << min(y, x * (v[1] - v[0])) <<endl;
            return;
        }
    }
    if(y <= x){
        cout << v.size() * y / 2 <<endl;
        return;
    }

    int ans = 0;

    for(int i = 0; i < v.size(); i += 2){
        ans += min(v[i + 1] - v[i] * x, y);
    }

    cout << ans <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_2_Asesino_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int query(int i, int j){
    cout <<"? " << i <<" " << j << endl;
    cout.flush();
    lin(ask);
    return ask;
}

void printAns(int ans){
    cout <<"! " << ans << endl;
    cout.flush();
}

void sukuna(int test){
    lin(n);
    if(n == 3){
        int a = query(1, 2);
        int b = query(2, 1);
        if(a == b)printAns(3);
        
        else{
            a = query(1, 3);
            b = query(3, 1);
            if(a == b)printAns(2);
            else printAns(1);
        }
        return;
    }   
    if(n & 1){

        if(n > 5)
        for(int i = 1; i < n - 5; i += 2){
            int a = query(i, i + 1);
            int b = query(i + 1, i);
            if(a != b){
                a = query(i, n);
                b = query(n, i);
                if(a == b)printAns(i + 1);
                else printAns(i);
                return;
            }
        }

        int x = n - 5;
        int a = query(x + 1, x + 2);
        int b = query(x + 2, x + 3);
        int c = query(x + 3, x + 1);

        if(a ^ b ^ c){
            a = query(x + 3, x + 4);
            b = query(x + 4, x + 3);
            if(a == b)printAns(n);
            else printAns(x + 4);

        }else{
            if(a == query(x + 2, x + 1))printAns(x + 3);
            else{
                if(b == query(x + 3, x + 2))printAns(x + 1);
                else printAns(x + 2);
            }
        }

    }else{
        for(int i = 1; i < n - 2; i += 2){
            int a = query(i, i + 1);
            int b = query(i + 1, i);
            
            if(a != b){
                a = query(i, n);
                b = query(n, i);
                if(a == b)printAns(i + 1);
                else printAns(i);
                return;
            }
        }
        int a = query(1, n);
        int b = query(n, 1);

        if(a == b)printAns(n - 1);
        else printAns(n);
    }
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_2_Mocha_and_Diana_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class Dsu{
    private:
        int n;
        vector<int> par, sz;
        void make(){
            for(int v = 1; v <= n; v++){
                par[v] = v; 
                sz[v] = 1;
            }
        }
    public:
        Dsu(int n){
            this->n = n;
            par = vector<int> (n + 1);
            sz = vector<int> (n + 1);
            make();
        }
        
        int Find(int v){
            if(par[v] == v)return v;
            return par[v] = Find(par[v]);
        }
        void Union(int a, int b){
            a = Find(a);
            b = Find(b);

            if(a != b){
                // if(sz[a] < sz[b])swap(a, b);
                if(a > b)swap(a, b);
                par[b] = a;
                sz[a] += sz[b];
            }
        }
};


void sukuna(int test){
    int n, m1, m2;
    cin >> n >> m1 >> m2;
    
    Dsu mocha(n), diana(n);
    forn(i, m1){
        int x, y;
        cin >> x >> y;
        mocha.Union(x, y);
    }   

    forn(i, m2){
        int x, y;
        cin >> x >> y;
        diana.Union(x, y);
    } 

    vector<pr> ans;
    for(int i = 2; i <= n; i++){
        if(mocha.Find(i) == 1 or diana.Find(i) == 1)continue;
        ans.push_back({1, i});
        mocha.Union(1, i);
        diana.Union(1, i);
    }
    vin res1, res2;

    for(int i = 2; i <= n; i++){
        if(mocha.Find(i) == i)res1.push_back(i);
        if(diana.Find(i) == i)res2.push_back(i);
    }

    if(res1.size() < res2.size())swap(res1, res2);

    for(int i = 0; i < res2.size(); i++)ans.push_back({res1[i], res2[i]});

    cout << ans.size() << endl;
    mprint(ans);


}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_2_Reverse_Card_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    int ans = 0;
    for(int i = 1; i <= n; i++){
        for(int j = i; j <= m; j+= i){
            if((j * i) % (i + j) == 0){
                if(i != j)ans += 2;
                else
                ans++;
            }
        }
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_2_Sage_s_Birthday_hard_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    ll n,cnt=-1,i=0,j;
    cin>>n;
    vector<ll>v;

    multiset<ll>s;
    forn(i,n)
    {
        lin(x);
        s.insert(x);
    }

    if(n<3)
    {
        cout<<0;nl;
        print(s);
        return 0;
    }

    auto a=s.begin(), b=--s.end();

    for( ;s.size() &&  *s.begin() < *--s.end();)
    {
        v.pb(*--s.end());
        v.pb(*s.begin());
        s.erase(s.begin());
        s.erase(--s.end());
        cnt++;
    }
    // cout<<"size = "<<s.size();nl;
    

    if( s.size()>0 && *--s.end()>*--v.end())
    {
        cnt++;
    }
    cout<<cnt;nl;
    print(v);
    print(s);
    nl;


    return 0;
}

"/home/raihan/Desktop/Codeforces/D_2_Zero_One_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int p[N], f[N];

void sukuna(){
    int n, x, y; string a, b;
    cin >> n >> x >> y >> a >> b;
    int m = 0;


    forn(i,n){
        if(a[i] != b[i]){
            p[++m] = i + 1;
        }
    }
    if(m & 1){
        cout << -1 <<endl;
        return;
    }

    if(m == 2 && p[2] - p[1] == 1){
        cout << min(x, y * 2) <<endl;
        return ;
    }
    f[1] = y;
    for(int i = 2; i <= m; i++){
        f[i] = min(f[i - 2] + 2 * (p[i] - p[i - 1]) * x, f[i - 1] + y);
    }

    cout << (f[m] + 1) / 2 <<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Addition_and_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);
 
int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        tree[node] += dx * (hi - lo + 1);
        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(lo > r or hi < l)return 0;
    if(lo >= l and hi <= r)return tree[node];
 
    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);
 
    return q1 + q2;
}
 
void update(int node, int lo, int hi, int &l, int &r, int &val){
 
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        tree[node] += dx * (hi - lo + 1);
        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        tree[node] += (hi - lo + 1) * val;
        
        if(lo != hi){
            lazy[2 * node] += val;
            lazy[2 * node + 1] += val;
        }
        return;
    }
 
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);
 
    tree[node] = tree[2 * node] + tree[2 * node + 1];
}
 
 
void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }
 
    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);
 
    tree[node] = tree[2 * node] + tree[2 * node + 1];
}

int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;

    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l >> r;
            cout << query(1, 0, n - 1, l, --r) << endl;
        }
    }    
}

"/home/raihan/Desktop/Codeforces/D_Almost_All_Divisors.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 8e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SEIVE{
    private:
        int N = 1e6;
        vector<bool> isPrime;
    public:
        vector<int> prime_numbers, lowest_prime, heighest_prime;
        
        SEIVE(){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            heighest_prime = lowest_prime;
            isPrime = vector<bool> (N);
            generate();
        }
    
        SEIVE(int N){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            heighest_prime = lowest_prime;
            isPrime = vector<bool> (N);
            generate();
        }

        set<int> primeFactors(int n){
            set<int> temp;
            while(n > 1){
                int pm = lowest_prime[n];
                while(n % pm == 0){
                    temp.insert(n / pm);
                    n /= pm;
                    temp.insert(pm);
                }
            }
            temp.erase(1);
            return temp;
        }

        vector<int> segSeive(int l, int r){
            int n = r - l + 1;
            vector<bool> isPrime(n + 1);
            vector<int> primes;

            for(int i = 0; prime_numbers[i] * prime_numbers[i] <= r; i++){
                int st = ceil(l * 1.0 / prime_numbers[i]) * prime_numbers[i];
                
                for(int j = st; j <= r; j += prime_numbers[i]){
                    if(j == prime_numbers[i])continue;
                    isPrime[j - l] = true;
                }
            }

            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        primes.push_back(i + l);
                    }
                }
            }
            return primes;
        }
        
    private:
        void generate(){
            isPrime[0] = isPrime[1] = 1;
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lowest_prime[i] = i;
                    heighest_prime[i] = i;
    
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = 1;
                        heighest_prime[j] = i;
                        if(lowest_prime[j] == 0){
                            lowest_prime[j] = i;
                        }
                    }
                }
            }
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    prime_numbers.push_back(i);
                }
            }
        }
};

SEIVE sv;

int lcm(int x, int y){
    return x * y / __gcd(x, y);
}

void sukuna(){
    lin(n);
    vin v(n);
    set<int> s;
    forn(i,n)cin >> v[i], s.insert(v[i]);
    sort(all(v));

    for(auto a : v){
        for(auto i : sv.primeFactors(a)){
            if(s.count(i) == 0){
                cout << - 1 << endl;
                return;
            }
        }
    }

    int ans = 1;
    for(int i = n - 1; i >= 0; i--){
        ans = lcm(ans, v[i]);
        if(ans > INF){
            cout << - 1 << endl;
            return;
        }
    }
    if(s.count(ans)){
        ans *= v.front();
        if(ans > INF){
            cout << - 1 << endl;
            return;
        }
    }

    for(auto i : v){
        if(ans % i  != 0 || s.count(ans / i) == 0){
            cout << - 1 << endl;
            return;
        }
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Another_Problem_About_Dividing_Numbers.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

namespace Pollard{
    #define int long long
    mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
    const int N = 1e6 + 100;
    bool isPrime[N]; int hp[N];
    vector<int> primes;

    void init(){
        memset(isPrime, 1, sizeof(isPrime));
        isPrime[0] = isPrime[1] = 0;

        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                hp[i] = i;
                for(int j = i + i; j < N; j += i){
                    isPrime[j] = 0;
                    hp[j] = i;
                }
            }
        }
        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                primes.push_back(i);
            }
        }
    }
    
    int binExp(int a, int b, int M = 1e9 + 7){
        int ans = 1;    a %= M;
        
        while(b > 0){
            if(b & 1)ans = ((__uint128_t)(ans % M) * (a % M)) % M;
            b >>= 1;
            a = ((__uint128_t)(a % M) * (a % M)) % M;
        }
        return ans;
    }

    //Miller Rabin primality test
    bool is_composite(int n, int a, int d, int p){
        int x = binExp(a, d, n);
        if(x == 1 or x == n - 1)return false;
    
        for(int i = 0; i < p - 1; i++){
            x = (__uint128_t)x * x % n;
            if(x == n - 1)return false;
        }
    
        return true;
    }
    
    bool miller_rabin(int n, int iter = 5){
        if(n < 4)return n == 2 || n == 3;
        
        int p = 0, d = n - 1;
        while((d & 1) == 0){
            d >>= 1;
            p++;
        }
    
        for(int i = 0; i < iter; i++){
            int a = 2 + rnd() % (n - 3);
            if(is_composite(n, a, d, p))return false;
        }
    
        return true;
    }
    
    //Pollard rho
    int func(int x, int c, int mod){
        return ((__uint128_t) x * x % mod + c) % mod;
    }    

    int rho(int n){
        int c = 1 + rnd() % (n - 2);
        int x =  2 + rnd() % (n - 2);
        int y = x, d = 1;

        while(d == 1){
            x = func(x, c, n);
            y = func(func(y, c, n), c, n);
            d = __gcd(abs(x - y), n);
        }
        return d;
    }

    vector<int> factorize(int n){
        if(n == 1)return {};
        if(miller_rabin(n))return {n};
        vector<int> factors, temp;
        
        if(n < N){
            while(n > 1){
                int pm = hp[n];
                while(n % pm == 0){
                    factors.push_back(pm);
                    n /= pm;
                }
            }
            return factors;
        }

        int x = rho(n);
        factors = factorize(x);
        temp = factorize(n / x);
        factors.insert(factors.end(), temp.begin(), temp.end());
        return factors;
    }

    void allDivsGen(int ind, int curVal, vector<pair<int, int>> &pmFact, set<int> &ans){
        if(pmFact[ind].first == -1){
            ans.insert(curVal);
            return;
        }
        for(int i = 0; i <= pmFact[ind].second; i++){
            allDivsGen(ind + 1, curVal, pmFact, ans);
            curVal *= pmFact[ind].first;
        }
    }

    set<int> allDivisors(int n){
        set<int> ans;
        vector<pair<int, int>> prime_factors;
        vector<int> fact = factorize(n);
        unordered_map<int, int> mp;
        for(auto i : fact)mp[i]++;
        for(auto i : mp)prime_factors.push_back({i.first, i.second});
        prime_factors.push_back({-1, -1});
        allDivsGen(0, 1, prime_factors, ans);
        return ans;
    }
}



void sukuna(int test){
    int a, b, k;
    cin >> a >> b >> k;    
    int gc = gcd(a, b);
    vin pm_a = Pollard::factorize(a / gc);
    vin pm_b = Pollard::factorize(b / gc);
    if(pm_a.size() < pm_b.size())swap(pm_a, pm_b);
    int n = pm_a.size();
    int m = pm_b.size();
    if(k == 1){
        if(a == b){no; return;}
        if(m){no; return;}
    }

    if(!pm_a.empty()){
        k = max(k - n, (m == 0 ? 0 : 1ll));
    }

    k = max(k - m, 0ll);
    if(k == 0){
        yes; return;
    }
    vin pm = Pollard::factorize(gc);
    if(pm.size() * 2 < k)no;
    else yes;

}

int32_t main(){
    fast_in_out;
    Pollard::init();

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Apple_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vector<vin> graph;
vector<int> vis(N), height(N), depth(N), val(N);
int n,m;

void dfs(int vertex = 1, int par = -1){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        if(vis[child])continue;
        
        depth[child] = depth[vertex] + 1;
        dfs(child);
        height[vertex] = max(height[vertex], height[child] + 1);
        val[vertex] += val[child];
    }
}

void reset(bool flg = 0){
    for(int i = 1; i <= n; i++){
        vis[i] = 0;
        height[i] = 0;
        depth[i] = 0;
        if(flg)val[i] = 0;
    }
}
void sukuna(){
    cin >> n;
    reset(1);
    vector<vin> gph(n + 1);
    for(int i = 0; i < n - 1; i++){
        int v1, v2;
        cin >> v1 >> v2;
        gph[v1].push_back(v2);
        gph[v2].push_back(v1);
    }
    graph = gph;


    dfs(1);
    Forn(i,n)if(height[i] == 0)val[i] = 1;

    reset();
    dfs(1);
    // Forn(i,n)cout << val[i] <<" ";
    lin(q);
    while(q--){
        int l, r;
        cin >> l >> r;
        cout << val[l] * val[r] << endl;
    }
    

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Attribute_Checks.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e6 + 100;

int n, m;
int v[N], cnt[N];
vin zero;

map<pr, vin>mp;
map<pr, int> sz;

int calculateStrength(int lo, int hi, int str){
    pr p = {lo, hi};
    auto lb = upper_bound(all(mp[p]), str) - mp[p].begin();
    lb--;
    if(lb <= sz[p])return 0;
    return sz[p] - lb;
}

int calculateIntelligence(int lo, int hi, int intl){
    pr p = {-lo, -hi};
    auto lb = upper_bound(all(mp[p]), intl) - mp[p].begin();
    lb--;
    if(lb <= sz[p])return 0;
    return sz[p] - lb;
}


int recur(int ind, int str){
    if(ind > m)return 0;

    int intl = cnt[ind] - str;
    int lo = zero[ind], hi = zero[ind + 1];

    int a = calculateStrength(lo, hi, str + 1) + recur(ind + 1, str + 1);
    int b = calculateIntelligence(lo, hi, intl + 1) + recur(ind + 1, str);

    return max(a, b);
}

void sukuna(int test){
    cin >> n >> m;
    Forn(i,n){
        cin >> v[i];
        if(v[i] == 0){
            zero.push_back(i);
            cnt[i]++;
        }
        cnt[i] += cnt[i - 1];
    }
    zero.push_back(n + 1);
    
    for(int i = 0; i < m; i++){
        int lo = zero[i], hi = zero[i + 1];

        for(int j = lo + 1; j < hi; j++){
            if(v[j] < 0){
                mp[{-lo, -hi}].push_back(-v[j]);
                sz[{-lo, -hi}]++;
            }
            if(v[j] > 0){
                mp[{lo, hi}].push_back(v[j]);
                sz[{lo, hi}]++;
            }
        }
    }

    // for(auto &i : mp)sort(all(i.second));
    // for(auto &i : sz)cout << i.second << " ";nl;

    cout << recur(0, 0) << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_A_B_C_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n), ans;
    if(n&1){
        lin(x);
        ans.pb(x);
        n--;
    } 
    forn(i,n)cin >> v[i];
    for(int i = 0; i < n; i+=2){
        ans.push_back(min(v[i], v[i + 1]));
        ans.push_back(max(v[i], v[i + 1]));
    }
    for(int i = 0; i < n - 1; i++){
        if(ans[i] > ans[i + 1]){
            no;
            return;
        }
    }    
    yes;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Balanced_Round.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,k;
        cin>>n>>k;
        int arr[n],i,ans=0,x,j,max=0;
        for(i=0;i<n;i++)cin>>arr[i];
        sort(arr,arr+n);
        for(i=1,j=0;i<n;i++)
        {
            x=abs(arr[i]-arr[i-1]);
            if(x<=k)ans++;
            else ans=0;
            if(ans>max)max=ans;
        }
        
        cout<<(n-max-1);
        nl;
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Balanced_Ternary_String.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;
    int a = 0, b = 0, c = 0, mid = n / 3;
    for(auto i : str){
        if(i == '0')a++;
        else if(i == '1')b++;
        else c++;
    }

    //Zero
    for(int i = 0; i < n and a < mid; i++){
        if(str[i] == '1' and b > mid){
            str[i] = '0'; a++; b--;
        }
        if(str[i] == '2' and c > mid){
            str[i] = '0'; a++; c--;
        }
    }

    //One
    int cnt = 0;
    for(int i = 0; i < n and b < mid; i++){
        if(str[i] == '0' and a > mid){
            if(cnt < mid)cnt++;
            else{
                str[i] = '1'; b++; a--;
            }
        }
        if(str[i] == '2' and c > mid){
            str[i] = '1'; b++; c--;
        }
    }

    //Two
    for(int i = n - 1; i >= 0 and c < mid; i--){
        if(str[i] == '0' and a > mid){
            str[i] = '2'; a--; c++;
        }
        if(str[i] == '1' and b > mid){
            str[i] = '2'; b--; c++;
        }
    }

    cout << str << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Binary_String_Minimizing.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    string str, ans;
    cin >> str;

    int zero = 0, i = 0, x = 0;
    for(; i < n; i++){
        if(str[i] == '0'){
            k -= (i - zero);
            if(k < 0){
                k += (i - zero);
                break;
            }
            zero++;
            continue;
        }
    }
    while(zero--)ans.push_back('0');

    for(int j = 0; j < i; j++)if(str[j] == '1')ans.push_back('1');
    
    
    if(i < n){ans.push_back(str[i]); swap(ans[i], ans[i - k]);}
    
    for(++i; i < n; i++)ans.push_back(str[i]);
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Bit_Guessing_Game.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int query(int n){
    cout << "- " << n << endl;
    cout.flush();
    lin(cnt);
    return cnt;
}

int convert(bitset<32> bit){
    int ans = 0;
    for(int i = 0, b = 1; i < 32; i++, b <<= 1){
        if(bit[i])ans += b;
    }
    cout.flush();
    return ans;
}

void sukuna(int test){
    int cnt;
    cin >> cnt;
    bitset<32> ans(0);
    int toAsk = 1;

    int curr = query(toAsk) - cnt + 1; 
    ans[curr] = 1;
    toAsk = (1 << curr);

    while(cnt> 0){
        if(cnt == 1)break;
        curr = query(toAsk) - cnt + 2; 
        ans[curr] = 1;
        cnt--;
        toAsk = (1 << curr);
    }

    cout << "! " << convert(ans) << endl;
    cout.flush();
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Blue_Red_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    string str;
    cin >> str;
    vin a, b;

    forn(i,n){
        if(str[i] == 'R'){
            if(v[i] <= n)a.pb(v[i]);
        }else{
            if(v[i] > 0)b.pb(v[i]);
        }
    }
    sort(all(a)); sort(all(b));


    set<int> s;
    auto it = b.begin();
    for(int i = 1; i <= n && it != b.end(); i++){
        if(i <= *it){
            s.insert(i);
            it++;
        }
    }
    it = a.begin();
    for(int i = 1; i <= n && it != a.end(); i++){
        if(s.count(i))continue;
        if(i >= *it){
            s.insert(i);
            it++;
        }else{
            i--;
            it++;
        }
    }
    if(s.size() == n)yes;
    else no;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Ceil_Divisions.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v;
    Forn(i,n)v.pb(i);
    print(v);    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    cin >> test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Outstanding_Impressionist.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n);
    map<int, int> mp;
    set<int> s;
    for(int i = 1; i <= n; i++)s.insert(i), s.insert(i + n);

    forn(i,n){
        cin >> v[i].first >> v[i].second;
        if(v[i].first == v[i].second){
            if(s.count(v[i].first))s.erase(v[i].first);
            mp[v[i].first]++;        
        }
    }

    vin arr;
    for(auto i : s)arr.push_back(i);
    // print(arr);

    for(auto i : v){
        int lb = lower_bound(all(arr), i.first) - arr.begin();
        int ub = upper_bound(all(arr), i.second) - arr.begin();
        if(lb == ub){
            if(i.first != i.second){
                cout << 0;
                continue;
            }
            if(mp[i.first] > 1){
                cout << 0;
            }else{
                cout << 1;
            }
        }
        else cout << 1;
    }nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Paint_a_Strip.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    if(n <= 4){
        if(n == 1)cout << 1 << endl;
        else cout << 2 << endl;
        return;
    }

    int l = 1, r = 4, ans = 2;
    int cur = 4;
    while(r < n){
        r = ((cur + 1) * 2 + l - 1);
        ans++;
        cur = r;
        // cout << r << endl;
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Pairs.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool check(vector<pr> &v, int &x, int &y){

    for(auto i : v){
        if(i.first != x and i.first != y and i.second != x and i.second != y)return false;
    }
    return true;
}


void sukuna(int test){
    int n, m;
    cin >> n >> m;
    vector<pr> v(m);

    forn(i,m){
        cin >> v[i].first >> v[i].second;
        if(v[i].first > v[i].second)swap(v[i].first, v[i].second);
    }

    int x = v[0].first;
    bool flg = true;
    
    for(int i = 0; i < m; i++){
        if(v[i].first != x and v[i].second != x){
            if(check(v, x, v[i].first)){
                yes;
                return;
            }
            if(check(v, x, v[i].second)){
                yes;
                return;
            }
            flg = false;
            break;
        }
    }
    if(flg){yes; return;}
    flg = true;
    x = v[0].second;
    for(int i = 0; i < m; i++){
        if(v[i].first != x and v[i].second != x){
            if(check(v, x, v[i].first)){
                yes;
                return;
            }
            if(check(v, x, v[i].second)){
                yes;
                return;
            }
            flg = false;
            break;
        }
    }
    if(flg){yes; return;}
    no;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Pair_of_Toys.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){

	int n, k;
	cin >> n >> k;
	if(k >= n * 2) {
		cout << 0 << endl;
	} else if(k <= n + 1) {
		cout << (k-1) / 2 << endl;
	} else {
		cout << (n-(k-n)+1) / 2 << endl;
	}   
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Paranoid_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int ans = n;

    for(int i = 1; i < n; i++){
        if((str[i - 1] - 48) ^ (str[i] - 48))
            ans += i;
    }
    
    cout<<ans<<endl; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Parity_and_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    int even = 0, odd = 0, mx = 0;

    forn(i,n){
        cin >> v[i];
        if(v[i] & 1){
            odd++;
            mx = max(mx, v[i]);
        }else even++;
    }
    sort(all(v));
    if(even == n || odd == n){
        cout<<0<<endl;
        return;
    }


    int ans = 0;
    for(int i = 0; i < n; i++){
        if(v[i] & 1)continue;
        if(v[i] > mx)mx += v[i], i--;
        else mx += v[i];
        ans++;
    }

    cout<<min(ans, even + 1)<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Penchick_and_Satay_Sticks.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1);

    Forn(i,n)cin >> v[i];

    Forn(i,n){
        if(abs(i - v[i]) > 1){
            no; return;
        }

    }
    yes;

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Permutation_Printing.cpp"
#include<bits/stdc++.h>
using namespace std;
#define nl cout<<"\n"
int marvel()
{
        int n;
        cin>>n;
        int i,arr[n],j;
        if(n%2==0)i=n;
        else i=n-1;
        for(j=1;i>0;i-=2,j+=2)
        {
            cout<<i<<" "<<j<<" ";
        }
        if(n%2==1)cout<<n;
        nl;
        return 0;
}

int main()
{
    int test; cin>>test;
    while(test--)
    {
        marvel();
    }
    return 0;
}

// Good Bye

"/home/raihan/Desktop/Codeforces/B_Petr_and_a_Combination_Lock.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v;
int n;
bool isPossible = false;

void recur(int i, int sum){

    if(i < 0){
        sum %= 360;
        if(sum == 0)isPossible = true;
        return;
    }

    recur(i - 1, sum + v[i]);
    recur(i - 1, sum - v[i]);
}


int32_t main()
{
    fast_in_out;
    cin >> n;
    forn(i,n){
        lin(x);
        v.push_back(x);
    }

    recur(n - 1, 0);
    if(isPossible)yes;
    else no;
    
}

"/home/raihan/Desktop/Codeforces/B_Pleasant_Pairs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n + 1);
    Forn(i,n)cin >> v[i];
    int ans = 0;

    for(int i = 1; i <= n; i++){
        int p = v[i] - i;
        for(int j = 1; p <= n; j++){
            p = v[i] * j - i;
            if(p == i)continue;
            if(p < 0)continue;
            else if(p > n)break;
            if(v[p] == j)ans++;
        }
    }
    cout<<(ans>>1)<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Plus_from_Picture.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e3 + 10;
int n, m, vis[N][N];
vector<string> graph;

vector<pair<int, int>> pls, tmp;
vector<pair<int, int>> movements = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};
bool isValid(int x, int y){return x >= 0 && x < n && y >= 0 && y < m;}

void bfs(int x, int y){
    queue<pair<int, int>> q;
    q.push({x, y});
    vis[x][y] = true;
    pls.push_back({x, y});

    while(!q.empty()){
        x = q.front().first;
        y = q.front().second;
        q.pop();

        for(auto mv : movements){
            int childx = x + mv.first;
            int childy = y + mv.second;

            if(!isValid(childx, childy))continue;
            if(graph[childx][childy] == '.')continue;
            if(vis[childx][childy])continue;
            vis[childx][childy] = true;
            
            q.push({childx, childy});
            pls.push_back({childx, childy});
        }
    }
}

int32_t main(){
    cin >> n >> m;
    for(int i = 0; i < n; i++){
        string str;
        cin >> str;
        graph.push_back(str);
    }    
    int x = -1, y = -1;
    if(n < 3 or m < 3){
        cout << "NO" << endl;
        return 0;
    }

    for(int i = 0; i < n; i++){
        bool flg = false;
        for(int j = 0; j < m; j++){
            if(graph[i][j] == '*'){
                x = i; y = j;
                flg = true;
                break;
            }
        }
        if(flg)break;
    }

    if(x == -1 or y == -1){
        cout << "NO" << endl;
        return 0;
    }

    bfs(x, y);

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(vis[i][j])continue;
            if(graph[i][j] == '*'){
                cout << "NO" <<endl;
                return 0;
            }
        }
    }

    sort(pls.begin(), pls.end());
    if(pls.size() < 5){
        cout <<"NO" << endl;
        return 0;
    }
    
    map<int, int> mp;
    int mid = 0, mx = 0;
    for(auto i : pls){
        mp[i.first]++;
        if(mp[i.first] > mx){
            mx = mp[i.first];
            mid = i.first;
        }
    }

    set<int> s;
    for(auto i : pls){
        if(i.first == mid)continue;
        tmp.push_back(i);
        s.insert(i.second);
    }

    sort(tmp.begin(), tmp.end());
    

    if(s.size() > 1)cout << "NO" << endl;
    else if(tmp.front().first >= mid or tmp.back().first <= mid)cout <<"NO" << endl;
    else cout << "YES" << endl;

    
  
}

"/home/raihan/Desktop/Codeforces/B_Polo_the_Penguin_and_Matrix.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    int n, m, d;
    cin>>n>>m>>d;
    int gcd = d;
    n *= m;
    vector<int> v(n);
    forn(i,n){
        cin>>v[i];
        gcd = __gcd(gcd, v[i]);
    }
    if(gcd != d){
        cout<<-1<<endl;
        return 0;
    }

    
    
    
}

"/home/raihan/Desktop/Codeforces/B_Prefiquence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,m,i,j=0,cnt=0;
    
    cin>>n>>m;

    string a,b;

    cin>>a>>b;

    for(i=0;i<n;i++)
    {
        bool flag = 0;
        for(;j<m;j++)
        {
            if(a[i]==b[j])
            {
                flag=1;
                cnt++;
                j++;
                break;
            }
        }
        if(j>(m-1) || flag==0)
        {
            break;
        }
    }
    cout<<cnt;nl;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Prefix_Sum_Addicts.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;

    vin v(k), rev(k - 1);
    forn(i,k)cin >> v[i];

    if(k == 1){
        yes;
        return;
    }

    forn(i, k - 1)rev[i] = v[i + 1] - v[i];
    
    for(int i = 1; i < k - 1; i++){
        if(rev[i] < rev[i - 1]){
            no;
            return;
        }
    }

    // print(rev);

    if(v[0] > rev[0] * (n - k + 1))no;
    else yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Primes.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


using u128 = __uint128_t;

int binExp(int a, int b, int M = 1e9 + 7){
    int ans = 1;    a %= M; b %= M;
    
    while(b > 0){
        if(b & 1)ans = ((u128)(ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((u128)(a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }


bool is_composite(int n, int a, int d, int p){
    int x = binExp(a, d, n);
    if(x == 1 or x == n - 1)return false;

    for(int i = 0; i < p - 1; i++){
        x = (u128)x * x % n;
        if(x == n - 1)return false;
    }

    return true;
}

bool is_prime(int n, int iter = 5){
    if(n < 4)return n == 2 || n == 3;
    
    int p = 0, d = n - 1;
    while((d & 1) == 0){
        d >>= 1;
        p++;
    }

    mt19937_64 rn;
    for(int i = 0; i < iter; i++){
        int a = 2 + rn() % (n - 3);
        if(is_composite(n, a, d, p))return false;
    }

    return true;
}



int32_t main(){
    int n; cin >> n;
    if(n == 5)cout << 2 <<" " << 3 << endl;
    else{
        if(is_prime(n - 2))cout << 2 <<" " << n - 2 << endl;
        else cout << -1 << endl;
    }
}

"/home/raihan/Desktop/Codeforces/B_Progressive_Square.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,c,d,x,i,j;
    cin>>n>>c>>d;
    multiset<ll>s;
    forn(i,n*n)
    {
        cin>>x;
        s.insert(x);
    }

    ll sm=*s.begin();
    multiset<ll>v;
    v.insert(sm);
    
    for(i=0;i<n;i++)
    {
        ll f=sm;
        for(j=1;j<n;j++)
        {
            v.insert(f+d);
            f+=d;
        }
        if(i<n-1){
        v.insert(sm+c);
        sm+=c;}
    }

    // print(v);nl;
    
    // for(i=0;i<v.size();i++)
    // {
    //     cout<<v[i]<<" ";
    //     if((i+1)%n==0)nl;
    // }nl;

    for(auto a: v)
    {
        if(v.count(a)!=s.count(a)){no; return 0;}
    }
    yes;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_pspspsps.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;

    int p = 0, s = 0;
    int dot = 0;
    for(int i = 0; i < n; i++){
        if(str[i] == 'p')p += 1;
        if(str[i] == 's')s += 1;
        if(str[i] == '.')dot++;
        if(str[i] == 'p'){
            for(++i; i < n; i++){
                if(str[i] == 'p')p += 1;
                if(str[i] == 's')s += 1;
                if(str[i] == '.')dot++;

                if(str[i] == 's'){
                    no; return;
                }
            }
        }
    }

    if(p == 0 or s == 0){yes; return;}
    if(p > 1 and s > 1){no; return;}
    if(str.front() == '.' and str.back() == '.'){
        if(n == 1)yes;
        else no;
        return;
    }
    yes;    
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Queue_at_the_School.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    string str,ans;
    ll n,t;
    cin>>n>>t;
    cin>>str;
    ans=str;
    forn(i,t)
    {
        forn(i,n-1)if(str[i]=='B' && str[i+1]=='G')swap(ans[i],ans[i+1]);
        str=ans;
    }
    cout<<ans;nl;

    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Rakhsh_s_Revival.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m, k, ct = 0, ans = 0;
    cin >> n >> m >> k;
    string str;
    cin >> str;

    for(int i = 0; i < n; i++){
        if(str[i] == '1'){
            ct = 0;
            continue;
        }ct++;

        if(ct == m){
            ct = 0;         ans++;
            i += k; i--;
        }
    }

    cout << ans << endl;    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Reach_Median.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, s;
    cin >> n >> s;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));


    int lb = lower_bound(all(v), s) - v.begin();
    int mid = n / 2;
    int ans = 0;

    if(lb < mid){
        for(int i = lb; i <= mid; i++){
            ans += abs(s - v[i]);
        }
    }else if(lb > mid){
        if(v[lb] > s && lb > 0)lb--;
        for(int i = lb; i >= mid; i--){
            ans += abs(s - v[i]);
        }
    }
    else{
        ans = abs(v[mid] - s);
    }
    
    
    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/B_Rectangle_Filling.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


int solve()
{
    ll n,m;
    cin>>n>>m;
    vector<string>str(n);
    forn(i,n)cin>>str[i];
    string f=str[0], l=str[n-1];

    if(f[0]==l[m-1] || f[m-1]==l[0]){ yes; return 0;}
    
    if(f[0]==l[0])
    {
        for(int i=1;i<n-1;i++)
        {
            if(str[i][m-1]==f[0]){yes; return 0;}
        }
    }

    if(f[m-1]==l[m-1])
    {
        for(int i=1;i<n-1;i++)
        {
            if(str[i][0]==f[m-1]){ yes; return 0;}

        }
    }

    if(f[0]==f[m-1])
    {
        for(int i=1;i<m-1;i++)
        if(l[i]==f[0]){ yes; return 0;}
    }
    
    if(l[0]==l[m-1])
    {
        for(int i=1;i<m-1;i++)
        if(f[i]==l[0]){ yes; return 0;}
    }
    no;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Removals_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Alice\n"
#define no                 cout<<"Bob\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin a(n), b(n), c(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    c = b;
    reverse(all(c));

    if(c == a || b == a)no;
    else yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Replacement.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string a, b;
    cin >> a >> b;

    int one = 0, zero = 0;
    forn(i,n)if(a[i] == '1')one++; else zero++;

    if(zero == 0 or one == 0){no; return;}

    for(int i = 0; i < n - 1; i++){
        if(b[i] == '1')zero--;
        else one--;

        if(zero < 0 or one < 0){
            no; return;
        }
        if(zero == 0 or one == 0){
            if(i != n - 2){
                no; return;
            }
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Replace_and_Keep_Sorted.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Replace_Character.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;

    map<char, int> mp;
    for(auto i : str)mp[i]++;
    int mn = INF, mx = 0;
    char i = str.front(), j = str.front();

    for(auto it : mp){
        if(it.second < mn){
            mn = it.second;
            i = it.first;
        }
        if(it.second >= mx){
            mx = it.second;
            j = it.first;
        }
    }

    for(int x = 0; x < n; x++){
        if(str[x] == i){str[x] = j; break;}
    }
    cout << str << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Restore_the_Weather.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

bool cmp(pair<int, pr>a, pair<int, pr> b){
    if(a.se.fi < b.se.fi)return true;
    return false;
}

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin b(n);
    vector<pair<int, pr>>a(n);
    forn(i,n){
        cin >> a[i].second.first;
        a[i].first = i;
    }
    forn(i,n)cin >> b[i];
    sort(all(b));
    sort(all(a), cmp);
    forn(i,n)a[i].se.se = b[i];

    sort(all(a));
    for(auto x : a)cout<<x.se.se<<' ';nl;  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Not_Adjacent_Matrix.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    vector<ll>v;
    for(ll i=1;i<=n*n;i+=2)v.pb(i);
    for(ll i=2;i<=n*n;i+=2)v.pb(i);
    if(n==1)cout<<"1\n";
    else if(n==2)cout<<"-1\n";
    else
    {
        int x=0;
        forn(i,n)
        {
            forn(i,n)
            {
                cout<<v[x]<<" ";
                x++;
            }nl;
        }
    }
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Not_Assigning.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

map<pr,int>val;
vector<int> graph[N];
int n,m;

void dfs(int vertex = 1, int par = -1, int value = 5){

    val[{min(par, vertex), max(par, vertex)}] = value;

    for(auto child : graph[vertex]){
        if(child == par)continue;
        if(value == 5)dfs(child, vertex, 2);
        else dfs(child, vertex, 5);
        
        if(value == 5)value = 2;
        else value = 5;
    }
}

void reset(){
    val.clear();
    for(int i = 1; i <= n; i++){
        graph[i].clear();

    }
}
void sukuna(){
    cin >> n;
    reset();
    
    map<int, int> mp;
    vector<pair<int, int>>edges;

    for(int i = 0; i < n - 1; i++){
        int v1, v2;
        cin >> v1 >> v2;

        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
        mp[v1]++;
        mp[v2]++;
        if(v1 > v2)swap(v1, v2);
        edges.push_back({v1, v2});
    }


    for(auto i : mp){
        if(i.second > 2){
            cout << -1 << endl;
            return;
        }
    }

    dfs();

    for(auto i : edges){
        cout << val[i] <<" ";
    }nl;

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Number_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Ashishgup\n"
#define no                 cout<<"FastestFinger\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


class SeiveAlgo{
    private:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        set<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            return divisors;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            if(l > r)swap(l, r);
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};

vin prime = SeiveAlgo(1e5).primes;

bool isPowerof2(int n){
    while(n % 2 == 0){
        n /= 2;
    }
    return n == 1;
}

bool isOddDivisorGreaterThan2(int n){
    // while(n % 2 == 0)n /= 2;

    int cnt = 0;
    set<int> s;
    for(int i = 1; prime[i] * prime[i] <= n; i++){
        if(n % prime[i])continue;
        s.insert(prime[i]);
        int div = n / prime[i];
        s.insert(div);
    }
    return s.size() > 1;
}

void sukuna(){
    lin(n);
    if(n == 1){no; return;}
    if(n == 2){yes; return;}
    if(n & 1){yes; return;}
    if(isPowerof2(n)){no; return;}
    if(isOddDivisorGreaterThan2(n)){yes; return;}
    if(n % 4 == 0){yes; return;}
    no;

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Number_of_Pairs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    int l, r, n;
    cin>>n>>l>>r;
    vin v(n);
    forn(i,n)cin>>v[i];
    sort(all(v));

    int ans = 0;
    for(int i = n - 1; i >=0; i--){
        int up = upper_bound(all(v), r - v[i]) - v.begin();
        int lo = lower_bound(all(v), l - v[i]) - v.begin();
        
        if(i == up - 1)up--;
        if(up - lo > 0)ans += (up - lo);
        
        v.pop_back();
    }

    cout<<ans<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Number_of_Ways.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 5e5 + 100;

int n, tot;
vin v, pf, dp(N, -1);
map<int, vin> mp;
map<int, int> sz;


int recur(int ind){

    if(ind >= n)return 0;
    if(dp[ind] != -1)return dp[ind];

    int res = tot - pf[ind];
    int sec = 2 * pf[ind];

    if(res != sec)return dp[ind] = recur(ind + 1);
    if(mp.find(sec) == mp.end())return dp[ind] = recur(ind + 1);
    

    int up = lower_bound(all(mp[sec]), ind) - mp[sec].begin();
    if(mp[sec][up] == ind)up++;
    
    int cnt = sz[sec] - up;
    if(mp[sec].back() == n - 1)cnt--;
    cnt = max(cnt, 0ll);
    
    return dp[ind] = cnt + recur(ind + 1);
}

void sukuna(int test){
    cin >> n;

    forn(i,n){
        lin(x);
        v.push_back(x);
    }

    pf.push_back(v.front());
    mp[pf.back()].push_back(0);
    sz[pf.back()]++;

    for(int i = 1; i < n; i++){
        pf.push_back(pf.back() + v[i]);
        mp[pf.back()].push_back(i);
        sz[pf.back()]++;
    }
    tot = pf.back();

    cout << recur(0) << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1; 
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Numeric_String_Template.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];


    lin(m);
    while(m--){
        bool flg = 1;
        map<int, int> mp;
        string str;
        cin >> str;
        if(str.size() != n){
            no;
            continue;
        }
        vin d(26, INF);

        for(int i = 0; i < n; i++){
            int x = str[i] - 97;
            if(d[x] == INF){
                d[x] = v[i];
            }else{
                if(v[i] != d[x]){ flg = 0; break;}
            }
        }

        for(auto a : d){
            mp[a]++;
        }
        for(auto a : mp){
            if(a.first == INF)continue;
            if(a.second > 1){
                flg = 0;
                break;
            }
        }

        if(flg)yes;
        else no;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Obtain_The_String.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string s, t;
    cin >> s >> t;
    int n = s.size(), m = t.size();
    vector<vin> mp(150);
    vin sz(150); 
    for(int i = 0; i < n; i++){
        mp[s[i]].push_back(i);
        sz[s[i]]++;
    }

    for(auto i : t){
        if(mp[i].empty()){
            cout << -1 << endl;
            return;
        }
    }
    
    int j = 0, ans = 0;
    while(j < m){ 
        ans++;
        for(int i = 0; j < m;){
            int lb = lower_bound(all(mp[t[j]]), i) - mp[t[j]].begin();
            if(lb == sz[t[j]])break;
            i = mp[t[j]][lb] + 1; 
            j++; 
        }
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Omkar_and_Baseball.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1);
    bool flg = true;
    bool chk = true;
    Forn(i,n){
        cin >> v[i];
        if(v[i] < v[i - 1])flg = false;
    }
    int i, j;
    for(i = 1; i <= n; i++){
        if(v[i] != i)break;;
    }
    for(j = n; j > 0; j--){
        if(v[j] != j)break;
    }
    for(; i <= j; i++){
        if(v[i] == i)chk = false;
    }

    if(flg){cout << 0 << endl; return;}
    if(chk)cout << 1 << endl;
    else cout << 2 << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Ordered_Permutations.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int func(int n, int &k){

    if(k == (1 << n)){
        k = -1;
        return n;
    }

    int ind = 0, i = (1 << (n - 1));
    int sum = 0;

    while(sum <= k and i > 0){
        sum += i;
        i >>= 1;
        ind ++;
    }

    if(sum > k){
        sum -= i * 2;
    }
    k -= sum;
    cout << sum << endl;
    cout << "ind: " << ind << endl;

    return ind;
}

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    if(k > (1 << min((n - 1), 60ll))){
        cout << -1 << endl;
        return;
    }
    vin ans(n + 1);
    
    func(n - 1, k);
    cout << "k: " << k <<endl;
    return;

    int m = n - 1, plus = 1;
    for(int i = 1; i <= n; i++){
        int fn = func(m--, k);
        
        ans[i] = fn + plus++;
        cout <<"k: " << k << endl;nl;
    }

    print(ans);

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Paint_the_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int a = 0, b = 0;
    for(int i = 0; i < n; i += 2){
        a = __gcd(a, v[i]);
    }
    for(int i = 1; i < n; i+= 2){
        b = __gcd(b, v[i]);
    }

    bool flg = 1;
    for(int i  = 0; i < n; i += 2){
        if(v[i] % b == 0){
            flg = 0;
            break;
        }
    }
    if(flg){
        cout << b <<endl;
        return;
    }
    flg = 1;
    for(int i = 1; i < n; i += 2){
        if(v[i] % a == 0){
            flg = 0;
            break;
        }
    }
    if(flg){
        cout << a << endl;
        
    }else{
        cout << 0 << endl;
    }


    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Paint_the_Digits.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n;
    string s, ss, ans;
    cin>>n>>s;ss=s;ans=s;
    sort(ss.begin(),ss.end());int id=0;
    for(int i=0;i<n;i++)if(s[i]==ss[id]){s[i]=1;ans[i]='1';id++;}
    for(int i=0;i<n;i++)if(s[i]==ss[id]){s[i]=1;ans[i]='2';id++;}
    if(id!=n)ans="-";cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Paprika_and_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v;

    int ans = 0;
    set<int> s, nd;

    forn(i,n){
        lin(x);
        if(x <= n){
            if(s.count(x))v.push_back(x);
            s.insert(x);
        }else v.push_back(x);
    }

    Forn(i,n)if(s.count(i) == 0)nd.insert(i);
    sort(all(v));

    for(int i = 0; i < v.size(); i++){
        if(v[i] > *nd.begin() * 2){
            ans++;
            nd.erase(nd.begin());
        }
        if(nd.size() == 0)break;
    }

    if(nd.size() == 0)cout<<ans<<endl;
    else cout<<-1<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Particles.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    int mx1 = 0, sum1 = 0, tempmx = -INF, cnt = 0;

    for(int i = 0; i < n; i+= 2){
        if(v[i] < 0)cnt++;
        tempmx = max(tempmx, v[i]);
        if(v[i] < 0)continue;
        sum1 += v[i];
        mx1 = max(sum1, mx1);
    }
    if(cnt == (n + 1) / 2)mx1 = tempmx;
    

    int sum2 = 0, mx2 = 0; tempmx = -INF, cnt = 0;
    for(int i = 1; i < n; i+= 2){
        tempmx = max(tempmx, v[i]);
        if(v[i] < 0)cnt++;
        if(v[i] < 0)continue;
        sum2 += v[i];
        mx2 = max(sum2, mx2);
    }

    if(cnt == n / 2)mx2 = tempmx;
    if(n == 1)mx2 = -INF;

    cout<<max(mx1, mx2)<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Password_Cracking.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool ask(string str){
    cout <<"? " << str << endl;
    cout.flush();
    bool x;
    cin >> x;
    return x;
}

void sukuna(){
    int n;
    cin >> n;

    int cnt = 0;
    string ans;
    while(ans.size() != n){cnt++;
        ans.push_back('0');
        if(ask(ans))continue;
        ans.back() = '1';
        if(!ask(ans)){
            ans.pop_back();
            break;
        }
    } 

    while(ans.size() != n){
        string temp = "0"+ ans;
        if(ask(temp)){
            ans = temp;
            continue;
        }
        ans = "1" + ans;
    }

    cout <<"! " << ans << endl;
    cout.flush();
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Pattern.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<string> v(n);
    forn(i,n)cin >> v[i];
    int m = v.front().size();
    string str;
    forn(i,m)str.push_back('?');

    for(int i = 0; i < m; i++){
        set<char> s;
        for(auto st : v){s.insert(st[i]); if(s.size() > 2)break;}
        if(s.size() > 2)continue;
        if(s.size() == 1)str[i] = *s.begin();
        if(s.size() == 2){
            if(s.count('?'))for(auto x : s)if(x != '?')str[i] = x;
        }
    }

    for(int i = 0; i < m; i++){
        if(str[i] != '?')continue;
        set<char> s;
        for(auto st : v){s.insert(st[i]); if(s.size() > 1)break;}
        if(s.size() == 1)str[i] = 'x';
    }

    cout << str << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Pekora_and_Trampoline.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n), rem(n);
    forn(i,n)cin >> v[i];
    int ans = 0;

    for(int i = 0; i < n; i++){
        if(v[i] == 1)continue;
        int tot = min(v[i], n - i);
        for(int j = i + tot; j > i; j--){
            v[j] += rem[i];
        }
    }
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Penalty.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int chk(string a, string b){
    for(int i = 0; i < 5; i++){
        if(a[i] == '?')a[i] = '1';
        if(b[i] == '?')b[i] = '0';
    }
    int aa = 0, bb = 5, cnt = 0;

    for(int i = 0; i < 5; i++){
        if(a[i] == '1')aa++;
        cnt++; 
        if(aa > bb)break;
        if(b[i] == '0')bb--;
        cnt++;
        if(aa > bb)break;

    }
    return cnt;
}

int chk2(string a, string b){
    for(int i = 0; i < 5; i++){
        if(a[i] == '?')a[i] = '0';
        if(b[i] == '?')b[i] = '1';
    }
    int aa = 5, bb = 0, cnt = 0;

    for(int i = 0; i < 5; i++){
        if(a[i] == '0')aa--;
        cnt++;
        if(bb > aa)break;
        if(b[i] == '1')bb++;
        cnt++;
        if(bb > aa)break;
    }
    return cnt;
}

void sukuna(){
    string str, a, b;
    cin >> str;
    for(int i = 0; i < 10; i++){
        if(i&1)b.push_back(str[i]);
        else a.push_back(str[i]);
    }  
    cout<<min(chk(a, b), chk2(a, b))<<endl;   
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Penchick_and_BBQ_Buns.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string temp = "1 2 3 3 5 5 7 7 9 9 11 11 13 13 15 15 1 18 18 20 20 22 22 24 24 1 2 ";

void sukuna(int test){
    lin(n);
    if(n % 2 == 0){
        for(int i = 1; i <= n; i++){
            cout << i <<" " << i++ <<" ";
        }
        nl;
        return;
    }

    if(n < 27){
        cout << -1 << endl;
        return;
    }

    cout << temp;
    for(int i = 28; i < n; i++){

        cout << i <<" " << i++ << " ";
    }
    nl;    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Perfect_Square.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int op1(string &s, string &t){
    int n = s.size();
    int cnt = 0;
    forn(i,n){
        if(s[i] == t[i])continue;
        else if(s[i] > t[i]){
            cnt += (s[i] - t[i]);  
            t[i] = s[i];
        }
        else{
            cnt += t[i] - s[i];
            s[i] = t[i];
        }
    }
    return cnt;
}


void sukuna(){
    lin(n);
    vector<string> v(n), u(n);
    forn(i,n)cin >> v[i], u[i] = v[i];
    
    int ans = 0;
    for(int i = 0, j = n - 1; i < j; i++, j--){
        ans += op1(v[i], v[j]);
    }

    for(int k = 0; k < n; k++){
        for(int i = 0, j = n - 1; i < j; i++, j--){
            if(v[k][i] == v[k][j])continue;
            else if(v[k][i] > v[k][j]){
                ans += v[k][i] - v[k][j];
                v[k][j] = v[k][i];
            }
            else{
                ans += v[k][j] - v[k][i];
                v[k][i] = v[k][j];
            }
        }
    }
    forn(i,n)forn(j,n)u[i][j] = v[j][i];

    for(int i = 0; i < n/2; i++){
        ans += op1(v[i], u[i]);
    }


    // for(auto a : v)cout<<a<<endl;
    // for(auto a : u)cout<<a<<endl;
    cout<<ans<<endl;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Perform_Operations_to_Maximize_Score.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    sort(all(v));
    int mid = (n + 1) / 2 - 1;
    int ans = v[mid].first + v[n - 1].first;

    if(v[n - 1].second){
        cout<<ans + k<<endl;
        return;
    }


    for(auto a : v)cout<<a.first<<' ';nl;
    for(auto a : v)cout<<a.second<<' ';nl;
    cout<<ans<<endl;nl;

    bool ck = 1;
    for(int i = n / 2; i < n; i++){
        if(v[i].second){
            ck = 0;
            break;
        }
    }

    if(ck){
        int i;
        for(i = n / 2 - 1; i >= 0; i--){
            if(v[i].second)break;
        } 
        if(v[i].second){
            cout<<max(ans, v[i].first + k + v[n / 2].first)<<endl;
        }  else cout<<ans<<endl;
        return;
    }
    

    int i = n - 1;
    for(; i >= n / 2; i--){
        if(v[i].second)break;
    }

    if(v[i].second)ans = max(ans, k + v[mid].first + v[i].first);


    for(int i = n / 2; i < n; i++){

    }
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Perform_the_Combo.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m;
    cin >> n >> m;
    string str;
    cin >> str;
    vin pf(n);
    forn(i,m){
        lin(x);
        pf[--x]++;
    }

    for(int i = n - 2; i >= 0; i--)pf[i] += pf[i + 1];
    for(auto &i : pf)i++;

    vin ans(26, 0);
    
    for(int i = 0; i < n; i++){
        ans[str[i] - 97] += pf[i];
    }

    print(ans);

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Permutation_Counting.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, k;
int v[N];


bool func(int mid){
    int extra = k;
    for(int i = 0; i < n; i++){
        if(v[i] >= mid)continue;
        extra -= (mid - v[i]);
        if(extra < 0)return false;
    }
    return true;
}

void sukuna(int test){
    cin >> n >> k;
    forn(i,n)cin >> v[i];

    int lo = 0, hi = INF, mid;
    while(hi > lo){
        mid = (lo + hi) / 2;
        if(func(mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }    
    if(!func(lo))lo--;
    cout << lo * n << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Permutation_Operations.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    vector<pr> p;
    for(int i = 1; i <  n; i++){
        if(v[i] < v[i - 1]){
            p.push_back({v[i - 1]- v[i], i});
        }
    }
    sort(all(p));

    int cnt = 1;
    for(auto a : p){
        while(a.first > 0 && cnt <= n){
            a.first-= cnt;
            cnt++;
            cout<<a.second + 1<<" ";
        }
    }
    forn(i, n - cnt + 1)cout<<"1 ";nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_PolandBall_and_Forest.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e4 + 100;
vin graph[N];
bool vis[N];

void dfs(int vertex){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        dfs(child);
    }
}


int32_t main()
{
    fast_in_out;
    lin(n);
    for(int i = 1; i <= n; i++){
        lin(x);
        graph[i].push_back(x);
        graph[x].push_back(i);
    }

    int ans = 0;
    for(int i = 1; i <= n; i++){
        if(vis[i])continue;
        ans++;
        dfs(i);
    }

    cout<<ans<<endl;    
}

"/home/raihan/Desktop/Codeforces/C_Powers_Of_Two.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    int n, k;
    cin >> n >> k;
    if(__builtin_popcount(n) > k || k > n){
        no;
        return 0;
    }

    bitset<32>b(n);
    map<int, int> mp;
    int bit = 1;
    for(int i = 0; i < 32; i++, bit <<= 1){
        if(b[i]){
            mp[bit]++;
        }
    }

    k -= __builtin_popcount(n);


    auto a = mp.rbegin();

    for(; a != mp.rend(); a++){
        while(a->second > 0 && k > 0){
            if(k == 0)break;
            mp[a->first / 2] += 2;
            k--;
            a->second--;
        }
        if(k == 0)break;
    }

    yes;
    for(auto a : mp){
        while(a.second--)cout<<a.first<<" ";
    }nl;
    
    
    
}

"/home/raihan/Desktop/Codeforces/C_Preparing_for_the_Exam.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m, k;
    cin >> n >> m >> k;
    vin v(m);
    set<int> q;
    forn(i,m)cin >> v[i];
    for(int i = 1; i<= n; i++)q.insert(i);
    forn(i,k){
        lin(x);
        if(q.count(x)){
            q.erase(x);
        }
    }

    for(int i = 0; i < m; i++){
        if(q.size() == 0){
            cout << 1;
            continue;
        }
        if(q.size() > 1){
            cout << 0;
            continue;
        }
        if(q.count(v[i]))cout <<1;
        else cout <<0;
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Cipher_Shifer.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str, ans;
    cin >> str;
    for(int i = 0; i < n; i++){
        ans.push_back(str[i]);
        char c = str[i];
        i++;
        while(str[i] != c && i < n)i++;
    }

    cout<<ans<<endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Circuit.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    int zero = 0;
    forn(i,2 * n){
        lin(x);
        if(x == 0)zero++;
    }
    int one = 2 * n - zero;
    int mn = min(zero, one);

    if(zero & 1 or one & 1)cout << 1 <<" " << mn << endl;
    else cout << 0 <<" " << mn << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Closest_Point.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    set<int> s;
    forn(i,n){
        lin(y);
        s.insert(y);
    }
    if(s.size() > 2){no; return;}
    if(*s.rbegin() - *s.begin() < 2){no; return;}
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Coin_Transformation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int recur(int n){
    if(n < 4)return 1;
    return 2 * recur(n / 4);
}

void sukuna(int test){
    lin(n);
    cout << recur(n) <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Collecting_Coins.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int arr[3],n,max=0,i;
        for(i=0;i<3;i++)
        {
            cin>>arr[i];
            if(arr[i]>max)max=arr[i];
        }
        cin>>n;
        for(i=0;i<3;i++)
        {
            n=n-(max-arr[i]);
        }
        if(n>=0){
        if(n%3==0)cout<<"YES\n";
        else cout<<"NO\n";}
        else cout<<"NO\n";
        
    }
}

"/home/raihan/Desktop/Codeforces/A_Colony_of_Bacteria.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

int sub(int n){
    if(n % 2 == 0)n--;
    if(n == 1)return 0;
    n /= 2;
    return n * (n + 1) / 2;
}

int32_t main(){
    int n;
    cin >> n;
    int m = n + n - 1;
    int tot = m * m;

    cout << tot - sub(n) * 4 << endl;
}

"/home/raihan/Desktop/Codeforces/A_Constructive_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    set<int> s;
    forn(i,n)cin >> v[i], s.insert(v[i]);
    int mex = 0;
    forn(i, s.size() + 1)if(s.count(i) == 0){mex = i; break;}

    if(mex == n){
        no;
        return;
    }
    if(s.count(mex + 1) == 0){
        yes;
        return;
    }

    int i = 0, j = n - 1;
    for(; i < n; i++)if(v[i] == mex + 1)break;
    for(; j >= i; j--)if(v[j] == mex + 1)break;

    s.clear();
    
    for(--i; i >= 0; i--){
        s.insert(v[i]);
    }
    for(++j; j < n; j++){
        s.insert(v[j]);
    }
    
    int mex2 = 0;
    for(int i = 0; i <= s.size(); i++){
        if(s.count(i) == 0){
            mex2 = i;
            break;
        }
    }
    if(mex == mex2)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Contest_Proposal.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,cnt=0;
    cin>>n;
    multiset<ll>s;
    vector<ll>v(n);
    forn(i,n)
    {
        lin(x);
        s.insert(x);
    }
    forn(i,n)cin>>v[i];
    sort(v.begin(),v.end());

    auto a = s.begin();
    for(int i=0;i<n;i++)
    {
        // cout<<v[i]<<" "<<*a;nl;
        if(*a>v[i])
        {
            cnt++;
            s.insert(v[i]);
            s.erase(--s.end());
        }
        else a++;
    }
    // print(s);
    cout<<cnt;nl;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Counting_Orders.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin a(n), b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    sort(all(a)); sort(all(b));
    
    for(int i = 0; i < n; i++){
        if(a[i] <= b[i]){
            cout<<0<<endl;
            return;
        }
    }

    int ans = 1;
    int cnt = 0;
    int div = 0;
    for(int i = n - 1, j = n - 1; i >= 0; i--, div++){
        for(;j >= 0; j--){
            if(a[j] <= b[i])break;
            cnt++;
        }
        ans *= (cnt - div);
        ans %= M;
    }

    cout<<ans<<endl;

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Cover_in_Water.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;

typedef long double ld;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int water_checker(string str, int n)
{
    int i,cnt=1,dot=0,pass=0;
    if(str[0]=='.')dot=1;
    for(i=1;i<n;i++)
        {
            if(str[i]=='.')dot++;

            if(str[i]=='.' && str[i-1]=='.')cnt++;
            else cnt=1;
            if(cnt>=3){pass=1; break;}
        }
        if(pass==1)return 2;
        else return dot;
}

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i;
        cin>>n;
        string str;
        cin>>str;
        cout<<water_checker(str,n); nl;
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Creating_Words.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    string s, t;
    cin>>s>>t;
    swap(s[0], t[0]);
    cout<<s<<' '<<t<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Cut_Ribbon.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;
const int N = 4001;

int32_t main(){
    int n, a, b, c;
    cin>>n;
    vector<int> v(3);
    for(int i = 0; i < 3; i++){
        cin>>v[i];
    }
    sort(v.begin(), v.end());
    a = v[0], b = v[1], c = v[2];

    int ans = 0;
    //dp <<<<<<<<<<<<<<<<<<<< bruteforce
    for(int x = 0; x < N; x++ ){
        for(int y = 0; y < N; y++){
            int sum = n - (x * a + y * b);
            if(sum < 0)break;
            else if(sum % c == 0){
                ans = max(ans,(x + y + (sum / c)));
            }
        }
    }
    cout<<ans<<endl;
}

"/home/raihan/Desktop/Codeforces/A_Declined_Finalists.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int32_t main(){
    fast_in_out;
    lin(n);
    int mx = 0;
    forn(i,n){lin(x); mx = max(mx, x);}

    cout << max(0ll, mx - 25) << endl;    
    
}

"/home/raihan/Desktop/Codeforces/A_Desorting.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i;
        cin>>n;
        int64_t arr[n];
        cin>>arr[0]>>arr[1];
        int64_t x,min;
        x=arr[1]-arr[0];
        min=x;        
        for(i=2;i<n;i++)
        {
            cin>>arr[i];
            x=arr[i]-arr[i-1];
            if(x<min)min=x;
        }
        if(min<0)cout<<"0";
        else
        {
            cout<<(min/2)+1;
        }
        nl;

    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Die_Roll.cpp"
#include<bits/stdc++.h>
#include<cmath>
using namespace std;
int main()
{
    int y,w;
    cin>>y>>w;
    int maxx=max(y,w);
    if(maxx==5)cout<<"1/3\n";
    else if(maxx==4) cout<<"1/2\n";
    else if(maxx==3)cout<<"2/3\n";
    else if(maxx==2)cout<<"5/6\n";
    else if(maxx==1)cout<<"1/1\n";
    else if(maxx==6)cout<<"1/6\n";

}

"/home/raihan/Desktop/Codeforces/A_Difference_Operations.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    for(int i = 0; i < n; i++){
        if(v[i] % v.front() != 0){
            no;
            return;
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Distanced_Coloring.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m, k;
    cin >> n >> m >> k;

    n = min(k, n);
    m = min(k, m);

    cout<<n * m<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Diverse_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    vector<vin> v(n, vin(m)), ans(n, vin(m));
    set<int> s;

    forn(i,n)forn(j,m)cin >> v[i][j], s.insert(v[i][j]);

    if(n == m && n == 1){
        cout<<-1<<endl;
        return;
    }
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(s.size() == 1){
                ans[i][j] = *s.begin();
                continue;
            }
            for(auto a : s){
                if(a != v[i][j]){
                    ans[i][j] = a;
                    s.erase(a);
                    break;
                }
            }
        }nl;
    }
    m--; n--;

    if(v[n][m] == ans[n][m]){
        swap(ans[0][0], ans[n][m]);
    }
    
    
    for(auto a : ans){print(a)}
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Divide_and_Multiply.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int cnt = 0;
    for(auto &i : v){
        while(i % 2 == 0){
            i /= 2;
            cnt++;
        }
    }
    
    sort(all(v));
    while(cnt--){
        v.back() *= 2;
    }
    cout << accumulate(all(v), 0ll) << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Div_7.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    if(n%10<n%7)n+=7-n%7;
    else n-=n%7;
    cout<<n;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Don_t_Try_to_Count.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

bool chk(string x, string s){
    int n = x.size(), m = s.size();

    for(int i = 0; i <= n - m; i++){

        bool ck = 1;
        for(int j = 0; j < m; j++){
            if(x[i + j] != s[j]){
                ck = 0;
                break;
            }
        }
        if(ck == 1)return true;
    }

    return false;
    
}


void sukuna(){
    int n, m, ans = 0;
    cin >> n >> m;
    string x, s;
    cin >> x >> s;

    while(chk(x, s) == false){
        x += x;
        n += n;
        ans++;
        if(n > 1e2){
            ans = -1;
            break;
        }
    }

    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Dora_s_Set.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int l, r;
    cin >> l >> r;
    int ans = 0, cnt = 0;
    for(int i = l; i <= r; i++){
        if(i & 1)cnt++;
    }
    cout<<cnt / 2<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Doremy_s_Paint_3.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> mp;
    forn(i,n){
        cin >> v[i];
        mp[v[i]]++;
    }
    if ((int) mp.size() == 1 || (int) mp.size() == 2 && abs(mp.begin()->second - mp.rbegin()->second) <= 1) {
        yes;
    } else {
        no;
    }    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Do_Not_Be_Distracted.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n); string str,st="0";
    cin>>str; str+=st;
    vector<int>v(26);

    forn(i,n+1)if(str[i]!=str[i+1])v[str[i]-65]++;
    
    if(*max_element(v.begin(),v.end())>1)no;
    else yes;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Dual_Trigger.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    int n,on=0;cin>>n;
    string str;
    cin>>str;
    bool s=0;
    forn(i,n)
    {
        if(str[i]==49)on++;
        if(str[i]==49 && str[i-1]==49)s=1;
    }
    // cout<<on;nl;

    if(on%2==1 || (on==2 && s==1))no;
    else yes;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_DZY_Loves_Chessboard.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m;
vector<string> v;

int32_t main(){
    fast_in_out;
    cin >> n >> m;

    for(int i=0;i<n;++i){
        string s;
		cin>>s;
		for(int j=0;s[j];++j)
		if(s[j]=='.')
			s[j]=(i+j)&1?87:66;
            
		cout << s << endl;
	}

    
    
}

"/home/raihan/Desktop/Codeforces/A_Easy_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    cout << --n << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Entertainment_in_MAC.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    string str,rev; 
    ll n; cin>>n; cin>>str;
    rev=str;
    reverse(rev.begin(),rev.end()); 
    
    if(str<=rev)cout<<str;
    else cout<<rev<<str;
    nl;
    
    return 0;
}

int main()
{
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Expression.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
#define nl                 cout<<"\n"
#define forn(i,e)          for(ll i=0;i<e;i++)

int main()
{
    ll a,b,c;
    cin>>a>>b>>c;
    ll v[5];
    v[0]=a+b*c;
    v[1]=a*(b+c);
    v[2]=a*b*c;
    v[3]=(a+b)*c;
    v[4]=(a+b+c);
    
    cout<<*max_element(v,v+5);nl;
    
}

"/home/raihan/Desktop/Codeforces/B_Take_Your_Places.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    int even = 0, odd = 0;
    forn(i,n){
        cin >> v[i];
        if(v[i] & 1)odd++;
        else even++;
    }   
    if(abs(even - odd) > 1){
        cout << -1 << endl;
        return;
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Taxi.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    sort(all(v));
    
    int ans = 0;
    
    for(int i = n - 1, j = 0; j <= i; i--){
        int cnt = 0;
        for(; j <= i; j++){
            cnt += v[j];
            if(cnt + v[i] > 4)break;
        }
        ans++;
    }
    cout<<ans<<endl;
    
    
}

"/home/raihan/Desktop/Codeforces/B_Ten_Words_of_Wisdom.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vector<pair<pr, int>> v(n);
    for(int i = 0; i < n; i++){
        cin >> v[i].first.second >> v[i].first.first;
        v[i].second = i + 1;
    } 
    sort(all(v));
    rforn(i, n){
        if(v[i].fi.second <= 10){
            cout<<v[i].second<<endl;
            return;
        }
    }

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_The_Bits.cpp"
#include<bits/stdc++.h>
using namespace std;
#define int        long long
const int M = 1e9 + 7;

int32_t main(){
    int n;
    cin >> n;
    string a, b;
    cin >> a >> b;

    int zp = 0, op = 0, z = 0, o = 0;
    for(int i = 0; i < n; i++){
        if(b[i] == '0' and a[i] == '0')zp++;
        if(b[i] == '0' and a[i] == '1')op++;
        if(b[i] == '1'){
            if(a[i] == '0')z++;
            // else o++;
        }
        if(a[i] == '1')o++;
    }   

    int ans = (op * z) + (zp * o);
    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/B_The_least_round_way.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e3 + 10;

int n;
int grid[N][N];
int dp[2][N][N];
char par[2][N][N];

int cnt(int n, int d){
    if(n == 0)return 0;
    if(d == 0)d = 2;
    if(d == 1)d = 5;
    int ans = 0;
    while(n % d == 0){
        ans++;
        n /= d;
    }
    return ans;
}

int recur(int ind, int i, int j){

    if(i == n and j == n)return cnt(grid[i][j], ind);
    if(i > n or j > n)return INF;
    if(dp[ind][i][j] != -1)return dp[ind][i][j];

    int a = recur(ind, i + 1, j);
    int b = recur(ind, i, j + 1);
    if(a < b)par[ind][i][j] = 'D';
    else par[ind][i][j] = 'R';

    return dp[ind][i][j] = cnt(grid[i][j], ind) + min(a, b);
}

void printZero(int x, int y){
    cout << 1 << endl;
    for(int i = 1; i < x; i++)cout <<"D";
    for(int j = 1; j < y; j++)cout <<"R";
    for(int i = x + 1; i <= n; i++)cout <<"D";
    for(int j = y + 1; j <= n; j++)cout <<"R";
    cout << endl;
}
 

int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);

    memset(dp, -1, sizeof(dp));
    cin >> n;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cin >> grid[i][j];
        }
    }

    recur(0, 1, 1);
    recur(1, 1, 1);

    int ind = 0, i = 1, j = 1;
    if(dp[!ind][i][j] < dp[ind][i][j])ind = !ind;

    if(dp[ind][i][j] > 0){
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= n; j++){
                if(grid[i][j] == 0){
                    printZero(i, j);
                    return 0;
                }
            }
        }
    }
    cout << dp[ind][i][j] << endl;
    string ans;
    while(i != n or j != n){
        ans.push_back(par[ind][i][j]);
        if(ans.back() == 'D')i++;
        else j++;
    }
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/B_The_Sparsest_Number_in_Between.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int msb(int n){
    int cnt = 0;
    while(n > 0){
        cnt++;
        n >>= 1;
    }
    return cnt;
}

int convert(bitset<64> &bit){
    int ans = 0;
    for(int i = 0, j = 1; i < 64; i++, j <<= 1){
        if(bit[i])ans += j;
    }
    return ans;
}

int bitCnt(bitset<64> &bit){
    int ans = 0;
    for(int i = 0; i < 64; i++){
        ans += bit[i];
    }
    return ans;
}

void sukuna(int test){
    int a, b;
    cin >> a >> b;
    int m = msb(a);
    if(__builtin_popcountll(a) == 1){
        cout << a << endl;
        return;
    }
    if((1ll << m) <= b){
        cout << (1ll << (m)) << endl;
        return;
    }
    bitset<64> bit(a), temp, ans;
    int cnt = bitCnt(bit);
    ans = bit;

    for(int i = 0; i < m; i++){
        if(bit[i] == 1)continue;

        temp = bit;
        temp[i] = 1;
        for(int j = i - 1; j >= 0; j--)temp[j] = 0;

        int tcnt = bitCnt(temp);
        if(tcnt < cnt){
            cnt = tcnt;
            if(convert(temp) > b)break;
            ans = temp;
        }
    }    
    cout << convert(ans) << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Trailing_Zeroes_III.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Transfusion.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int sum = accumulate(all(v), 0ll);
    int avg = sum / n;

    if(sum % n){no;return;}

    for(int i = 0; i < n - 2; i++){
        if(v[i] == avg)continue;
        if(v[i] < avg){
            v[i + 2] -= (avg - v[i]);
            v[i] = avg;
        }
        else{
            v[i + 2] += abs(avg - v[i]);
            v[i] = avg;
        }
    }

    // print(v);
    for(auto i : v){
        if(i != avg){no; return;}
    }
    yes;

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Triple.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i,cnt=0,ans=-1,j,temp;
        cin>>n;
        int arr[n];
        for(i=0;i<n;i++)cin>>arr[i];
        for(i=0;i<n;i++)
        {
            for(j=i+1;j<n;j++)
            {
                if(arr[i]>arr[j])
                {
                    temp=arr[i]; arr[i]=arr[j]; arr[j]=temp;
                }
            }
        }

        for(i=0;i<n;i++)
        {
            for(j=i,cnt=0;j<n;j++)
            {
                if(arr[j]==arr[i])cnt++;
 
                if(cnt==3){ans=arr[i]; break;}
            }
            
            if(ans>0)break;
        }
        cout<<ans<<endl;
    }
}

"/home/raihan/Desktop/Codeforces/B_Trouble_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Yes\n"
#define no                 cout<<"No\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int z = 0, o = 0;
    vin a(n), b(n);
    forn(i,n)cin >> a[i];
    forn(i,n){
        cin >> b[i];
        if(b[i])o++;
        else z++;
    }
    bool ck = 1;
    for(int i = 1; i < n; i++){
        if(a[i] < a[i - 1]){
            ck = 0;
            break;
        }
    }
    if(ck){
        yes;
        return;
    }
      
    if(z > 0 && o > 0)yes;
    else no;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Turtle_and_Piggy_Are_Playing_a_Game_2.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    cout<<v[n / 2]<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Turtle_Math_Fast_Three_Task.cpp"
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i, e) for (ll i = 0; i < e; i++)
#define rforn(i, s) for (ll i = s - 1; i >= 0; i--)
#define yes cout << "YES" << endl
#define no cout << "NO" << endl
#define pb push_back
#define pp pop_back
#define nl cout << "\n"
#define sz(x) ((ll)(x).size())

int main()
{
    int test;
    cin >> test;
    while (test--)
    {
        int n;
        cin >> n;
        int arr[n];
        ll i, sum = 0, ck = 0;
        forn(i, n)
        {
            cin >> arr[i];
            sum += arr[i];
        }
        if (sum % 3 == 0)
            cout << "0\n";
        else if (sum % 3 == 1)
        {
            for (i = 0; i < n; i++)
            {
                if (arr[i] % 3 == 1)
                {
                    ck = 1;
                    break;
                }
            }
            if (ck == 1)
                cout << "1\n";
            else if ((sum + 1) % 3 == 0)
                cout << "1\n";
            else
                cout << "2\n";
        }
        else if (sum % 3 == 2)
        {
            for (i = 0; i < n; i++)
            {
                if (arr[i] % 3 == 2)
                {
                    ck = 1;
                    break;
                }
            }

            if (ck == 1)
                cout << "1\n";
            else if ((sum + 1) % 3 == 0)
                cout << "1\n";
            else
                cout << "2\n";
        }
    }
    return 0;
}

// Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Two_Buttons.cpp"
#include <iostream>
using namespace std;

int main(){
    int n, m, a = 0;
    cin >> n >> m;
    
    while (n < m)
        m % 2 ? m++ : m /= 2, a++;
    
    cout << a + n - m << endl;
}

"/home/raihan/Desktop/Codeforces/B_Two_Divisors.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef 				long long ll;
typedef 				long double ld;

#define forn(i,e) 		for(ll i=0;i<e;i++)
#define rforn(i,s) 		for(ll i=s-1;i>=0;i--)
#define yes 			cout<<"YES"<<endl
#define no 				cout<<"NO"<<endl
#define pb 				push_back
#define pp 				pop_back
#define nl 				cout<<"\n"
#define sz(x) 			((ll)(x).size())


int solve()
{
    ll a,b;
    cin>>a>>b;
    if(b%a==0)cout<<(b*b/a);
    else cout<<a*b/__gcd(a,b);
    nl;
    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching]

"/home/raihan/Desktop/Codeforces/B_Two_Tables.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
int w, h;

int f1(vin v, int x, int y){
    if(x <= v[0] || y <= v[1])return 0;
    int xx = w - v[2], yy = h - v[3];
    int a = x - v[0], b = y - v[1];
    cout<<xx<<' '<<yy<<endl;
    cout<<a<<' '<<b<<endl;
    
    if(xx > a)a = INF;
    if(yy > b)b = INF;

    return min(a, b);
}

void sukuna(){
    cin >> w >> h;
    vin v(4);
    forn(i,4)cin >> v[i];
    int x, y;
    cin >> x >> y;

    cout<<f1(v, x, y)<<endl;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_T_primes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb()               push_back()
#define pp                 pop_back()
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())


int main()
{
    int n,i,j;
    scanf("%d",&n);
 
    for(i=0;i<n;i++)
    {
        long long int arr;
        scanf("%lld",&arr);
        double sqr=sqrt(arr);
        int sq=sqr;
        double x=sqr-sq;
        if(arr<4)printf("NO\n");
        else if(x>0)printf("NO\n");
        else if(x==0)
        {
            int chk=0;
            for(j=2;j<=sqrt(sq);j++)
            {
                if(arr%j==0){chk =1; break;}
            }
            if(chk==1)printf("NO\n");
            else printf("YES\n");
        }
    }
}

"/home/raihan/Desktop/Codeforces/B_Uniqueness.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, v[N];

bool func(int mid){
    map<int, int> mp;
    int cnt = 0;
    for(int i = 0; i < n; i++){
        mp[v[i]]++;
        cnt += (mp[v[i]] == 2);
    }
    for(int i = 0; i < mid; i++){
        mp[v[i]]--;
        cnt -= (mp[v[i]] == 1);
    }
    if(cnt == 0)return true;


    for(int i = mid; i < n; i++){
        mp[v[i]]--;
        if(mp[v[i]] == 1)cnt--;

        mp[v[i - mid]]++;
        if(mp[v[i - mid]] == 2)cnt++;
        if(cnt == 0)return true;
    }
    return false;
}

void sukuna(int test){
    cin >> n;
    for(int i = 0; i < n; i++)cin >> v[i];
    int lo = 0, hi = n - 1, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(!func(mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }

    cout << lo << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;  // cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Upscaling.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
     string a="##",b="..";
    // cout<<a<<b;
    in(n);
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            int x=i+j;
            if(x%2==0)cout<<a;
            else cout<<b;
        }nl;
        for(int j=1;j<=n;j++)
        {
            int x=i+j;
            if(x%2==0)cout<<a;
            else cout<<b;
        }
        nl;
    }
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Verse_For_Santa.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n); lin(m)
    vin v(n);
    forn(i,n)cin >> v[i];

    int sum = 0;
    for(int i = 0; i < n; i++){
        sum += v[i];
        if(sum > m){
            int mx = 0, ind = 0;
            for(int j = 0; j <= i; j++){
                if(v[j] > mx){
                    mx = v[j];
                    ind = j + 1;
                }
            }
            cout<<ind<<endl;
            return;
        }
    }
    cout<<0<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Vika_and_the_Bridge.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define pr                 pair<int, int> 
#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int func(vin v, int t){
    int n = v.size(), p = 0, i = 0;
    multiset<int> dist;

    for(; i < n; i++){
        if(v[i] == t){
            dist.insert(i - p);
            p = i;
            break;
        }
    }

    for(; i < n; i++){
        if(v[i] == t){
            dist.insert(i - p - 1);
            p = i;
        }
    }

    dist.insert(n - 1 - p);

    dist.insert(*--dist.end() / 2);
    dist.erase(--dist.end());
    
    return *--dist.end();
}


void sukuna(){
    int n, k, ans = M;
    cin >> n >> k;
    vin v(n);
    vector<pr> p;
    map<int, int> mp;

    forn(i,n)cin >> v[i], mp[v[i]]++;

    for(auto a : mp){
        p.push_back({a.first, a.second});
    }
    sort(all(p), [](pr a, pr b){return a.second > b.second;});

    for(int i = 0 ; i < 700 && i < p.size(); i++){
        ans = min(ans, func(v, p[i].first));
    }

    cout<<ans<<endl; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Vika_and_the_Bridge.py"
from collections import defaultdict
import sys

M = int(1e9 + 7)

def func(v, t):
    n = len(v)
    p = 0
    dist = []

    for i in range(n):
        if v[i] == t:
            dist.append(i - p)
            p = i
            break

    for i in range(p + 1, n):
        if v[i] == t:
            dist.append(i - p - 1)
            p = i

    dist.append(n - 1 - p)

    dist.append(max(dist) // 2)
    dist.remove(max(dist))
    
    return max(dist)

def sukuna():
    n, k = map(int, input().split())
    v = list(map(int, input().split()))
    p = []
    mp = defaultdict(int)

    for num in v:
        mp[num] += 1

    for key, value in mp.items():
        p.append((key, value))
    
    p.sort(key=lambda x: x[1], reverse=True)

    ans = M
    for i in range(min(1000, len(p))):
        ans = min(ans, func(v, p[i][0]))

    print(ans)

def main():
    input = sys.stdin.read
    data = input().splitlines()
    test = int(data[0])
    index = 1
    for _ in range(test):
        sukuna()

if __name__ == "__main__":
    main()


"/home/raihan/Desktop/Codeforces/B_Vlad_and_Candies.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin>> v[i];
    sort(all(v));
    if(n == 1){
        if(v.back() == 1)yes;
        else no;
        return;
    }
    if(v[n - 1] - v[n - 2] <= 1)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Vlad_and_Shapes.cpp"
#include<bits/stdc++.h>
using namespace std;

#define nl cout<<"\n"
int DCU()
{
    int n;
    cin>>n;
    string str;
    int arr[n]={0},j;
    for(int i=0;i<n;i++)
    {
        cin>>str;
        for(j=0;j<n;j++)
        {
            if(str[j]==49)arr[i]++;
        }
    }
    
    sort(arr,arr+n);
    if(arr[n-1]==arr[n-2])cout<<"SQUARE";
    else cout<<"TRIANGLE";

    nl;
    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        DCU();
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_William_the_Vigilant.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, q;
string str;

bool func(int x){
    if(x < 1 or x + 2 > n)return false;
    return str[x] == 'a' and str[x + 1] == 'b' and str[x + 2] == 'c';
}

void sukuna(int test){
    cin >> n >> q >> str;
    str = "*" + str;
    int cnt = 0;
    for(int i = 1; i <= n; i++){
        cnt += func(i);
    }

    while(q--){
        int x; char c;
        cin >> x >> c;

        for(int i = x - 2; i <= x + 2; i++)cnt -= func(i);
        str[x] = c;
        for(int i = x - 2; i <= x + 2; i++)cnt += func(i);
        cout << cnt << endl;
    }
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_World_Cup.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int sub = n;
    int mn = *min_element(all(v));
    int ans = (mn) / sub;

    for(auto &i : v){
        i -= ans * sub;
    }
    sub = 0;
    for(int i = 0; i < n; i++){
        if(v[i] - sub <= 0){
            cout << i + 1 << endl;
            return 0;
        }
        v[i] -= sub++;
    }

    for(int i = 0; i < n; i++){
        if(v[i] - sub <= 0){
            cout << i + 1 << endl;
            return 0;
        }
        v[i] -= sub++;
    }   
}

"/home/raihan/Desktop/Codeforces/B_XOR_Palindromes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int not_match = 0;
    for(int i = 0, j = n - 1; i < j; i++, j--){
        if(str[i] != str[j])not_match++;
    }

    int extra = n - not_match;
    string ans;

    for(int i = 0; i <= n; i++){
        if(i < not_match)ans.push_back('0');
        else if(i > extra)ans.push_back('0');
        else{
            if(n % 2 == 0 && (extra - i) % 2 == 1)ans.push_back('0');
            else ans.push_back('1');
        }
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_XOR_Sequences.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(x) lin(y);
    bitset<32>xx(x) , yy(y);
    int ans = 1;
    for(int i = 0; i <=32; i++){
        if(xx[i] != yy[i])break;
        ans <<= 1;
    }
    cout<<ans<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_YetnotherrokenKeoard.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        string str;
        cin>>str;
        int n=str.size(),i,b=0,B=0;
        for(i=n-1;i>=0;i--)
        {
            if(str[i]=='b'){str[i]=32;b++;}
            if(b>0 && str[i]>96 && str[i]<123){ str[i]=32; b--; }
            if(str[i]=='B'){str[i]=32;B++;}
            if(B>0 && str[i]>64 && str[i]<91){ str[i]=32; B--; }
            
        }
        for(i=0;i<n;i++)if(str[i]!=32)cout<<str[i];
        nl;
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Yet_Another_Coin_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;
vin coin = {1, 3, 6, 10, 15};

int func(int n){
    int sum = 0;
    for(int i = 4; i >= 0; i--){
        if(coin[i] <= n){
            sum += n / coin[i];
            n %= coin[i];
        }
    }
    return sum;
}

void sukuna(){
    lin(n);
    int sum = func(n);

    for(int i = 4; i >= 0; i--){
        if(n >= coin[i]){
            sum = min(sum, func(n - coin[i]) + 1);
        }
    }
    cout<<sum<<endl; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Cards_Partition.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    print(v);

    cout << accumulate(all(v), k) << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Challenging_Cliffs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n), a, ans;
    forn(i,n)cin >> v[i];
    sort(all(v));

    int pos = 0, mn = INF;
    for(int i = 1; i < n; i++){
        if(v[i] - v[i - 1] < mn){
            mn = v[i] - v[i - 1];
            pos = i;        
        }
    }

    for(int i = 0; i < n; i++){
        if(i == pos || i == (pos - 1))continue;
        a.push_back(v[i]);
    }
    int m = a.size();

    ans.push_back(v[pos - 1]);

    forn(i,m)if(a[i] > ans.front())ans.push_back(a[i]);
    forn(i,m)if(a[i] <= ans.front())ans.push_back(a[i]);



    ans.push_back(v[pos]);
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Chat_Ban.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int k, x;
    cin >> k >> x;
    int lo = 1, hi = M, mid, y, ans = 0;
    int first_half = k * (k + 1) / 2;

    while(hi > lo){
        mid = (lo + hi) / 2;
        y = mid * (mid + 1) / 2;
        if(y < x){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    if(lo <= k){
        cout<<lo<<endl;
        return;
    }

    ans = min(lo, k);
    x -= first_half; k--;
    lo = 1; hi = k;
    int sh = k * (k + 1) / 2;

    while(hi > lo){
        mid = (hi + lo) / 2;
        int m = k - mid;
        y = sh - (m * (m + 1) / 2);
        if(y < x){
            lo = mid + 1;
        }else{
            hi = mid;
        }

    }
    // cout<<lo<<endl;

    ans += min(lo, k);
    cout<<ans<<endl;



    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Chocolate_Bunny.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int query(int i, int j){
    cout << "? " << i << " " << j << endl;
    cout.flush();
    lin(ask);
    return ask;
}

void sukuna(int test){
    lin(n);
    set<int> vals;
    for(int i = 1; i <= n; i++)vals.insert(i);
    vin ans(n + 1);

    for(int i = 1, j = 2, cnt = 0;cnt < n - 1;cnt++ ){
        int a = query(i, j);
        int b = query(j, i);
        if(a > b){
            ans[i] = a;
            i = j; 
            j++;
        }else{
            ans[j] = b;
            j++;
        }
        vals.erase(max(a, b));
    }
    for(int i = 1; i <= n; i++)if(ans[i] == 0){
        ans[i] = *vals.begin();
    }
    cout <<"! ";
    for(int i = 1; i <= n; i++)cout << ans[i] << " "; nl;
    cout.flush();
    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Choose_the_Different_Ones.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define No cout<<"NO"<<endl
#define ll long long int

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,m,k;
        cin>>n>>m>>k;
        int a[n],b[m];
        for(i=0;i<n;i++)cin>>a[i];
        for(i=0;i<m;i++)cin>>b[i];
        
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Chopsticks.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    cout << v.back() * v[n - 2] << endl;    
    
}

"/home/raihan/Desktop/Codeforces/C_Circular_RMQ.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


vector<int> tree(4 * N), lazy(4 * N), v(N);

int query(int node, int lo, int hi, int l, int r){

    if(lazy[node] != 0){
        int temp = lazy[node];
        lazy[node] = 0;
        tree[node] += temp;

        if(hi != lo){
            lazy[2 * node] += temp;
            lazy[2 * node + 1] += temp;
        }
    }

    if(lo > r or hi < l)return INF; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return min(q1, q2); //***
}


void update(int node, int lo, int hi, int l, int r, int val){

    if(lazy[node] != 0){
        int temp = lazy[node];
        lazy[node] = 0;
        tree[node] += temp;

        if(hi != lo){
            lazy[2 * node] += temp;
            lazy[2 * node + 1] += temp;
        }
    }


    if(lo > r or hi < l)return;
    if(lo >= l and hi <= r){
        tree[node] += val;

        if(hi != lo){
            lazy[2 * node] += val;
            lazy[2 * node + 1] += val;
        }
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);

    tree[node] = min(tree[2 * node], tree[2 * node + 1]);  //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = min(tree[2 * node], tree[2 * node + 1]); //***
}

void func(string &str, int &l, int &r, int &val, int &t){
    string num;
    vin v;
    for(auto i : str){
        if(i == ' '){
            v.push_back(stoi(num));   
            num.clear();
            continue;
        }
        num.push_back(i);
    }
    v.pb(stoi(num)); v.pb(0);
    t = v.size() == 4;
    l = v[0], r = v[1], val = v[2];
}

void sukuna(int test){
    lin(n);
    forn(i,n)cin >> v[i];
    build(1, 0, n);

    lin(q);
    cin.ignore();
    while(q--){
        string str;
        getline(cin, str);

        int l, r, val, t;
        func(str, l, r, val, t);

        if(t){
            if(l <= r)update(1, 0, n, l, r, val);
            else{
                update(1, 0, n, 0, r, val);
                update(1, 0, n, l, n - 1, val);
            }

        }else{
            if(l <= r)cout << query(1, 0, n, l, r) << endl;
            else{
                int q1 = query(1, 0, n, 0, r);
                int q2 = query(1, 0, n, l, n - 1);
                cout << min(q1, q2) << endl;
            }
        }

    }
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Clock_Conversion.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    int a,b,h,m;
    string str,am="AM";
    
    cin>>str;
    h=((str[0]-48)*10+str[1]-48);
    m=((str[3]-48)*10+str[4]-48);

    if(h>=12){am="PM";     if(h>12)h-=12;}
    if(h==0)h=12;
    
    if(h<=9){str[0]='0';   str[1]=h+48;}
    else {str[0]=h/10+48;  str[1]=h%10+48;}
    
    if(m<=9){str[3]='0';   str[4]=m+48; }
    else {str[3]=m/10+48;  str[4]=m%10+48;}
    
    cout<<str<<" "<<am;nl;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Closest_Cities.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e17;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    
    vin fw(n + 2), bk(n + 2), v(n + 2);
    v[n + 1] = INF; v[0] = -INF;

    Forn(i,n)cin >> v[i];

    for(int i = 1; i <= n; i++){
        int p = v[i] - v[i - 1];
        int s = v[i + 1] - v[i];
        if(s < p)fw[i] = 1;
        else fw[i] = s;
    }
    for(int i = n; i > 0; i--){
        int p = v[i + 1] - v[i];
        int s = v[i] - v[i - 1];
        if(s < p)bk[i - 1] = 1;
        else bk[i - 1] = s;
    }

    for(int i = 1; i <= n; i++)fw[i] += fw[i - 1];
    for(int i = n; i > 0; i--)bk[i] += bk[i + 1];

    lin(q);
    while(q--){
        int l, r;
        cin >> l >> r;
        if(l < r){
            cout << fw[--r] - fw[--l] << endl;
        }else{
            swap(l, r);
            cout << bk[l] - bk[r] << endl;
        }
    }  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Coin_Rows.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, ans = 0;
    cin >> n;
    vin a(n + 1), b(n + 1);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    ans = a[0];

    rforn(i,n)a[i] += a[i + 1];
    for(int i = 1; i < n; i++)b[i] += b[i - 1];
    ans = a[0] - ans;

    // print(a);
    // print(b);
    
    int i = 0, j = n - 1;
    for(; i < j;){
        if(a[j] > b[i])i++;
        else j--;
    }
    i--; j++;
    // cout<<a[j]<<' '<<b[i]<<endl;
    ans = min(ans, max(a[j], b[i]));
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Column_Swapping.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x + 1<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    vector<vin> v(n, vin(m)), temp;
    forn(i,n)forn(j,m)cin >> v[i][j];
    temp = v;
    for(auto &a : temp)sort(all(a));
    vin un_sorted;

    for(int i = 0; i < n; i++){
        un_sorted.clear();
        for(int j = 0; j < m; j++){
            if(v[i][j] != temp[i][j]){
                un_sorted.push_back(j);
            }
        }
        if(un_sorted.size() > 1)break;
    }
    if(un_sorted.size() > 2){
        cout << -1 << endl;
        return;
    }

    if(un_sorted.size() > 0)
    forn(i,n)swap(v[i][un_sorted.front()], v[i][un_sorted.back()]);
    forn(i,n)forn(j,m){
        if(v[i][j] != temp[i][j]){
            cout << -1 << endl;
            return;
        }
    }
    if(un_sorted.size()){
        print(un_sorted);
    }else{
        cout << 1 <<" " << 1 << endl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Common_Divisors.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
        lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int gcd = 0;

    for(auto a : v)gcd = __gcd(gcd, a);

    int ans = 0;
    for(int i = 1; i * i <= gcd; i++){
        if(gcd % i == 0){
            if(i * i == gcd)ans ++;
            else ans += 2;
        }
    }

    cout<<ans<<endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Competitive_Fishing.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, k;
vin pf;

bool func(int x){
    int sum = 0;

    for(int i = 0; i < n and i < x - 1; i++){
        sum += pf[i];
        if(sum >= k)return true;
    }
    
    return false;
}

void sukuna(int test){
    pf.clear();
    string str;
    cin >> n >> k >> str;

    int cnt = 0;
    rforn(i,n){
        pf.push_back(cnt);
        if(str[i] == '1')cnt++;
        else cnt--;
    }

    sort(all(pf)); 
    reverse(all(pf));

    print(pf);

    int lo = 0, hi = n, mid;
    while(hi > lo){
        mid = (lo + hi) / 2;

        if(!func(mid)){
          lo = mid + 1;
        }else{
          hi = mid;
        }
    }  

    if(lo == n){
        if(!func(lo)){ cout << -1 << endl; return;}
    }
    if(func(lo - 1))lo--;

    cout << lo << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Complex_Market_Analysis.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e6 + 100;

int n, e;
vector<bool> isPrime(N, 1);
vin vec, dp(N, -1), dp2(N, -1);

void seive(){
    isPrime[0] = isPrime[1] = 0;
    for(int i = 2; i < N; i++){
        if(isPrime[i]){
            for(int j = i * i; j < N; j += i){
                isPrime[j] = 0;
            }
        }
    }
}

int recur(int i){

    if(i >= n)return 0;
    if(dp[i] != -1)return dp[i];

    if(vec[i] != 1){
        recur(i + 1);
        return dp[i] = 0;
    }else{
        dp[i] = 1 + recur(i + e);
        recur(i + 1);
    }
    return dp[i];
}

int recur2(int i){

    if(i < 0)return 0;
    if(dp2[i] != -1)return dp2[i];

    if(vec[i] != 1){
        recur2(i - 1);
        return dp2[i] = 0;
    }else{
        dp2[i] = 1 + recur2(i - e);
        recur2(i - 1);
    }
    return dp2[i];
}

void reset(){
    vec.clear();
    for(int i = 0; i <= n; i++){
        dp[i] = dp2[i] = -1;
    }
}

void sukuna(int test){
    cin >> n >> e;
    reset();
    vin v(n), ones;
    forn(i,n){
        cin >> v[i];
        if(v[i] == 1){
            ones.push_back(i);
        }
        if(!isPrime[v[i]] && v[i] != 1)v[i] = 0;
    }
    vec = v;

    recur(0);
    recur2(n - 1);

    int ans = 0;

    for(int i = 0; i < n; i++){
        if(v[i] == 0 or v[i] == 1)continue;
        int x = 0, y = 0;
        
        if(i + e < n)x = dp[i + e];
        if(i - e >= 0)y = dp2[i - e];

        if(x == 0 or y == 0)ans += x + y;
        else{
            ans += x + y + (x * y);
        }
    }

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;
    seive();


    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Complex_Market_Analysis.java"

"/home/raihan/Desktop/Codeforces/C_Concatenation_of_Arrays.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define mnn(a)             min(a.first, a.second)
#define mxx(a)             max(a.first, a.second)
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;
    sort(all(v), [](pr a, pr b){
        if(mnn(a) < mnn(b))return true;
        if(mnn(a) == mnn(b))return mxx(a) < mxx(b);
        return false;
    });

    for(auto i : v)cout << i.first <<" " << i.second <<" ";nl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Contrast_Value.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int func1(int i, vin &dif){
    int n = dif.size();
    for(; i < n; i++){
        if(dif[i] < 0)break;
    }
    return i;
}

int func2(int i, vin &dif){
    int n = dif.size();
    for(; i < n; i++){
        if(dif[i] > 0)break;
    }
    return i;
}

void sukuna(){
    int n, con = 0;
    cin >> n;
    vin v(n), dif(n);
    forn(i,n)cin >> v[i];

    for(int i = 1; i < n; i++){
        dif[i] = v[i] - v[i - 1];
        con += abs(dif[i]);
    }

    if(con == 0){
        cout<<1<<endl;
        return;
    }

    
    int ans = 1;

    for(int i = 0; i < n;){
        i = max(func1(i, dif), func2(i, dif));
        ans ++;
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Copil_Copac_Draws_Trees.cpp"
#include<bits/stdc++.h>
using namespace std;

const int N = 2e5 + 10;
vector<pair<int, int>> graph[N];
int n, lev[N];

void dfs(int vertex, int par = 0, int wt = 0){

    for(auto child : graph[vertex]){
        int child_v = child.first;
        int child_wt = child.second;
        if(child_v == par)continue;

        lev[child_v] = lev[vertex];
        if(child_wt < wt)lev[child_v]++;
        dfs(child_v, vertex, child_wt);   
    }
}

void reset(){
    for(int i = 1; i <= n; i++){
        graph[i].clear();
        lev[i] = 0;
    }
}

void solve(){
    cin >> n ;
    reset();

    for(int i = 1; i < n; i++){
        int x, y;
        cin >> x >> y;
        graph[x].push_back({y, i});
        graph[y].push_back({x, i});
    }

    dfs(1);
    int ans = 0;
    for(int i = 1; i <= n; i++){
        ans = max(ans, lev[i]);
    }
    cout << ans + 1 << endl;
    
}

int main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int test;
    cin >> test;
    while(test--)solve();
}

"/home/raihan/Desktop/Codeforces/A_Swap_Columns_and_Find_a_Path.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    sort(all(v), [](pr a, pr b){
        return a.first + a.second < b.first + b.second;
    });
    int res = v.back().first + v.back().second;
    v.pop_back(); n--;

    sort(all(v));

    int alt = 0;
    for(auto i : v)alt += i.second;
    
    int ans = (n == 0 ? 0 : -INF), sum = 0;
    for(int i = n - 1; i >= 0; i--){
        alt -= v[i].second;
        sum += v[i].first;
        ans = max(ans, sum + alt);
        swap(v[i].first, v[i].second);
    }
    sort(all(v));

    swap(alt, sum);
    for(int i = n - 1; i >= 0; i--){
        alt -= v[i].second;
        sum += v[i].first;
        ans = max(ans, sum + alt);
    }
    for(auto i : v)cout << i.first <<" "; nl;
    for(auto i : v)cout << i.second <<" ";nl;    

    cout << ans + res << endl;

    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Tender_Carpenter.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    for(int i = 0; i < n - 1; i++){
        if(v[i] * 2 >  v[i + 1] and v[i + 1] * 2 > v[i]){
            yes; return;
        }
    }
    no;
    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_The_Bento_Box_Adventure.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int32_t main(){
    fast_in_out;
    int n = 4;
    set<int> s;
    Forn(i,5)s.insert(i);
    for(int i = 0; i < n; i++){
        lin(x);
        s.erase(x);
    }

    print(s);    
    
}

"/home/raihan/Desktop/Codeforces/A_The_Good_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    int ans = ceil((double) n / k);
    if(n%k > 1){
        ans++;
    }
    if(n % k == 0 && k > 1)ans++;
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_The_number_of_positions.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


int main()
{
    fast_in_out;
    int n,a,b;
    cin>>n>>a>>b;
    b=n-b;
    // cout<<a<<b;nl;

    for(int i=1;i<=n;i++)if(i>b && i>=a){cout<<i<<endl; return 0;}
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Thorns_and_Coins.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define pb push_back
#define pp pop_back
#define nl cout<<"\n"
#define sz(x) ((ll)(x).size())

int solve()
{
    int n;
    cin>>n;
    string str;
    cin>>str;
    int i,cnt=0;
    for(i=0;i<n;i++)
    {
        if(str[i]=='*' && str[i+1]=='*')break;
        else{
            if(str[i]=='@')cnt++;
        }
    }
    cout<<cnt;nl;

    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Too_Min_Too_Max.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    int n;
    cin>>n;
    vector<ll>arr(n);
    forn(i,n)cin>>arr[i];

    sort(arr.begin(),arr.end());
    
    ll sum=arr[n-2]-arr[0]+arr[n-2]-arr[1]+arr[n-1]-arr[1]+arr[n-1]-arr[0];
    cout<<abs(sum);nl;
    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_To_My_Critics.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int a,b,c;
        cin>>a>>b>>c;
        int x=a+b,y=b+c,z=c+a;
        if(x>=10 || y>=10 || z>=10)cout<<"YES\n";
        else cout<<"NO\n";
    }
}

"/home/raihan/Desktop/Codeforces/A_Transformation_from_A_to_B.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int a, b;

bool op(){
    if(b == a)return false;
    if(b < a)return false;
    if(b & 1){
        if(b % 10 != 1)return false;
        b /= 10;
    }else{
        b /= 2;
    }
    return true;
}

void sukuna(){
    cin >> a >> b;
    vin ans;

    while(1){
        ans.push_back(b);
        if(a == b)break;
        if(!op())break;
    }
    reverse(all(ans));

    if(a == b){
        yes;
        cout << ans.size() <<endl;
        print(ans);
    }
    else{
        no;
    } 
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Transformation_from_A_to_B.java"

"/home/raihan/Desktop/Codeforces/A_Translation.cpp"
//Nothing to say
#include<bits/stdc++.h>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    char s[102],t[102];
    cin>>s>>t;
    strrev(t);
    if(strcmp(s,t)==0)yes;
    else no;

    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Trust_Nobody.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    sort(all(v));

    for(int i = 0; i <= n; i++){
        int cnt = 0;
        for(auto a : v){
            if(a > i)cnt++;
        }
        if(cnt == i){
            cout<<cnt<<endl;
            return;
        }
    }
    
    cout<<-1<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Trust_Nobody.java"
import java.util.*;

public class A_Trust_Nobody {
    static Scanner in = new Scanner(System.in);

    static void solve(){
        int n = in.nextInt();
        ArrayList<Integer> v = new ArrayList<>();
        
        for(int i = 0; i < n; i++){
            int x = in.nextInt();
            v.add(x);
        }

        for(int i = 0; i <= n; i++){
            int cnt = 0;
            for(var a : v){
                if(a > i){
                    cnt++;
                }
            }
            if(cnt == i){
                System.out.println(cnt);
                return;
            }
        }
        System.out.println(-1);
    }
    public static void main(String[] args) {
        int test = in.nextInt();
        while (test > 0) {
            test--;
            solve();
        }
    }    
}

"/home/raihan/Desktop/Codeforces/A_Turtle_and_Good_Strings.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    if(str.back() != str.front())yes;
    else no;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Turtle_Puzzle_Rearrange_and_Negate.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        int n;
        cin>>n;
        ll x,sum=0;
        while(n--)
        {
            cin>>x;
            sum=sum+abs(x);
        }
        cout<<sum;nl;
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Twice.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    map<int, int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
    }

    int ans = 0;
    for(auto i : mp){
        ans += i.se / 2;
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Twin_Permutations.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int mx = *max_element(all(v));

    forn(i,n){
        cout << mx - v[i] + 1 <<' ';
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Two_0_1_Sequences.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    string a, b;
    cin >> a >> b;
    int i = n - 1, j = m - 1;
    
    for(;i >= 0 && j >= 0; i--){
        if(a[i] == b[j])j--;
        else break;
    }
    if(j == -1){yes; return;}
    if(j > 0){no; return;}

    for(int k = 0; k <= i; k++){
        if(a[k] == b[j]){yes; return;}
    }
    no;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Two_Friends.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,cnt=0;
    cin>>n;
    vector<ll>v(n);

    forn(i,n)cin>>v[i];

    forn(i,n)
        if(v[v[i]-1]==(i+1))cnt++;
            
    if(cnt>=2)cout<<2;
    else cout<<3; nl;

    

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Two_Frogs.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, a, b;
    cin >> n >> a >> b;
    if((b - a) % 2 == 0)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Two_Groups.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int grouping_is_not_good()
{
    int n; cin>>n;
    ll x,sum=0;
    while(n--)
    {
        cin>>x;
        sum+=x;
    }
    cout<<abs(sum);nl;
    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)grouping_is_not_good();
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Two_Screens.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string a, b;
    cin >> a >> b;
    int n = a.size(), m = b.size();
    if(n > m){
        swap(a, b);
        swap(n, m);
    }

    int ans = n + m;
    bool flg = 0;
    for(int i = 0; i < n; i++){
        if(a[i] == b[i]){
            flg = 1;
            ans--;
        }
        else break;
    }

    cout << ans + flg<< endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Unit_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,mo=0,po,ans=0,v;
    cin>>n;
    forn(i,n)
    {
        cin>>v;
        if(v==-1)mo++;
    }
    po=n-mo;
    
    if(po<mo){ans=mo-n/2; mo=n/2;}
    if(mo%2==1)ans++;

    cout<<ans;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Living_Sequence.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> digits(1, 1);

char func(int dig, int &n){
    int dx = digits[dig - 1];
    int sum = dx; char c = '0';
    for(; sum <= n;){
        sum += dx; c++;
        if(c == '4')c++;
    }
    sum -= dx;
    n -= sum;
    return c;
}

void sukuna(int test){
    lin(n);
    string ans;
    int d = 0;
    while(digits[d] <= n)d++;
    for(; d > 0; d--){
        ans.push_back(func(d, n));
    }
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;
    digits.push_back(9);
    while(digits.back() <= 1e12){
        digits.push_back(9 * digits.back());
    }

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Lucky_Queries.c"
#include<stdio.h>

#define par     tree[node]
#define left    tree[2 * node]
#define right   tree[2 * node + 1]
#define swap(a, b) {a ^= b; b ^= a; a ^= b;}

int max(int x, int y){
    return x > y ? x : y;
}

struct grp{
    int n4, n7, n47, n74;
};

void display(struct grp g){
    printf("%d %d\n", g.n4, g.n7);
    printf("%d %d\n", g.n47, g.n74);
}

int mx(struct grp g){
    return max(g.n47, max(g.n4, g.n7));
}

int n, q;
struct grp demo;
char str[1000100];
int lazy[4 * 1000100];
struct grp tree[4 * 1000100];


struct grp query(int node, int lo, int hi, int l, int r){
    if(lazy[node]){
        lazy[node] = 0;
        swap(par.n4, par.n7);
        swap(par.n47, par.n74);

        if(hi != lo){
            lazy[2 * node] ^= 1;
            lazy[2 * node + 1] ^= 1;
        }
    }

    if(hi < l || lo > r)return demo;
    if(lo >= l && hi <= r)return par;

    int mid = (lo + hi) / 2;
    
    struct grp q1 = query(2 * node, lo, mid, l, r);
    struct grp q2 = query(2 * node + 1, mid + 1, hi, l, r);
    struct grp ret = demo;

    ret.n4 = q1.n4 + q2.n4;
    ret.n7 = q1.n7 + q2.n7;

    ret.n47 = max(q1.n4 + q2.n7,   max(q1.n4 + q2.n47,   q1.n47 + q2.n7));
    ret.n74 = max(q1.n7 + q2.n4,   max(q1.n7 + q2.n74,   q1.n74 + q2.n4));

    return ret;
}

void update(int node, int lo, int hi, int l, int r){

    if(lazy[node]){
        lazy[node] = 0;
        swap(par.n4, par.n7);
        swap(par.n47, par.n74);

        if(hi != lo){
            lazy[2 * node] ^= 1;
            lazy[2 * node + 1] ^= 1;
        }
    }

    if(hi < l || lo > r)return;
    if(lo >= l && hi <= r){
        swap(par.n4, par.n7);
        swap(par.n47, par.n74);

        if(hi != lo){
            lazy[2 * node] ^= 1;
            lazy[2 * node + 1] ^= 1;
        }
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r);
    update(2 * node + 1, mid + 1, hi, l, r);

    par.n4 = left.n4 + right.n4;
    par.n7 = left.n7 + right.n7;
    
    par.n47 = max(left.n4 + right.n7,   max(left.n4 + right.n47,   left.n47 + right.n7));
    par.n74 = max(left.n7 + right.n4,   max(left.n7 + right.n74,   left.n74 + right.n4));
}


void build(int node, int lo, int hi){
    if(hi == lo){
        if(str[lo] == '4')par.n4 = 1;
        else par.n7 = 1;
        return;
    }
    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);
    
    par.n4 = left.n4 + right.n4;
    par.n7 = left.n7 + right.n7;
    
    par.n47 = max(left.n4 + right.n7,   max(left.n4 + right.n47,   left.n47 + right.n7));
    par.n74 = max(left.n7 + right.n4,   max(left.n7 + right.n74,   left.n74 + right.n4));
}


int main(){
    scanf("%d %d", &n, &q);
    scanf("%s", str);

    build(1, 0, n - 1);

    while(q--){
        int l = 1, r = n;
        char typ[10];
        scanf("%s", typ);

        if(typ[0] == 'c'){
            struct grp ans = query(1, 0, n - 1, --l, --r);
            printf("%d\n", mx(ans));
        }else{
            scanf("%d %d", &l, &r);
            update(1, 0, n - 1, --l, --r);
        }
    }
}

"/home/raihan/Desktop/Codeforces/E_Lucky_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int         long long
#define par         tree[node]
#define left        tree[2 * node]
#define right       tree[2 * node + 1]

const int M = 1e9 + 7;
const int N = 1e6 + 10;

struct grp{
    int n4 = 0, n7 = 0, n47 = 0, n74 = 0;
    void display(){
        cout << n4 << " " << n7 << endl;
        cout << n47 <<" " << n74 << endl;
    }
    int mx(){
        return max({n4, n7, n47});
    }
};

int n, m;
string str;
grp tree[4 * N];
int lazy[4 * N];

grp query(int node, int lo, int hi, int l, int r){
    if(lazy[node]){
        lazy[node] = 0;
        swap(par.n4, par.n7);
        swap(par.n47, par.n74);
        if(hi != lo){
            lazy[2 * node] ^= 1;
            lazy[2 * node + 1] ^= 1;
        }
    }

    if(hi < l or lo > r)return {0, 0, 0, 0};
    if(lo >= l and hi <= r)return par;

    int mid = (lo + hi) / 2;
    grp q1 = query(2 * node, lo, mid, l, r);
    grp q2 = query(2 * node + 1, mid + 1, hi, l, r);
    grp ret;

    ret.n4 = q1.n4 + q2.n4;
    ret.n7 = q1.n7 + q2.n7;

    ret.n47 = max({q1.n4 + q2.n7,   q1.n4 + q2.n47,   q1.n47 + q2.n7});
    ret.n74 = max({q1.n7 + q2.n4,   q1.n7 + q2.n74,   q1.n74 + q2.n4});

    return ret;
}

void update(int node, int lo, int hi, int l, int r){

    if(lazy[node]){
        lazy[node] = 0;
        swap(par.n4, par.n7);
        swap(par.n47, par.n74);
        if(hi != lo){
            lazy[2 * node] ^= 1;
            lazy[2 * node + 1] ^= 1;
        }
    }

    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        swap(par.n4, par.n7);
        swap(par.n47, par.n74);
        if(hi != lo){
            lazy[2 * node] ^= 1;
            lazy[2 * node + 1] ^= 1;
        }
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r);
    update(2 * node + 1, mid + 1, hi, l, r);

    par.n4 = left.n4 + right.n4;
    par.n7 = left.n7 + right.n7;

    par.n47 = max({left.n4 + right.n7,   left.n4 + right.n47,   left.n47 + right.n7});
    par.n74 = max({left.n7 + right.n4,   left.n7 + right.n74,   left.n74 + right.n4});
}

void build(int node, int lo, int hi){
    if(hi == lo){
        if(str[lo] == '4')tree[node].n4++;
        else tree[node].n7++;
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    par.n4 = left.n4 + right.n4;
    par.n7 = left.n7 + right.n7;

    par.n47 = max({left.n4 + right.n7,   left.n4 + right.n47,   left.n47 + right.n7});
    par.n74 = max({left.n7 + right.n4,   left.n7 + right.n74,   left.n74 + right.n4});
}


int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);
    
    cin >> n >> m;
    cin >> str;
    build(1, 0, n - 1);

    while(m--){
        int l = 1, r = n;
        string typ;
        cin >> typ;

        if(typ == "count"){
            grp ans = query(1, 0, n - 1, --l, --r);
            cout << ans.mx() << endl;
        }else{
            cin >> l >> r;
            update(1, 0, n - 1, --l, --r);
        }
    }
}

"/home/raihan/Desktop/Codeforces/E_Matrix_Transformation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    int a[n][m], b[n][m];

    forn(i,n)forn(j,m)cin >> a[i][j];
    forn(i,n)forn(j,m)cin >> b[i][j];
    
    forn(i,n){

        forn(j,m){
            bitset<8> bit(b[i][j]);
            // cout << b[i][j] <<' ';
            cout << bit <<"  ";
        }cout << endl;
    }nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_MEX_and_Increments.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    print(v);
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Mirror_Grid.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<string>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

vin rotate(vin &v){
    int n = v.size();
    vin b = v;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            b[j][n - i - 1] = v[i][j];
        }
    }

    return b;
}

void sukuna(){
    lin(n);
    vin a(n);
    forn(i,n)cin >> a[i];

    vin b = rotate(a);
    vin c = rotate(b);
    vin d = rotate (c);

    int ans = 0;
    
    forn(i,n){
        forn(j,n){
            int cnt = 0;
            if(a[i][j] == '0')cnt++;
            if(b[i][j] == '0')cnt++;
            if(c[i][j] == '0')cnt++;
            if(d[i][j] == '0')cnt++;
            ans += min(cnt, 4 - cnt);
        }
    }
    cout<<ans / 4<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Nearly_Shortest_Repeating_Substring.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n;

bool func(string str, int x){
    map<string, int> mp;
    string temp;
    for(int i = 0; i < n; i++){
        temp.push_back(str[i]);
        if((i + 1) % x == 0){
            mp[temp]++;
            temp.clear();
        }
    }
    if(mp.size() > 2)return false;
    if(mp.size() == 1)return true;
    string a = mp.begin()->first, b = mp.rbegin()->first;
    int cnt = 0;

    for(int i = 0; i < x; i++){
        if(a[i] != b[i])cnt++;
    }
    cnt *= min(mp.begin()->second, mp.rbegin()->second);
    if(cnt > 1)return false;
    return true;
}


void sukuna(){
    cin >> n;
    string str;
    cin >> str;
    vector<int> div;
    
    for(int i = 1; i * i <= n; i++){
        if(n % i == 0){
            div.push_back(i);
            if(i * i != n)div.push_back(n / i);
        }
    }
    sort(all(div));
    
    for(auto i : div){
        if(func(str, i)){
            cout<<i<<endl;
            return;
        }
    }
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Negatives_and_Positives.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long
#define _____              int

#define ____c(n)           int n; cin >> n;
#define ____(i,e)          for(int i=0;i<e;i++)
#define ____p(x)           cout<<x<<endl;
#define _________              vector<int>
#define ____f(x)           cout<<accumulate(x.begin(), x.end(), 0ll)<<endl;
#define ________________   abs
_____ _____________i = 1e18;


void ____________(){

    ____c(__);
    _________ _1_(__);
    _____ _1 = 0, _00 = 0;
    ____(_,__){
        cin >> _1_[_];
        if(_1_[_] <= 0)_1++;
    }
    if(_1 % 2 == 0){
        for(_____ _ : _1_){
            _00 += ________________(_);
        }
        ____p(_00);
        return;
    }

    _____ _01 = _____________i, _11 = 0;

    ____(_,__){
        if(_1_[_] == 0){
            _11 = _;
            break;
        }
        if(________________(_1_[_]) < _01){
            _01 = ________________(_1_[_]);
            _11 = _;
        }
        
    }

    if(_1_[_11] > 0) _1_[_11] *= -1;


    ____(_,__){
        if(_ == _11)continue;
        _1_[_] = ________________ (_1_[_]);
    }

    ____f(_1_);
    
    
}

int32_t main(){

    ____c(_);
    while(_--)____________();
}

"/home/raihan/Desktop/Codeforces/E_Novice_s_Mistake.cpp"

"/home/raihan/Desktop/Codeforces/E_Permutation_by_Sum.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vin ans(505);
int n, l, r, s;

bool func(int m){
    int sum = 0, j = n, i = m - 1;
    for(int i = 1; i <= m; i++)ans[i - 1] = i, sum += i;
    if(sum > s)return false;

    for(int k = ans[i]; k < j and i >= 0; ){
        if(sum < s){
            sum++; k++;
            ans[i]++;
        }
        else break;
        if(sum == s)break;
        if(k == j){
            j--;  i--;
            if(i < 0)return false;
            k = ans[i];    
        }
    }
    return true;
}

void sukuna(int test){
    cin >> n >> l >> r >> s;
    int m = r - l + 1;
    if(func(m) == 0){cout << -1 << endl; return;}
    set<int> s;
    for(int i = 1; i <= n; i++)s.insert(i);
    for(int i = 0; i < m; i++)s.erase(ans[i]);

    for(int i = 0; i < l - 1; i++){
        cout << *s.begin() <<" ";
        s.erase(s.begin());
    }    

    for(int i = 0; i < m; i++)cout << ans[i] <<' ';
    print(s);
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Permutation_of_Rows_and_Columns.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m;

vector<vin> rotate(vector<vin> &v){
    vector<vin> b(m);
    forn(i,m){
        vin temp;
        forn(j,n){
            temp.push_back(v[j][i]);
        }
        b[i] = temp;
    }
    return b;
}

void sukuna(int test){
    cin >> n >> m;
    vector<vin> a(n, vin (m)), b(n, vin(m));

    forn(i,n)forn(j,m)cin >> a[i][j];
    forn(i,n)forn(j,m)cin >> b[i][j];

    map<int, int> mp;
    forn(i,n){
        for(auto j : a[i])mp[j] = i;
    }

    forn(i,n){
        int j = mp[b[i].front()];
        for(auto x : a[j])mp[x] = i;
        for(auto x : a[i])mp[x] = j;
        swap(a[i], a[j]);
    }

    a = rotate(a);
    b = rotate(b);
    swap(n, m);
    mp.clear();
    forn(i,n){
        for(auto j : a[i])mp[j] = i;
    }

    forn(i,n){
        int j = mp[b[i].front()];
        for(auto x : a[j])mp[x] = i;
        for(auto x : a[i])mp[x] = j;
        swap(a[i], a[j]);
    }

    forn(i,n)forn(j,m){
        if(a[i][j] != b[i][j]){no; return;}
    }
    yes;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Photoshoot_for_Gorillas.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m, k;
    cin >> n >> m >> k;
    lin(w);
    vin v(w), ans;
    forn(i,w)cin >> v[i]; 
    sort(all(v));
    
    vector<vin> grid(n, vin (m));

    for(int i = 0; i <= n - k; i++){
        for(int j = 0; j <= m - k; j++){
            grid[i][j]++;
            if(i < n - k)grid[i + k][j]--;
            if(j < m - k)grid[i][j + k]--;
            if(i < n - k && j < m - k)grid[i + k][j + k]++;
        }
    }

    for(int i = 1; i < n; i++)grid[i][0] += grid[i - 1][0];
    for(int i = 1; i < m; i++)grid[0][i] += grid[0][i - 1];

    for(int i = 1; i < n; i++){
        for(int j = 1; j < m; j++){
            grid[i][j] += grid[i - 1][j] + grid[i][j - 1] - grid[i - 1][j - 1];
        }
    }
    
    for(auto gd : grid){
        for(auto x : gd)
            ans.pb(x);
    }

    sort(all(ans));
    reverse(all(ans)); reverse(all(v));
    int sum = 0;

    forn(i, min(w, n * m)){
        sum += ans[i] * v[i];
    }

    cout<<sum<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Photoshoot_for_Gorillas.java"
import java.util.*;

public class E_Photoshoot_for_Gorillas {
    static Scanner in = new Scanner(System.in);

    static void SaturoGojoSir(){
        int n = in.nextInt();
        int m = in.nextInt();
        int k = in.nextInt();

        int w = in.nextInt();
        ArrayList<Long> v = new ArrayList<>();
        for(int i = 0; i < w; i++){
            long x = in.nextInt();
            v.add(x);
        }

        long[][] grid = new long[n][m];

        for(int i = 0; i <= n - k; i++){
            for(int j = 0; j <= m - k; j++){
                grid[i][j]++;
                if(i < n - k)grid[i + k][j]--;
                if(j < m - k)grid[i][j + k]--;
                if(i < n - k && j < m - k)grid[i + k][j + k]++;
            }
        }

        for(int i = 1; i < n; i++){
            grid[i][0] += grid[i - 1][0];
        }
        for(int j = 1; j < m; j++){
            grid[0][j] += grid[0][j - 1];
        }

        for(int i = 1; i < n; i++){
            for(int j = 1; j < m; j++){
                grid[i][j] += grid[i - 1][j] + grid[i][j - 1] - grid[i - 1][j - 1];
            }
        }

        ArrayList<Long> sum = new ArrayList<>();

        for(var gd : grid){
            for(var x : gd){
                sum.add(x);
            }
        }

        Collections.sort(sum);
        Collections.sort(v);
        Collections.reverse(sum);
        Collections.reverse(v);

        long ans = 0;
        for(int i = 0; i < Math.min(w, n * m); i++){
            ans += v.get(i) * sum.get(i);
        }

        System.out.println(ans);


    }
    public static void main(String[] args) {
        int test = in.nextInt();
        while (test > 0) {
            test--;
            SaturoGojoSir();
        }
    }
}

"/home/raihan/Desktop/Codeforces/E_Polycarp_s_New_Job.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(q);
    int n = 0, m = 0;

    while(q--){
        char t;   int x, y;
        cin >> t >> x >> y;
        if(x > y)swap(x, y);
        if(t == '+'){
            n = max(n, x);
            m = max(m, y);
        }else{
            if(x >= n and y >= m)yes;
            else no;
        }
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Prefix_GCD.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    private:
        int N = 1e6;
        vector<bool> isPrime;
    public:
        vector<int> prime_numbers, lowest_prime, heighest_prime;
        
        SeiveAlgo(){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            heighest_prime = lowest_prime;
            isPrime = vector<bool> (N);
            generate();
        }
    
        SeiveAlgo(int N){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            heighest_prime = lowest_prime;
            isPrime = vector<bool> (N);
            generate();
        }

        vector<int> primeFactors(int n){
            vector<int> temp;
            while(n > 1){
                int pm = lowest_prime[n];
                while(n % pm == 0){
                    n /= pm;
                    temp.push_back(pm);
                }
            }
            return temp;
        }

        vector<int> segSeive(int l, int r){
            int n = r - l + 1;
            vector<bool> isPrime(n + 1);
            vector<int> primes;

            for(int i = 0; prime_numbers[i] * prime_numbers[i] <= r; i++){
                int st = ceil(l * 1.0 / prime_numbers[i]) * prime_numbers[i];
                
                for(int j = st; j <= r; j += prime_numbers[i]){
                    if(j == prime_numbers[i])continue;
                    isPrime[j - l] = true;
                }
            }

            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        primes.push_back(i + l);
                    }
                }
            }
            return primes;
        }
        
    private:
        void generate(){
            isPrime[0] = isPrime[1] = 1;
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lowest_prime[i] = i;
                    heighest_prime[i] = i;
    
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = 1;
                        heighest_prime[j] = i;
                        if(lowest_prime[j] == 0){
                            lowest_prime[j] = i;
                        }
                    }
                }
            }
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    prime_numbers.push_back(i);
                }
            }
        }
};

SeiveAlgo sv(1e5+10);

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    print(v);
    
    for(auto i : v){
        print(sv.primeFactors(i));
    }
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Queue_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int mn = *min_element(all(v));

    int ans = 0, i = 0;
    for(; i < n; i++){
        if(v[i] == mn)break;
        ans++;
    }
    for(; i < n - 1; i++){
        if(v[i] > v[i + 1]){
            cout<<-1<<endl;
            return;
        }
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Romantic_Glasses.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n + 1), pf(n + 1);
    Forn(i,n)cin >> v[i];

    for(int i = 1; i <= n; i++){
        if(i & 1)pf[i] = pf[i - 1] + v[i];
        else pf[i] = pf[i - 1] - v[i]; 
    }

    map<int, int> mp;
    for(auto a : pf)mp[a]++;

    for(auto a : mp){
        if(a.second >= 2){
            yes;
            return;
        }
    }
    no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Sakurako_Kosuke_and_the_Permutation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1), t(n + 1);
    Forn(i,n){
        cin >> v[i];
        t[v[i]] = i;
    }
    int ans = 0;

    for(int i = 1; i <= n; i++){
        if(v[i] == i)continue;
        if(v[v[i]] == i)continue;
        int x = v[i], y = t[i];
        swap(v[x], v[y]);
        t[v[x]] = x; t[v[y]] =  y;
        ans++;

    }
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Scuza.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, q;
    cin >> n >> q;

    vin a(n), v(n), s(n);
    forn(i,n)cin >> a[i];
    v[0] = a[0];
    s[0] = a[0];
    for(int i = 1; i < n; i++){
        v[i] = max(v[i - 1], a[i]);
        s[i] = s[i - 1] + a[i];
    }

    while(q--){
        lin(x);
        int up = upper_bound(all(v), x) - v.begin();
        up--;
        if(up < 0){
            cout<<0<<' ';continue;
        }
        cout<<s[up]<<" ";
    }
    nl;  
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Scuza.java"
import java.util.*;

public class E_Scuza {
    public static Scanner in = new Scanner(System.in);
    
    static int upper_bound(long [] arr, int x){
        int lo = 0, hi = arr.length, mid;

        while (hi > lo) {
            mid = (lo + hi) / 2;
            if(arr[mid] <= x){
                lo = mid + 1;
            }else{
                hi = mid;
            }
        }
        return lo;
    }

    static void sukuna(){
        int n = in.nextInt();
        int q = in.nextInt();
        long a[] = new long[n];
        long v[] = new long[n];
        long pf[] = new long[n];
        for(int i = 0; i < n; i++){
            long x = in.nextLong();
            a[i] = x;
        }
        v[0] = a[0]; pf[0] = a[0];
        for(int i = 1; i < n; i++){
            v[i] = Math.max(v[i - 1], a[i]);
            pf[i] = pf[i - 1] + a[i];
        }
        while (q > 0) {
            q--;
            int x = in.nextInt();
            int up = upper_bound(v, x);up--;
            if(up < 0){
                System.out.print(0 + " ");
            }else{
                System.out.print(pf[up] + " ");
            }
        }
        System.out.println();
    }
    
    public static void main(String[] args) {
        int test = in.nextInt();
        while (test > 0) {
            test--;
            sukuna();            
        }
    }
}

"/home/raihan/Desktop/Codeforces/A_I_love_username.cpp"
#include<bits/stdc++.h>
using namespace std;
#define int        long long


int32_t main(){
    int n, ans = 0, x;
    cin>>n>>x;
    int mn = x, mx = x;
    for(int i = 0; i < n - 1; i++){
        cin>>x;
        if(x > mx){
            ans++;
            mx = x;
        }
        if(x < mn){
            ans++;
            mn = x;
        }
    }

    cout<<ans<<endl;
    

    
}

"/home/raihan/Desktop/Codeforces/A_I_Wanna_Be_the_Guy.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int n,p,i,ck=1,q;
    cin>>n;
    cin>>p;
    int arr[n+1]={0},a[p];
    for(i=0;i<p;i++)
    {
        cin>>a[i];
        arr[a[i]]++;
    }
    cin>>q;  int b[q];
    for(i=0;i<q;i++)
    {
        cin>>b[i];
        arr[b[i]]++;
    }

    for(i=1;i<=n;i++)
    {
        if(arr[i]==0)
        {
            ck=0;break;
        }
 
    }


    if(ck==1)cout<<"I become the guy.\n";
    else cout<<"Oh, my keyboard!\n";
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Jellyfish_and_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m, k;
    cin >> n >> m >> k;
    k %= 2;
    if(k == 0)k = 2;

    vin a(n), b(m);
    forn(i,n)cin >> a[i];
    forn(i,m)cin >> b[i];
        
    for(int i = 0; i < k; i++){
        sort(all(a)); sort(all(b));
        if(i % 2 == 0){
            if(a[0] < b[m - 1]){
                swap(a[0], b[m - 1]);
            }
        }
        else{
            if(b[0] < a[n - 1]){
                swap(a[n - 1], b[0]);
            }
        }
    }

    cout<<accumulate(all(a), 0LL)<<endl;   
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Joey_Takes_Money.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int sum = 1;
    forn(i,n){
        lin(x);
        sum *= x;
    }
    sum += (n - 1);
    cout << sum * 2022 <<endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Kefa_and_First_Steps.cpp"
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int arr[n],i,j=1,jmax=1;
    for(i=0;i<n;i++)cin>>arr[i];
    
    for(i=1;i<n;i++)
    {
        if(arr[i]>=arr[i-1])j++;

        else
        {
            j=1;
        }
        if(j>jmax)jmax=j;
        
    }
    cout<<jmax<<endl;
}

"/home/raihan/Desktop/Codeforces/A_Kevin_and_Combination_Lock.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    if(n % 33 == 0)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_King_Keykhosrow_s_Mystery.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int a, b;
    cin >> a >> b;
    int gc = __gcd(a, b);
    cout << a * b / gc << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Knapsack.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, W, half;
int v[N], chose[N];

int recur(int ind){

    int a = recur(ind + 1);
    if(a <= W and a >= half){
        chose[ind] = true;
    }
}


void sukuna(int test){
    cin >> n >> W;
    for(int i = 1; i <= n; i++)cin >> v[i];
    half = (W + 1) / 2;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Knight_Tournament.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e5 + 100;
int n, m;
int par[N];
set<int> s;

void sukuna(){
    cin >> n >> m;
    Forn(i,n)s.insert(i);

    int l, r, x;
    while(m--){
        cin >> l >> r >> x;
        vin toRemove;
        auto it = s.lower_bound(l);

        for(; *it <= r && it != s.end(); it++){
            par[*it] = x;
            toRemove.push_back(*it);
        }
        for(auto i : toRemove)s.erase(i);
        s.insert(x);
    }
    par[x] = 0;
    Forn(i,n)cout << par[i] <<" ";nl;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_k_Factorization.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    private:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        set<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            return divisors;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};

SeiveAlgo sv(1e6);

int32_t main(){
    fast_in_out;
    int n, k;
    cin >> n >> k;
    vin v = sv.primeFactors(n);
    if(v.size() < k){
        cout << -1 << endl;
        return 0;
    }
    int i = 0;
    for(; k > 1; k--, i++){
        cout << v[i] <<" ";
        n /= v[i];
    }
    if(n != 1)cout << n << endl;
    
}

"/home/raihan/Desktop/Codeforces/A_k_th_divisor.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e15 + 100;


void sukuna(int test){
    int n, k;
    cin >> n >> k;    
    vin devisors;

    for(int i = 1; i * i <= n; i++){
        if(n % i)continue;
        devisors.pb(i);
        if(i * i == n)continue;
        devisors.pb(n / i);
    }
    sort(all(devisors));
    if(k > devisors.size())cout << -1 << endl;
    else cout << devisors[--k] << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Lame_King.cpp"

"/home/raihan/Desktop/Codeforces/A_Laptops.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"Happy Alex\n"
#define no                 cout<<"Poor Alex\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

bool cmp(pr a, pr b){
    return a.second > b.second;
}

int32_t main()
{
    fast_in_out;
    lin(n);
    vector<pr> v(n), price(n);
    forn(i,n){
        cin>>v[i].first>>v[i].second;
    }
    price = v;
    sort(price.rbegin(), price.rend());
    sort(all(v), cmp);
    for(int i = 0; i < n; i++){
        if(price[i].first == v[i].first)continue;
        else if(price[i].second == v[i].second)continue;
        else {
            yes;
            return 0;
        }
    }
    no;   
    
}

"/home/raihan/Desktop/Codeforces/A_Legs.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long
#define lin(n)             int n;cin>>n;


void solve(){
    lin(n);
    int ans = n / 4;
    n%= 4;
    ans += n / 2;
    cout<<ans<<endl;    
}

int32_t main(){
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Line_Breaks.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    vector<string> v(n);
    forn(i,n)cin >> v[i];
    int ans = 0;
    int cnt = 0;

    for(int i = 0; i < n; i++){
        cnt += v[i].size();
        if(cnt > m)break;
        ans++;
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Little_Pony_and_Crystal_Mine.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main()
{
    fast_in_out;
    lin(n);
    vector<string> ans;

    for(int i = 1; i <= n/2; i++){
        
    }
    
    
}

"/home/raihan/Desktop/Codeforces/A_Lucky_Conversion.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string a, b;
    cin >> a >> b;

    int x = 0, y = 0, n = a.size();
    forn(i,n){
        if(a[i] == b[i])continue;
        if(a[i] == '7')x++;
        else y++;
    }    
    if(x > y)swap(x, y);

    int ans = x + (y - x);

    cout <<ans << endl;
}

"/home/raihan/Desktop/Codeforces/A_Lucky_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int l, r, ans;
set<int> s;
void func(int x){
    s.insert(x);
    if (x < r){
        func(x * 10 + 4), func(x * 10 + 7);
    }
}


int32_t main(){
    cin >> l >> r;
    func(0);
    for (; l <= r;){
        auto it = s.lower_bound(l);
        ans += (min(r, *it) - l + 1) * *it;
        l = *it + 1;
    }
    cout << ans;
}

"/home/raihan/Desktop/Codeforces/A_Magnets.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    ll n,ans=1,x,y;
    cin>>n;
    cin>>x;
    forn(i,n-1)
    {
        cin>>y;
        if(x!=y)ans++;
        x=y;
    }
    cout<<ans;nl;

    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Make_All_Equal.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    map<int, int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
    }
    int mx = 0;
    for(auto a : mp){
        mx = max(mx, a.second);
    }

    cout<<n - mx<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Make_it_Increasing.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n; 

int func(vin v, int x){
    int ans = 1;
    vin a(n); a[x] -= v[x];
    for(int i = x - 1; i >= 0; i--){
        if(v[i] > a[i + 1]){
            int dif = abs(a[i + 1]) / v[i];
            dif++;
            ans += dif;
            a[i] -=  v[i] * dif;
        }
    }

    for(int i = x + 1; i < n; i++){
        if(a[i] > a[i - 1])continue;
        int dif = abs(a[i - 1]) / v[i];
        dif++;
        ans += dif;
        a[i] = v[i] * dif;
    }
    return ans;
}


void sukuna(){
    cin >> n;
    vin v(n);
    forn(i,n)cin >> v[i];
    int ans = INF;

    for(int i = 0; i < n; i++){
        ans = min(ans, func(v, i));
    }
    cout << ans <<endl; 
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Make_it_White.cpp"
#include <iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while (test--)
    {
        int n, i, st = 0, en = 0,ans=0;
        cin>>n;
        string str;
        cin>>str;
        for (i = 0; i < n; i++)
        {
            if (str[i] == 'B')
            {
                ans-= i;
                break;
            }
        }
        for (i = n-1; i >=0; i--)
        {
            if (str[i] == 'B')
            {
                ans+=i ;
                break;
            }
        }
        printf("%d\n",ans+1);
    }
}

"/home/raihan/Desktop/Codeforces/A_Many_Equal_Substrings.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class KMP{
    public:
        string text, pattern;
        int n, m;
        bool isMatch = true;
        KMP(string text, string pattern){
            this->text = text;
            this->pattern = pattern;
            n = text.size();
            m = pattern.size();
            isMatchs();
        }

        vector<int> createTempArray(){
            vector<int> lps(pattern.size());
            
            int index = 0;
            for(int i = 1; i < pattern.size(); ){
                if(pattern[index] == pattern[i]){
                    lps[i] = index + 1;
                    index++; i++;
                }else{
                    if(index != 0)index = lps[index - 1];
                    else lps[i] = 0, i++;
                }
            }
            return lps;
        }

        void isMatchs(){
            vector<int> lps = createTempArray();
            int i = 0, j = 0;

            while(i < n){
                if(text[i] == pattern[j]){
                    i++; j++;
                }else{
                    if(j != 0)j = lps[j - 1];
                    else i++;
                }
                if(j == m)return;
            }
            isMatch = false;
        }
};


int32_t main(){
    fast_in_out;
    int n, k;
    cin >> n >> k;
    string str;
    cin >> str;
    KMP obj(str, str);
    vin v = obj.createTempArray();

    cout << str;

    for(int i = 1; i < k; i++){
        for(int j = v.back(); j < n; j++)cout << str[j];
    }

    
}

"/home/raihan/Desktop/Codeforces/A_Marathon.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int cnt = 0;
    vin v(4);
    forn(i,4)cin >> v[i];
    for(int i = 1; i < 4; i++){
        if(v[i] > v[0])cnt++;
    }
    cout<<cnt<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Marks.cpp"
#include <bits/stdc++.h>
using namespace std;
int n, m, l, p;
string s[101];
int main()
{
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        cin >> s[i];
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            p = 1;
            for (int k = 0; k < n; k++)
                if (s[k][j] > s[i][j])
                    p = 0;
            if (p)
            {
                l++;
                break;
            }
        }
    }
    cout << l;
}

"/home/raihan/Desktop/Codeforces/A_Maximise_The_Score.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int test; cin>>test;
    while(test--)
    {
        int n;
        cin>>n;
        int  m=n*2;
        int i,sum=0,arr[m];
        for(i=0;i<m;i++)cin>>arr[i];
        sort(arr,arr+m);
        for(i=0;i<m;i+=2)
        {
            sum=sum+arr[i];
        }
        cout<<sum;
        nl;
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Maximize.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n;
    cin>>n;
    ll mx=0,y;

    Forn(i,n-1)
    {
        ll gcd=__gcd(n,i);
        gcd+=i;
        if(gcd>mx)
        {
            mx=gcd;
            y=i;
        }
    }
    cout<<y;nl;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Array_Craft.cpp"

"/home/raihan/Desktop/Codeforces/B_Array_merging.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin a(n), b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    map<int, pair<vin, vin>> mp;
    int cnt = 1, num = 0, mx = 1;

    for(int i = 0; i < n; i++){
        if(a[i] != num){
            mp[num].first.pb(cnt);
            cnt = 1;
            num = a[i];
            continue;
        }
        cnt++;
        mx = max(mx, cnt);
    }
    mp[num].first.pb(cnt);

    cnt = 1, num = 0, mx = 1;
    for(int i = 0; i < n; i++){
        if(b[i] != num){
            mp[num].se.pb(cnt);
            cnt = 1;
            num = b[i];
            continue;
        }
        cnt++;
    }
    mp[num].se.pb(cnt);


    int ans = 0;
    mp.erase(0);
    for(auto i : mp){
        int x = 0;
        int y = 0;
        if(!i.second.first.empty())x = *max_element(all(i.second.first));
        if(!i.second.second.empty())y = *max_element(all(i.second.second));
        ans = max(ans, x + y);
    }

    cout << ans <<endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Array_Recovery.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n), ans(n);
    forn(i,n)cin >> v[i];
    
    ans[0] = v[0];
    for(int i = 1; i < n; i++){
        int x = ans[i - 1] + v[i];
        int y = ans[i - 1] - v[i];

        if(y >= 0 && v[i] != 0){
            cout<<-1<<endl;
            return;
        }
        ans[i] = x;
    }

    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Atilla_s_Favorite_Problem.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i,max=0;
        cin>>n;
        string str;
        cin>>str;
        for(i=0;i<n;i++)
        {
            if(str[i]>max)max=str[i];
        }
        cout<<max-96<<endl;
    }
}

"/home/raihan/Desktop/Codeforces/B_A_and_B_and_Compilation_Errors.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    multiset<int> a, b;
    forn(i,n){
        lin(x);
        a.insert(x);
    }
    forn(i,n - 1){
        lin(x);
        a.erase(a.find(x));
        b.insert(x);
    }

    print(a);
    forn(i,n - 2){
        lin(x);
        b.erase(b.find(x));
    }
    print(b);
    
    
}

"/home/raihan/Desktop/Codeforces/B_A_Balanced_Problemset.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int x, n;
    cin >> x >> n;
    int ans = 1;
    for(int i = 1; i * i <= x; i++){
        if(x % i == 0){
            if(n <= x / i){
                ans = max(ans, i);
            }
            if(n <= i){
                ans = max(ans, x/ i);
            }
        }
    }

    cout<<ans<<endl;  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_A_BIT_of_a_Construction.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,k,x=1;
    cin>>n>>k;
    if(n==1){cout<<k;nl; return 0;}
    while(x<=k)x*=2;x/=2; x--;k-=x;
    cout<<x<<" "<<k<<" "; n-=2;

    forn(i,n)cout<<"0 ";nl;


    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_B.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int func(char c){
    if(c == 'C')return 1;
    if(c == 'D')return 3;
    if(c == 'E')return 5;
    if(c == 'F')return 6;
    if(c == 'G')return 8;
    if(c == 'A')return 10;
    if(c == 'B')return 12;
}

// 2 4 7 9 11

void sukuna(int test){
    string a, b;
    cin >> a >> b;
    
    int ln = a.back() - '1', rn = b.back() - '1';

    int l = ln * 12 + func(a.front()), r = rn * 12 + func(b.front());
    vin pf(150, 0);
    for(int i = 0; i < 100; i += 12){
        pf[i + 2] = 1;
        pf[i + 4] = 1;
        pf[i + 7] = 1;
        pf[i + 9] = 1;
        pf[i + 11] = 1;
    }
    for(int i = 1; i < 100; i++)pf[i] += pf[i - 1];

    cout << pf[r] - pf[l - 1] << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Balanced_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,sum=0; cin>>n;
    if((n/2)%2==1){no; return 0;}
    yes;

    for(int i=2;i<=n;i+=2)
    {
        sum+=i;
        cout<<i<<" ";
    }
    for(int j=0,i=1;j<n/2-1;i+=2,j++)
    {
        sum-=i;
        cout<<i<<" ";
    }
    cout<<sum;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_BAN_BAN.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int banban()
{
    int n; cin>>n;
    int i=1,j=n*3,m=n/2;

    if(n%2==1)m++;
    cout<<m;nl;

    while(m--)
    {
        cout<<i<<" "<<j;nl;
        i+=3;j-=3;
    }
    return 0;
}
 
int main()
{
    int test; cin>>test;
    while(test--)banban();
    return 0;
}

//Go to sleep

"/home/raihan/Desktop/Codeforces/B_Battle_Cows.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int cnt1(vin v, int k){
    int n = v.size(), cnt = 0;
    for(int i = 0; i < k; i++){
        if(v[i] > v[k]){
            swap(v[i], v[k]);
            k = i;
            break;
        }
    }
    int i = k - 1; if(i < 0)i = 0;
    for(; i < n; i++){
        if(i == k)continue;
        if(v[i] > v[k])break;
        cnt++;
    }

    return cnt;
    
}

int cnt2(vin v, int k){
    int n = v.size(), cnt = 0;
    swap(v[0], v[k]); k = 0;
    
    for(int i = 1; i < n; i++){
        if(v[i] > v[k])break;
        cnt++;
    }

    return cnt;
    
}

void sukuna(){
    int n, k;
    cin >> n >> k; k--;
    vin v(n);
    forn(i,n)cin >> v[i];

    cout<<max(cnt1(v, k), cnt2(v, k))<<endl;

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Battle_for_Survive.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int ans = v[n - 2];
    for(int i = n - 3; i >= 0; i--){
        ans -= v[i];
    }

    cout << v.back()  - ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Beautiful_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;



void sukuna(){
    lin(n);
    vin v(n);
    int ind = -1;
    forn(i,n){
        cin >> v[i];
        if(v[i] == 1)ind = i;
    }

    int cur = 1;
    string ans = "1";
    set<int> s;
    s.insert(1);

    for(int i = ind + 1, j = ind - 1; cur < n;){
        if(j < 0){
            s.insert(v[i]);
            i++;
            cur++;
            if(*--s.end() == cur)ans.push_back('1');
            else ans.push_back('0');
            continue;
        }
        if(i >=n){
            s.insert(v[j]);
            j--;
            cur++;
            if(*--s.end() == cur)ans.push_back('1');
            else ans.push_back('0');
            continue;
        }

        if(v[i] < v[j]){
            s.insert(v[i]);
            i++;
            cur++;
            if(*--s.end() == cur)ans.push_back('1');
            else ans.push_back('0');
            continue;
        }else{
            s.insert(v[j]);
            j--;
            cur++;
            if(*--s.end() == cur)ans.push_back('1');
            else ans.push_back('0');
            continue;
        }
    }

    cout << ans << endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Before_an_Exam.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const int N=1e3;
int v[N][4];

int main()
{
    fast_in_out;
    ll  d,sum,mx=0,mn=0;
    cin>>d>>sum;

    forn(i,d)
    {
        cin>>v[i][0]>>v[i][1];
        mx+=v[i][1]; mn+=v[i][0];

        v[i][2]=v[i][0];      
        sum-=v[i][0];
    }
    
    if(sum+mn>mx or sum<0){no; return 0;}
    else yes;
    
    forn(i,d)
    {
        if((sum+v[i][0])>v[i][1])
        {
            cout<<v[i][1]<<" ";
            sum-=(v[i][1]-v[i][0]);
        }
        else
        {
            cout<<v[i][0]+sum<<" ";
            sum=0;
        }
    }


    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Begginer_s_Zelda.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    map<int, int> mp;
    forn(i,n - 1){
        int x,y;
        cin >> x >> y;
        mp[x]++; 
        mp[y]++;
    }
    int cnt = 0;
    for(auto a : mp){
        if(a.second == 1)cnt++;
    }


    cout<<(cnt + 1) / 2<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Bessie_and_MEX.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


int solve()
{
    lin(n);
    ll mex=0,x,ck=mex+1;
    vin v(n),ans;
    set<int>s;
    forn(i,n)cin>>v[i];

    if(v[0]>=1){cout<<"0 "; mex=1;s.insert(0);}
    else {cout<<0-v[0]<<" "; mex=0; s.insert(-v[0]);}

    for(int i=1;i<n;i++)
    {
        again:
        x=mex-v[i];
        if(s.count(x)==1 || x<0)
        {
            mex++;
            goto again;
        }

        s.insert(x);
        ans.pb(x);

    }
    print(ans);
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Big_Vova.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin a(n), b(n), vis(n);
    forn(i,n)cin >> a[i];

    int d = 0;
    for(int i = 0;i < n; i++){
        int ind = 0;
        int maxi = 0;
        for(int j = 0; j < n; j++){
            if(!vis[j] && __gcd(d, a[j]) > maxi){
                maxi = __gcd(d, a[j]);
                ind = j;
            }
        }
        d = maxi;
        vis[ind] = 1;;
        b[i] = a[ind];
    }
    for(auto i : b){
        cout<<i<<" ";
    }nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Binary_Cafe.c"

"/home/raihan/Desktop/Codeforces/B_Binary_Cafe.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n,k, b =1,ans =1;
    cin>>n>>k;
 
    vector<int>v;
    set<int>s;
    for(int i=0 ;i<k && b<1e10;i++)
    {
        v.pb(b);
        s.insert(b);
        b<<=1;
    }
    s.insert(b);
 
    int dcnt=0,cnt =0, m =n;
    for(int i=0;i<v.size();i++)
    {
        if(v[i]<=n)dcnt++;
        else break;
    }
 
    for(int i = 0;i<v.size();i++)
    {
        if(v[i]<=m)
        {
            cnt++;
            m-=v[i];
        }
        else break;
    }
 
 
    ans += pow(2,cnt)-1+(dcnt-cnt);
    
    if(s.count(ans))cout<<ans;
    else cout<<n+1;nl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Remove_Two_Letters.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int ans = n - 1;

    for(int i = 0; i < n - 2; i++){
        if(str[i] == str[i + 2])ans--;
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Right_Left_Wrong.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    vector<pr> p;
    string str;
    cin >> str;
    int ans = 0;

    for(int i = 0, j = n - 1; i < j;){
        while(str[i] != 'L' && i < n)i++;
        while(str[j] != 'R' && j >= 0)j--;
        if(i < j)p.push_back({i, j}),i++, j--;
        else break;
    }
    vin pf(n + 1);
    
    for(auto a : p){
        pf[a.first]++;
        pf[a.second + 1]--;
    }
    for(int i = 1; i < n; i++){
        pf[i] += pf[i - 1];
    }

    for(int i = 0; i < n; i++){
        ans += pf[i] * v[i];
    }
    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Robert_Hood_and_Mrs_Hood.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, d, k;
    cin >> n >> d >> k;
    vin hash(n + 5);
    map<int, int> mp;
    while(k--){
        int l, r;
        cin >> l >> r;
        hash[l]++;
        hash[r + 1]--;
    }
    for(int i = 1; i <= n; i++){
        hash[i] += hash[i - 1];
    }
    print(hash);

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Round_Subset.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define mn(p)              min(p.first, p.second)
#define mx(p)              max(p.first, p.second)

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 50 + 1;

int n;
vector<pr> v;

int dp[N][N][N];

int recur(int i, int k, int f){

    if(i >= n)return 0;
    if(k == 0)return 0;
    if(dp[i][k][f] != -1)return dp[i][k][f];

    int a = recur(i + 1, k, f);
    int b = recur(i + 1, k - 1, f + v[i].second) + v[i].first;

    return dp[i][k][f] = max(a, b);
}

void sukuna(int test){
    memset(dp, -1, sizeof(dp));

    int k;
    cin >> n >> k;
    
    for(int i = 0; i < n; i++){
        lin(x);
        int two = 0, five = 0;
        while(x % 2 == 0){
            x /= 2;
            two++;
        }
        while(x % 5 == 0){
            x /= 5;
            five++;
        }
        v.push_back({two, five});
    }

    int ans = 0;
    cout << recur(0, k, 0) << endl;
    for(int i = 0; i <= n; i++){
        for(int j = 0; j < 26 * n; j++){
            ans = max(ans, min(j, dp[i][0][j]));
        }
    }
    cout << ans << endl;


}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Rudolph_and_Christmas_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, d, h ;
    cin >> n >> d >> h;

    vin v(n);
    forn(i,n)cin >> v[i];

    double area =(double) 0.5 * d * h, ans = 0;
    double ratio = (double) d / h;

    for(int i = 0; i < n - 1; i++){
        if(v[i] + h >= v[i + 1]){
            double height = v[i] + h - v[i + 1];
            double width = ratio * height;
            ans += (area - 0.5 * height * width);
        }else{
            ans += area;
        }
    }
    ans += area;

    cout<<fixed<<setprecision(6)<<ans<<endl; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Sakurako_s_Hobby.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string str;
bool vis[N];
vin c, graph;
int cnt = 0;

void dfs(int v){
    if(vis[v])return;
    vis[v] = true;
    c.pb(v);
    if(str[v] == '0')cnt++;
    dfs(graph[v]);
}

void sukuna(){
    lin(n);
    vin v(n + 1), ans(n + 1);
    Forn(i,n){
        cin >> v[i];
        vis[i] = 0;
    }
    graph = v;
    
    string s; str = "*";
    cin >> s; str += s;

    for(int i = 1; i <= n; i++){
        if(vis[i])continue;
        cnt = 0;
        c.clear();
        dfs(i);
        for(auto a : c)ans[a] = cnt;
    }

    Forn(i,n)cout<<ans[i]<<' ';nl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Same_Difference.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,x,cnt=0;
    cin>>n;
    map<int,int>m;
    forn(i,n)
    {
        cin>>x; x-=i;
        cnt+=m[x];
        m[x]++;
    }
    cout<<cnt;nl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Same_Differences.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

ll sumation(ll n)
{
    ll sum=n*(n+1)/2;
    return sum;
}

int solve()
{
    ll n,cnt=0,x; cin>>n;
    vector<ll>v(n),cn((n-1)*2+1);
    forn(i,n)
    {
        cin>>x;
        v[i]=(x-1-i);
        cn[v[i]+(n-1)]++;
    }
    forn(i,cn.size())if(cn[i]>1)cnt+=sumation((cn[i]-1));

    cout<<cnt;nl;   
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Satyam_and_Counting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    map<int, int> mp;
    set<int> u, s;
    forn(i,n){
        int x, y;
        cin >> x >> y;
        if(y)u.insert(x);
        else s.insert(x);
        mp[x]++;
    }
    int cnt = 0;
    for(auto i : mp){
        if(i.second > 1)cnt++;
    }

    int ans = cnt * (n - 2);

    for(auto i : s){
        if(s.count(i + 2) == 0)continue;
        if(u.count(i + 1))ans++;
    }

    for(auto i :u){
        if(u.count(i + 2) == 0)continue;
        if(s.count(i + 1))ans++;
    }
    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Secret_Passwords.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<string> v(n);
    forn(i,n)cin >> v[i];

    sort(all(v));

    vector<set<char>> graph;
    v.push_back("**");
    for(int i = 0; i < n;){
        char ch = v[i].front();
        set<char> temp;
        while(ch == v[i].front()){
            for(auto c : v[i]){
                temp.insert(c);
            }
            i++;
        }    

        graph.push_back(temp);
    }


    n = graph.size();
    for(int i = 0; i < n; i++){
        if(graph[i].empty())continue;
        for(int j = 0; j < n; j++){
            if(i == j)continue;
            bool flg = false;
            for(auto c : graph[j]){
                if(graph[i].count(c)){
                    flg = true;
                    break;
                }
            }
            if(!flg)continue;
            for(auto c : graph[j]){
                graph[i].insert(c);
            }
            graph[j].clear();
        }
    }

    n = graph.size();
    for(auto i : graph){
        if(i.empty())n--;
    }
    cout << n << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Seraphim_the_Owl.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m, ans = 0, sum = 0;
    cin >> n >> m;
    vin a(n), b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i]; b.push_back(0);

    for(int i = n - 1; i > m - 1; i--){
        sum += min(a[i], b[i]);
    }
    b[m] = 0;

    int sec = 0, mn = INT_MAX;
    for(int i = m - 1, j = m; i >= 0; i--, j--){
        sec += b[j];
        mn = min(mn, sec + a[i]);
    }

    cout<<mn + sum <<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Sharky_Surfing.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;



void sukuna(int test){
    int n, m, L;
    cin >> n >> m >> L;
    vin v;
    set<pr> s;
    vector<pr> vec;
    forn(i,n){
        int x, y;
        cin >> x >> y;
        s.insert({x, y});
    }
    forn(i,m){
        int x, y;
        cin >> x >> y;
        vec.push_back({x, y});
    }
    sort(all(vec), [](pr a, pr b){
        if(a.first < b.first)return true;
        if(a.first == b.first)return a.second > b.second;
        return false;
    });
    
    int i = 0;
    for(auto j : s){
        
        while(vec[i].first < j.first and i < m){
            v.push_back(vec[i++].second);
        }
        v.push_back(-(j.second - j.first + 1));
    }


    multiset<int> st;
    n = v.size();
    int sum = 0, ans = 0;

    for(int i = 0; i < n; i++){
        if(v[i] >= 0){
            st.insert(v[i]);
            continue;
        }

        if(sum >= abs(v[i]))continue;
        vin toRemove;

        for(auto it = st.rbegin(); it != st.rend(); it++){
            sum += *it;
            toRemove.push_back(*it);
            ans++;
            if(sum >= abs(v[i]))break;
        }

        for(auto i : toRemove){
            st.erase(st.find(i));
        }

        if(sum < abs(v[i])){
            cout << -1 << endl;
            return;
        }
    }

    cout << ans << endl;

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Shortest_and_Longest_LIS.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;

    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Slavic_s_Exam.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    string s, t;
    cin >> s >> t;
    int n = s.size(), m = t.size(), j = 0;

    for(int i = 0; i < n && j < m; i++){
        if(s[i] == t[j])j++;
        else if(s[i] == '?')s[i] = t[j], j++;
    }
    for(int i = 0; i < n; i++){
        if(s[i] == '?')s[i] = 'x';
    }

    if(j == (m )){
        yes;
        cout<<s<<endl;
    }else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Solve_The_Maze.cpp"
#include<bits/stdc++.h>
using namespace std;

#define yes     cout << "Yes\n"
#define no      cout << "No\n"

const int N = 55;
int n, m;
vector<string> graph;
int vis[N][N];
vector<pair<int, int>> movements = {
    {1, 0}, {0, 1}, {-1, 0}, {0, -1}
};

bool isValid(int x, int y){
    return x < n && x >= 0 && y < m && y >= 0;
}

bool goodGuy(int x, int y){
    queue<pair<int, int>> q;
    q.push({x, y});

    while(!q.empty()){
        x = q.front().first;
        y = q.front().second;
        q.pop();

        for(auto mv : movements){
            int childx = x + mv.first;
            int childy = y + mv.second;

            if(!isValid(childx, childy))continue;
            if(graph[childx][childy] == '#' || graph[childx][childy] == 'B')continue;
            if(vis[childx][childy])continue;
            vis[childx][childy] = true;
            q.push({childx, childy});
        }
    }
    return vis[n - 1][m - 1];    
}


void badGuy(int x, int y){

    vis[x][y] = true;
    for(auto mv : movements){
        int childx = x + mv.first;
        int childy = y + mv.second;

        if(!isValid(childx, childy))continue;
        if(graph[childx][childy] != '.')continue;
        if(vis[childx][childy])continue;
        vis[childx][childy] = true;
        graph[childx][childy] = '#';
    }
}

void reset(){
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            vis[i][j] = 0;
        }
    }
}

bool chk(int x, int y){
    for(auto mv : movements){
        int childx = x + mv.first;
        int childy = y + mv.second;
        if(!isValid(childx, childy))continue;
        if(graph[childx][childy] == 'G')return true;
    }
    return false;
}

void solve(){
    graph.clear();
    reset();
    cin >> n >> m;
    for(int i = 0; i < n; i++){
        string temp;
        cin >> temp;
        graph.push_back(temp);
    }

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(graph[i][j] == 'B'){
                if(chk(i, j)){
                    no;
                    return;
                }
                badGuy(i, j);
            }
        }
    }

    reset();

    for(int i = 0; i < n; i++){
        bool bk = 0;
        for(int j = 0; j < m; j++){
            if(graph[i][j] == 'G'){
                bk = 1;
                if(!goodGuy(i, j)){
                    no;
                    return;
                }else{
                    break;
                }
            }
        }
        if(bk)break;
    }

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(graph[i][j] == 'G'){
                if(vis[i][j] == 0){
                    no;
                    return;
                }
            }
        }
    }



    yes;
}

int32_t main(){
    int test;
    cin >> test;

    while(test--){
        solve();
    }
    
}

"/home/raihan/Desktop/Codeforces/C_Trailing_Loves_or_L_oeufs.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


//Initialize first Factors::init();
namespace Factors{
    #define int long long
    mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
    const int N = 1e6 + 100;
    bool isPrime[N]; int hp[N];
    vector<int> primes;

    void init(){
        memset(isPrime, 1, sizeof(isPrime));
        isPrime[0] = isPrime[1] = 0;

        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                hp[i] = i;
                for(int j = i + i; j < N; j += i){
                    isPrime[j] = 0;
                    hp[j] = i;
                }
            }
        }
        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                primes.push_back(i);
            }
        }
    }
    
    int binExp(int a, int b, int M = 1e9 + 7){
        int ans = 1;    a %= M; b %= M;
        
        while(b > 0){
            if(b & 1)ans = ((__uint128_t)(ans % M) * (a % M)) % M;
            b >>= 1;
            a = ((__uint128_t)(a % M) * (a % M)) % M;
        }
        return ans;
    }

    //Miller Rabin primality test
    bool is_composite(int n, int a, int d, int p){
        int x = binExp(a, d, n);
        if(x == 1 or x == n - 1)return false;
    
        for(int i = 0; i < p - 1; i++){
            x = (__uint128_t)x * x % n;
            if(x == n - 1)return false;
        }
    
        return true;
    }
    
    bool miller_rabin(int n, int iter = 5){
        if(n < 4)return n == 2 || n == 3;
        
        int p = 0, d = n - 1;
        while((d & 1) == 0){
            d >>= 1;
            p++;
        }
    
        for(int i = 0; i < iter; i++){
            int a = 2 + rnd() % (n - 3);
            if(is_composite(n, a, d, p))return false;
        }
    
        return true;
    }
    
    //Pollard rho
    int func(int x, int c, int mod){
        return ((__uint128_t) x * x % mod + c) % mod;
    }    

    int rho(int n){
        int c = 1 + rnd() % (n - 2);
        int x =  2 + rnd() % (n - 2);
        int y = x, d = 1;

        while(d == 1){
            x = func(x, c, n);
            y = func(func(y, c, n), c, n);
            d = __gcd(abs(x - y), n);
        }
        return d;
    }

    vector<int> factorize(int n){
        if(n == 1)return {1};
        if(miller_rabin(n))return {n};
        vector<int> factors, temp;
        
        if(n < N){
            while(n > 1){
                int pm = hp[n];
                while(n % pm == 0){
                    factors.push_back(pm);
                    n /= pm;
                }
            }
            return factors;
        }

        int x = rho(n);
        factors = factorize(x);
        temp = factorize(n / x);
        factors.insert(factors.end(), temp.begin(), temp.end());
        return factors;
    }
}

int counter(int pm, int n){
    int cnt = 0;
    int k = pm;

    while(n / k != 0){
        cnt += (n / k);
        if((__uint128_t) k * pm > n)break;
        k = k * pm;
    }
    return cnt;
}

void sukuna(int test){
    int n, b;
    cin >> n >> b;

    Factors::init();
    map<int, int> pms;
    for(auto i : Factors::factorize(b))pms[i]++;
    int ans = INF;

    for(auto [x, y] : pms){
        int cnt = counter(x, n);
        cnt /= y;
        ans = min(ans, cnt);
    }   

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1; //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Training_Before_the_Olympiad.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n), ans, pf(n);
    forn(i,n)cin >> v[i];
    pf[0] = v[0];

    for(int i = 1; i < n; i++)pf[i] = pf[i - 1] + v[i];

    int odd = 0, i;
    ans.push_back(v[0]);
    if(v[0] & 1)odd++;

    for(i = 1; i < n; i++){
        if(v[i] & 1)odd++;
        if(odd & 1){
            ans.push_back(pf[i] - 1);
        }else{
            ans.push_back(pf[i]);
        }

        if(odd == 2)break;
    }i++;

    for(; i < n; i++){
        if(v[i] & 1)odd++;
        
        if(odd % 3 == 1){
            ans.push_back(pf[i] - (odd / 3) - 1);
        }else{
            ans.push_back(pf[i] - odd / 3);
        }

    }

    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Trapped_in_the_Witch_s_Labyrinth.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e3 + 100;

int n, m;
vector<string> v;
map<char, pr> moves;
vector<vector<short>> dp, vis;

bool isValid(int x, int y){
    return x >= 0 and x < n and y >= 0 and y < m;
}

bool recur(int x, int y){
    if(!isValid(x, y))return false;
    if(v[x][y] == '?')return dp[x][y] = true;
    if(dp[x][y] != -1)return dp[x][y];
    if(vis[x][y])return dp[x][y];

    vis[x][y] = 1;
    pr mv = moves[v[x][y]];
    bool ans = recur(x + mv.first, y + mv.second);
    return dp[x][y] = ans;
}

void reset(){
    v.clear();
    for(int i = 0; i <= n; i++){
        for(int j = 0; j <= m; j++){
            dp[i][j] = -1;
        }
    }
}

void sukuna(int test){
    int ans = 0;
    v.clear();
    cin >> n >> m;
    dp = vector<vector<short>> (n + 10, vector<short>(m + 10, -1));
    vis = vector<vector<short>> (n + 10, vector<short>(m + 10, 0));
    
    forn(i,n){
        string str;
        cin >> str;
        v.push_back(str);
    }


    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(v[i][j] == '?')continue;
            recur(i, j);
        }
    }

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(v[i][j] == '?')
            for(auto p : moves){
                pr prr = p.second;
                int x = i + prr.first, y = j + prr.second;
                if(!isValid(x, y))continue;
               
                if(v[x][y] == '?'){dp[i][j] = 1; break;}
                if(dp[x][y] == 1){dp[i][j] = 1;break;}
            }
        }
    }

    forn(i,n)forn(j,m)if(dp[i][j] == 1)ans++;

    cout << ans << endl;    
}

int32_t main(){
    fast_in_out;
    moves['U'] = {-1, 0};
    moves['D'] = {1, 0};
    moves['L'] = {0, -1};
    moves['R'] = {0, 1};


    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Trinity.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    
    int ans1 = 0, mx = v.back();
    for(int i = 0; i < n; i++){
        int up = upper_bound(all(v), mx - v[i]) - v.begin();
        if(up > i and up != i + 1)ans1++;
    }
    cout << ans1 << endl;

    int ans2 = 0, mn = v.front();
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Turtle_and_Good_Pairs.c"
#include <stdio.h>

#define MAX_SIZE 100000

int t;

void solve()
{
    long long n, m, k;
    scanf("%lld %lld %lld", &n, &m, &k);

    long long ans[MAX_SIZE];
    int index = 0;

    for (long long i = n; i > m; i--)
    {
        ans[index++] = i;
    }


    for (long long i = 1; i <= m; i++)
    {
        ans[index++] = i;
    }

    for (int i = 0; i < index; i++)
    {
        printf("%lld ", ans[i]);
    }

    printf("\n");
}

int main()
{
    scanf("%d", &t);

    while (t--)
    {
        solve();
    }

    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Turtle_and_Good_Pairs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    map<char, int> mp;
    for(auto i : str)mp[i]++;

    string ans;
    while(1){
        bool ck = 1;
        for(auto &i : mp){
            if(i.second > 0){
                cout<<i.first;
                i.second--;
                ck = 0;
            }
        }
        if(ck)break;
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Turtle_Fingers_Count_the_Values_of_k.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int maxpow(ll x,ll l)
{
    int i;
    for(i=0;;i++)
    {
        if(pow(x,i)>=l)break;
    }
    return i;
}

int WTF()
{
    ll a,b,l,F;
    cin>>a>>b>>l;
    ll i,j,k;

    int ix=maxpow(a,l),jx=maxpow(b,l);
    int cnt=0;
    vector<ll>arr;
    
    for(i=0;i<=ix;i++)
    {
        for(j=0;j<=jx;j++)
        {
            F=(pow(a,i)*pow(b,j));
            if(l%F==0)
            {
                arr.pb(l/F);
                cnt++;
            }
        }
    }
    sort(arr.begin(),arr.end());

    for(i=0;i<arr.size()-1;i++)
    {
        for(j=i+1;j<arr.size();j++)
        {
            if(arr[i]==arr[j])cnt--;
            else break;
        }
        i=j-1;
    }
    cout<<cnt;nl;
    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        WTF();

    }
    return 0;
}


//Enjoy

"/home/raihan/Desktop/Codeforces/C_Two_Movies.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    lin(n);
    int ans = 0;
    vin a(n), b(n), company(n);
    forn(i,n)cin>>a[i];
    forn(i,n)cin>>b[i];

    for(int i = 0; i < n; i++){
        company[i] = min(a[i], b[i]);
        // ans += company[i];
    }
    for(int i = 0; i < n; i++){
        int c = max(a[i], b[i]);
        if(c == company[i])continue;
        ans += c;        
    }
    cout<<ans<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Unequal_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int i = 0, j = n - 1;

    for(; i < j; i++){
        if(v[i] == v[i + 1])break;
    }
    for(; j > 0; j--){
        if(v[j] == v[j - 1])break;
    }
    int dif = j - i;

    int ans = max(0ll, dif - 2);
    if(dif >= 2)ans = max(1ll, ans);

    cout<<ans<<endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Uninteresting_Number.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str;
    cin >> str;
    int n = str.size();

    int two = 0, three = 0, digit_sum = 0;
    for(int i = 0; i < n; i++){
        if(str[i] == '3'){
            three++; 
        }
        if(str[i] == '2'){
            two++; 
        }

        digit_sum += (str[i] - '0');
        digit_sum %= 9;
    }

    if(digit_sum % 9 == 0){yes; return;}
    int need;

    if(digit_sum & 1){
        need = 9 - digit_sum;
    }else{
        need = 18 - digit_sum;
    }


    int temp = need;
    for(int i = 0; i < three; i++){
        temp -= 6;
        if(temp < 0)break;
        if(temp == 0){yes; return;}
        if(temp /2 <= two){yes; return;}
    }

     temp = need;
    for(int i = 0; i < two; i++){
        temp -= 2;
        if(temp < 0)break;
        if(temp == 0){yes; return;}
        if(temp % 6 == 0 and temp / 6 <= three){yes; return;}
    }
    no;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Unique_Number.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    int n;
    cin>>n;
    while(n --){
        int x;
        cin>>x;
        if(x  > 45){
            cout<<-1<<"\n";
            continue;
        }
        string str;
        for(int i = 9; i > 0; i--){
            if(x >= i){
                str.push_back('0' + i);
                x -= i;
            }
        }

        for(int i = str.size() - 1; i >= 0; i--)
            cout<<str[i];
        cout<<"\n";
    }
    
}

"/home/raihan/Desktop/Codeforces/C_Update_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    int n, m;
    cin>>n>>m;
    set<int> v;
    string s, c;
    cin>>s;
    forn(i,m){
        lin(x);
        v.insert(x);
    }
    cin>>c;
    sort(all(c));

    for(int i = v.size(); i < m; i++){
        c.pop_back();
    }
    // print(v);
    // cout<<c<<endl;
    int i = 0;
    for(auto a : v){
        s[a - 1] = c[i];
        i++;
    }
    cout<<s<<endl;



    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Vasya_and_Golden_Ticket.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v;

bool chk(int x){
    int sum = 0;
    for(int i = 0; i < v.size(); i++){
        sum += v[i];
        if(sum == x){
            sum = 0;
        }
        if(sum > x)return false;
    }

    return sum == 0;
}


int32_t main(){
    fast_in_out;
    lin(n);
    string str;
    cin >> str;
    forn(i,n){
        v.push_back(str[i] - 48);
    }

    int sum = accumulate(all(v), 0ll);
    if(sum == 0){
        yes;
        return 0;
    }
    for(int i = 1; i < sum; i++){
        if(chk(i)){
            yes;
            return 0;
        }
    }
    no;
    
}

"/home/raihan/Desktop/Codeforces/C_Vasya_and_Multisets.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n;
    cin >> n;
    vin v;
    map<int, int> mp;
    bool flg = 0;
    forn(i,n){
        lin(x);
        v.push_back(x);
        mp[x]++;
        if(mp[x] > 2)flg = 1;
    }

    int dist = 0;
    int extra = 0;
    for(auto i : mp){
        if(i.second == 1)dist++;
        if(i.second > 2)extra = i.first;
    }

    if(dist & 1 and flg == false){no; return;}
    yes;

    if(dist == 0){
        forn(i,n)cout << 'A';nl;
        return;
    }

    int half = dist / 2;
    if(dist % 2 == 0){
        forn(i,n){
            if(mp[v[i]] > 1){
                cout << 'A';
                continue;
            }
            if(half > 0)cout << 'A';
            else cout << 'B';
            half--;
        }nl;
        return;
    }


    for(int i = 0; i < n; i++){
        if(flg and v[i] == extra){
            flg = false;
            cout << 'A';
            continue;
        }    
        if(mp[v[i]] > 1){
            cout << 'B';
            continue;
        }
        if(half > 0)cout << 'A';
        else cout << 'B';
        half--;
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Virus.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    vin v(m);
    forn(i,m)cin >> v[i];
    sort(all(v));
    vin d; 
    d.push_back((v.front() - 1) + (n - v.back()));

    for(int i = 1; i < m; i++){
        d.push_back(v[i] - v[i - 1] - 1);
    }
    sort(all(d),greater<>());
    int ans = 0, cnt = 0;

    for(auto a : d){
        a -= cnt;
        if(a == 1)ans++, cnt+= 2;
        else ans += max(a - 1, 0ll), cnt += 4;
    }

    cout<<n - ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/H_1_Maximize_the_Largest_Component_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;


class solution{
    private:
        const int N = 1e3 + 10;
        int n, m, cnt = 0, mark = 0;

        vector<string> graph;
        vector<vector<int>> vis;
        vector<vector<pair<int, int>>> val;
        vector<pair<int, int>> trace;
        vector<pair<int, int>> movements = {
            {0, 1},{1, 0}, {0, -1}, {-1, 0}
        }, dx ={ {0, 1}, {0, -1}}, dy = {{1, 0}, {-1, 0}};
        
        bool isValid(int x, int y){
            return x >= 0 && x < n && y >= 0 && y < m;
        }


        void dfs(int x, int y){
            if(vis[x][y])return;
            vis[x][y] = true;
            trace.push_back({x,  y});
            cnt++;

            for(auto mv : movements){
                int childx = x + mv.first;
                int childy = y + mv.second;

                if(!isValid(childx, childy))continue;
                if(graph[childx][childy] == '.')continue;
                if(vis[childx][childy])continue;

                dfs(childx, childy);
            }
        }

        void pdfs(int x, int y){
            if(vis[x][y])return;
            if(graph[x][y] == '.')return;
            cnt = 0;
            trace.clear();
            mark++;
            dfs(x, y);

            for(auto i : trace){
                val[i.first][i.second].first = cnt;
                val[i.first][i.second].second = mark;
            }
        }

        int rowOp(int i){
            set<int> marks;
            int ans = 0;
            for(int j = 0; j < m; j++){
                if(graph[i][j] == '.')ans++;
                else{
                    if(marks.count(val[i][j].second) == 0){
                        marks.insert(val[i][j].second);
                        ans += val[i][j].first;
                    }
                }
                for(auto mv : dy){
                    int x = i + mv.first;
                    int y = j + mv.second;
                    if(!isValid(x, y))continue;
                    if(marks.count(val[x][y].second))continue;
                    marks.insert(val[x][y].second);
                    ans += val[x][y].first;   
                }
            }
            return ans;
        }


        int colOp(int j){
            set<int> marks;
            int ans = 0;
            for(int i = 0; i < n; i++){
                if(graph[i][j] == '.')ans++;
                else{
                    if(marks.count(val[i][j].second) == 0){
                        marks.insert(val[i][j].second);
                        ans += val[i][j].first;
                    }
                }
                for(auto mv : dx){
                    int x = i + mv.first;
                    int y = j + mv.second;
                    if(!isValid(x, y))continue;
                    if(marks.count(val[x][y].second))continue;
                    marks.insert(val[x][y].second);
                    ans += val[x][y].first; 
                }
            }
            return ans;
        }
    public:
        void ok(){
            cnt = 0; mark = 0;
            cin >> n >> m;
            
            vector<vector<int>> temp(n + 1, vector<int>(m + 1));
            vector<vector<pair<int, int>>> temp_val(n + 1, vector<pair<int, int>> (m + 1));

            vis = temp; val = temp_val;    
            vector<string> v(n);
            for(int i = 0; i < n; i++)cin >> v[i];
            graph = v;

            for(int i = 0; i < n; i++){
                for(int j = 0; j < m; j++){
                    pdfs(i, j);
                }
            }

            int ans = 0;
            for(int i = 0; i < n; i++){
                ans = max(ans, rowOp(i));
            }

            for(int i = 0; i < m; i++){
                ans = max(ans, colOp(i));
            }

            cout << ans <<endl;
        }

};

int main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int test;
    cin >> test;
    while(test--){
        solution done;
        done.ok();
    }
}

"/home/raihan/Desktop/Codeforces/H_2_Maximize_the_Largest_Component_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

const int N = 1e3 + 10;
int n, m, cnt = 0, mark = 0;

vector<string> graph;
vector<vector<int>> vis;
vector<vector<pair<int, int>>> val;
vector<pair<int, int>> trace;
vector<pair<int, int>> movements = {
    {0, 1},{1, 0}, {0, -1}, {-1, 0}
}, dx ={ {0, 1}, {0, -1}}, dy = {{1, 0}, {-1, 0}};

bool isValid(int x, int y){
    return x >= 0 && x < n && y >= 0 && y < m;
}


void dfs(int x, int y){
    if(vis[x][y])return;
    vis[x][y] = true;
    trace.push_back({x,  y});
    cnt++;

    for(auto mv : movements){
        int childx = x + mv.first;
        int childy = y + mv.second;

        if(!isValid(childx, childy))continue;
        if(graph[childx][childy] == '.')continue;
        if(vis[childx][childy])continue;

        dfs(childx, childy);
    }
}

void pdfs(int x, int y){
    if(vis[x][y])return;
    if(graph[x][y] == '.')return;
    cnt = 0;
    trace.clear();
    mark++;
    dfs(x, y);

    for(auto i : trace){
        val[i.first][i.second].first = cnt;
        val[i.first][i.second].second = mark;
    }
}

int rowOp(int i){
    set<int> marks;
    int ans = 0;
    for(int j = 0; j < m; j++){
        if(graph[i][j] == '.')ans++;
        else{
            if(marks.count(val[i][j].second) == 0){
                marks.insert(val[i][j].second);
                ans += val[i][j].first;
            }
        }
        for(auto mv : dy){
            int x = i + mv.first;
            int y = j + mv.second;
            if(!isValid(x, y))continue;
            if(marks.count(val[x][y].second))continue;
            marks.insert(val[x][y].second);
            ans += val[x][y].first;   
        }
    }
    return ans;
}


int colOp(int j){
    set<int> marks;
    int ans = 0;
    for(int i = 0; i < n; i++){
        if(graph[i][j] == '.')ans++;
        else{
            if(marks.count(val[i][j].second) == 0){
                marks.insert(val[i][j].second);
                ans += val[i][j].first;
            }
        }
        for(auto mv : dx){
            int x = i + mv.first;
            int y = j + mv.second;
            if(!isValid(x, y))continue;
            if(marks.count(val[x][y].second))continue;
            marks.insert(val[x][y].second);
            ans += val[x][y].first; 
        }
    }
    return ans;
}

void stratDfs(){
    cnt = 0; mark = 0;
    vector<vector<int>> temp(n + 1, vector<int>(m + 1));
    vector<vector<pair<int, int>>> temp_val(n + 1, vector<pair<int, int>> (m + 1));
    vis = temp; val = temp_val; 

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            pdfs(i, j);
        }
    }
}

int calculateAns(bool flg){
    int ans = 0;
    if(flg)
    for(int i = 0; i < n; i++){
        ans = max(ans, rowOp(i));
    }

    else
    for(int i = 0; i < m; i++){
        ans = max(ans, colOp(i));
    }

    return ans;
}

void solve(){
    cnt = 0; mark = 0;
    cin >> n >> m;
    vector<string> v(n);
    for(int i = 0; i < n; i++)cin >> v[i];
    graph = v;
    
    vector<vector<int>> temp(n + 1, vector<int>(m + 1));
    vector<vector<pair<int, int>>> temp_val(n + 1, vector<pair<int, int>> (m + 1));
    vis = temp; val = temp_val;    

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            pdfs(i, j);
        }
    }

    int ans = 0, indx = 0, indy = 0;
    for(int i = 0; i < n; i++){
        int sum = rowOp(i);
        if(sum > ans){
            ans = sum;
            indx = i;
        }
    }
    ans = 0;
    for(int i = 0; i < m; i++){
        int sum = colOp(i);
        if(sum > ans){
            ans = sum;
            indy = i;
        }
    }

    // cout <<indx <<' ' << indy <<endl;

    ans = 0;
    for(int i = 0; i < m; i++){
        graph[indx][i] = '#';
    }
    stratDfs();
    ans = calculateAns(0);

    for(int i = 0; i < n; i++){
        cout << graph[i] <<endl;
    }
    cout << endl <<endl;


    graph = v;
    for(int i = 0; i < n; i++){
        graph[i][indy] = '#';
    }
    stratDfs();
    ans = max(ans, calculateAns(1));

    for(int i = 0; i < n; i++){
        cout << graph[i] <<endl;
    }
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            cout << val[i][j].first <<" ";
        }
        cout << endl;
    }

    cout << ans <<endl;

    cout << ans <<endl;

}

int main(){
    int test;
    cin >> test;
    while(test--)solve();
}

"/home/raihan/Desktop/Codeforces/H_Beppa_and_SwerChat.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

bool func(vin b, vin a, int x){
    int n = a.size(), cnt = 0;
    for(int i = 0, j = n - x; i < n && j < n; i++){
        if(a[i] == b[j]){
            cnt++; 
            j++;
        }
    }
    if(cnt >= x)return true;
    return false;
}


void sukuna(){
    lin(n);
    vin a(n), b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    int lo = 0, hi = n, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(func(b, a, mid)){
            lo = mid + 1;
        }else hi = mid;
    }

    if(func(b, a, lo) == 0)lo--;
    
    cout<<n - lo<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/H_BerOS_File_Suggestion.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


set<string> func(string str){
    set<string> ans;
    int n = str.size();

    for(int i = 0; i < n; i++){
        string temp;
        for(int j = i; j < n; j++){
            temp.push_back(str[j]);
            ans.insert(temp);
        }
    }

    return ans;
}


void sukuna(int test){
    int n;
    cin >> n;
    vector<string> v(n);
    forn(i,n)cin >> v[i];

    map<string, unordered_set<int>> mp;
    forn(i,n){
        for(auto j : func(v[i])){
            mp[j].insert(i);
        }
    }


    lin(q);
    while(q--){
        string str;
        cin >> str;
        int sz = mp[str].size();
        cout << sz <<" ";
        if(sz == 0)cout << '-' << endl;
        else cout << v[*mp[str].begin()] << endl;
    }
    
}

int32_t main(){

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/H_Delete_Them.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"Yes\n"
#define no                 cout<<"No\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m;

vector<string> toRemove;
vector<string> col;
vector<string> patterns;
vector<string> anss;

vector<string> func(){
    int n = toRemove.front().size();
    string temp;


    for(int i = 0; i < n; i++){
        bool flg = false;
        temp.push_back(toRemove.front()[i]);
        for(auto str : toRemove){
            if(str[i] != temp.back()){
                flg = true;
                temp.pop_back();
                break;
            }
        }
        if(flg && temp.size() > 0){
            patterns.push_back(temp);
            temp.clear();        
        }
    }
    if(temp.size() > 0){
        patterns.push_back(temp);
    }

    temp = toRemove.front();
    for(auto str : patterns){
        string ans = temp;
        for(int i = 0, j = 0; i < n; i++){
            if(temp[i] != str[j]){
                ans[i] = '?';
                continue;
            }
            j++;
        }
        anss.push_back(ans);
    }
    return patterns;
}

int32_t main(){
    fast_in_out;
    cin >> n >> m;
    vector<string> str(n);
    forn(i,n)cin >> str[i];
    vin v(m);

    set<int> s;

    forn(i,m){
        cin >> v[i];
        toRemove.push_back(str[--v[i]]);
        s.insert(v[i]);
    }
    int sz = toRemove.front().size();


    for(auto i : toRemove){
        if(i.size() != sz){
            no;
            return 0;
        }
    }    

    if(n == m){
        yes;
        for(int i = 0; i < str[0].size(); i++){
            cout <<'?';
        }
        nl;
        return 0;
    }
    
    for(int i = 0; i < n; i++){
        if(s.count(i))continue;
        if(str[i].size() == sz){
            col.push_back(str[i]);
        }
    }

    func();

    for(auto str : anss){
        int cnt = 0;
        for(auto cl : col){
            bool flg = true;
            for(int i = 0; i < sz; i++){
                if(str[i] == '?')continue;
                if(str[i] != cl[i]){
                    flg = false;
                    break;
                }
            }
            if(flg)cnt++;
        }
        if(cnt)continue;
        yes;
        cout << str << endl;
        return 0;
    }
    no;

    
}

"/home/raihan/Desktop/Codeforces/H_Missing_Separators.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 5e3 + 100;

int n;
string str;
vector<vin> dp;
vin track(N);

int recur(int ind, int cnt = 1){

    if(ind >= n)return 0;

    int ans = 0, pos = ind;

    for(int i = ind + 1; i < n; i++){
        if(str[i] < str[ind])continue;
        if(str[i] > str[ind]){
            int temp = recur(i, 1);
            if(temp > ans){
                ans = temp;
                pos = i;
            }
            continue;
        }

        int n_cnt = 0;
        for(; i < n; i++){
            if(str[i] != str[ind])continue;
            n_cnt++;
            if(n_cnt > cnt){break;}
        }

        if(n_cnt <= cnt)continue;
        
        int temp = recur(i, n_cnt);
        if(temp > ans){
            ans = temp;
            pos = i;
        }
    }

    track[pos] = 1;
    return ans + 1;
}

void sukuna(int test){
    cin >> str;
    n = str.size();

    cout << recur(0, 1) << endl;
    for(int i = 0; i < n; i++){
        cout << track[i] <<" ";
    }nl;

    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/input.txt"
10
29
39817
349187389
419873971839783721
3984179347291
4381783
4891372
2333
311334

"/home/raihan/Desktop/Codeforces/iq.cpp"
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int arr[n],i,even=0,even_pos,odd_pos;
    for(i=0;i<n;i++)
    {
        cin>>arr[i];
        if(arr[i]%2==0){even++;even_pos=i;}
        else odd_pos=i;
    }
    if(even>1)cout<<odd_pos+1<<endl;
    else cout<<even_pos+1<<endl;
}

"/home/raihan/Desktop/Codeforces/I_Dark_Matter.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;

    ll a,b;
    string str;
    getline(cin,str);
    a=str[0]-48,b=str[str.size()-1]-48;

    // cout<<(a*a+b*b)+(a-b)+abs(a)*2*b-(a*b+2);nl;
    cout<<(a+b)+((a*a)+(b*b))+(a-b)+(abs(a)*2*b)-((a*b)+2);nl;
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/I_Greatest_of_the_Greatest_Common_Divisors.cpp"
#include<bits/stdc++.h>
using namespace std;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

#define par             tree[node]
#define left            tree[2 * node]
#define right           tree[2 * node + 1]

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5 + 100;


class SeiveAlgo{
    public:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        vector<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            divisors.erase(1);
            vin vec;
            for(auto i : divisors)vec.push_back(i);
            reverse(all(vec));
            return vec;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            if(l > r)swap(l, r);
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};

SeiveAlgo sv(N);

struct grp{
    int cur = 1;
    vin divs;
    void display(){
        print(divs);
    }
};

grp tmp{-INF, {}};

int n, q;
int v[N]; grp tree[4 * N];


grp query(int node, int lo, int hi, int lf, int rt){
    if(lo > rt or hi < lf)return tmp;
    if(lo >= lf and hi <= rt)return par;

    int mid = (lo + hi) / 2;
    grp q1 = query(2 * node, lo, mid, lf, rt);
    grp q2 = query(2 * node + 1, mid + 1, hi, lf, rt);
    grp ret;
    ret.cur = max(q1.cur, q2.cur);

    int i = 0, j = 0, l = q1.divs.size(), r = q2.divs.size();
    for(; i < l and j < r;){
        
        if(q1.divs[i] > q2.divs[j]){
            ret.divs.push_back(q1.divs[i++]);
        }else if(q1.divs[i] < q2.divs[j]){
            ret.divs.push_back(q2.divs[j++]);
        }else{
            ret.cur = q1.divs[i];
            return ret;
        }
    }
    while(i < l)ret.divs.push_back(q1.divs[i++]);
    while(j < r)ret.divs.push_back(q2.divs[j++]);

    return ret;
}


void build(int node, int lo, int hi){
    if(lo == hi){
        par.divs = sv.allDivisors(v[lo]);
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    int i = 0, j = 0, l = left.divs.size(), r = right.divs.size();
    par.cur = max(left.cur, right.cur);
    for(; i < l and j < r;){
        
        if(left.divs[i] > right.divs[j]){
            par.divs.push_back(left.divs[i++]);
        }else if(left.divs[i] < right.divs[j]){
            par.divs.push_back(right.divs[j++]);
        }else{
            par.cur = left.divs[i];
            return;
        }
    }
    while(i < l)par.divs.push_back(left.divs[i++]);
    while(j < r)par.divs.push_back(right.divs[j++]);
}


void sukuna(int test){
    cin >> n;
    forn(i,n)cin >> v[i];
    build(1, 0, n - 1);

    // print(tree[3].divs);
    // cout << tree[3].cur << endl;
    cin >> q;
    while(q--){
        int l, r;
        cin >> l >> r;
        cout << query(1, 0, n - 1, --l, --r).cur << endl;
    }
}

int32_t main(){
    fast_in_out;

    int test = 1;  //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/I_Lulu_And_The_Magical_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int ask(int i, int j){
    cout <<"? " << i <<" " << j << endl;
    cout.flush();
    lin(ask);
    return ask;
}

void sukuna(){
    lin(n);
    vin v;

    for(int i = 2; i <= n; i++){
        v.push_back(ask(1, i));
    }

    int ans = *min_element(all(v));
    sort(all(v));

    for(int i = 1; i < v.size(); i++){
        ans = min(ans, abs(v[i] - v[i - 1]));
    }

    cout <<"! " << ans << endl;
    cout.flush();
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/J_All_About_Divisors.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/J_Waiting_for.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    int sum = 0;
    vector<pair<char, int>> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;


    forn(i,n){
        if(v[i].first == 'P'){
            sum += v[i].second;
        }else{
            if(sum + 1 <= v[i].second){yes; sum = 0;}
            else{
                no;
                sum -= v[i].second;
            }
        }
    }
}

"/home/raihan/Desktop/Codeforces/Klee_s_SUPER_DUPER_LARGE_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n , k;
    cin >> n >> k;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/K_Grid_Walk.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, a, b;
    cin >> n >> a >> b;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j ++){
            cout << __gcd(i, a) <<" ";
        }
        nl;
    }nl;

    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j ++){
            cout << __gcd(j, b) <<" ";
        }
        nl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/K_King_s_Task.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;
int n;  vin v;

void op1(){
    for(int i = 0; i < n; i += 2){
        swap(v[i], v[i + 1]);
    }
}

void op2(){
    for(int i = 0, j = n / 2; i < n / 2; i++, j++){
        swap(v[i], v[j]);
    }
}


int32_t main()
{
    fast_in_out;
    cin >> n;
    n <<= 1;
    forn(i,n){
        lin(x);
        v.push_back(x);
    }
    vin s = v, v2 = v;
    sort(all(s));

    int cnt = 0;
    bool ck = 0;
    
    while(s != v && cnt <= n){
        cnt ++;
        if(ck)op1();
        else op2();
        ck = !ck;
    }

    v = v2;
    int ct = 0; ck = 1;
    while(s != v && ct <= n){
        ct ++;
        if(ck)op1();
        else op2();
        ck = !ck;
    }

    cnt = min(cnt, ct);

    if(cnt > n)cout<<-1<<endl;
    else cout<<cnt<<endl;
    
    
    
}

"/home/raihan/Desktop/Codeforces/K_Mashmokh_and_ACM.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e3 + 10;

int n, k;
int dp[N][N];

int recur(int ind, int prev){
    if(ind >= k)return 1;
    if(dp[ind][prev] != -1)return dp[ind][prev];

    int ans = 0;
    for(int i = 1; i * prev <= n; i++){
        ans += recur(ind + 1, prev * i);
        ans %= M;
    }

    return dp[ind][prev] = ans;
}

int32_t main(){
    memset(dp, -1, sizeof(dp));
    cin >> n >> k;

    cout << recur(0, 1) << endl;
}

"/home/raihan/Desktop/Codeforces/lab2A.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


int main()
{
    fast_in_out;
    in(n);
    int x1,x2,x,y;
    x1=x2=0;

    forn(i,n)
    {
        cin>>x>>y;

        if(x>=0 && y>=0)x1++;
        else if(x<0 && y>0)x2++;
        else if(x<0 && y<0 )x2++;
        else if(x>0 && y<0)x1++;
    }
    n--;
    if(x1>=n || x2>=n)yes;
    else no;


    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/Labyrinth.cpp"
#include<bits/stdc++.h>
using namespace std;

const int INF = 1e9;
const vector<pair<int, int>> directions = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};
const vector<char> dirChars = {'D', 'U', 'R', 'L'};

int main() {
    int n, m;
    cin >> n >> m;
    vector<string> grid(n);
    pair<int, int> start, end;

    for (int i = 0; i < n; ++i) {
        cin >> grid[i];
        for (int j = 0; j < m; ++j) {
            if (grid[i][j] == 'A') start = {i, j};
            if (grid[i][j] == 'B') end = {i, j};
        }
    }

    vector<vector<int>> dist(n, vector<int>(m, INF));
    vector<vector<pair<int, int>>> parent(n, vector<pair<int, int>>(m, {-1, -1}));
    queue<pair<int, int>> q;

    dist[start.first][start.second] = 0;
    q.push(start);

    while (!q.empty()) {
        auto [x, y] = q.front();
        q.pop();

        for (int i = 0; i < 4; ++i) {
            int nx = x + directions[i].first;
            int ny = y + directions[i].second;

            if (nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] != '#' && dist[nx][ny] == INF) {
                dist[nx][ny] = dist[x][y] + 1;
                parent[nx][ny] = {x, y};
                q.push({nx, ny});
            }
        }
    }

    if (dist[end.first][end.second] == INF) {
        cout << "NO" << endl;
    } else {
        cout << "YES" << endl;
        cout << dist[end.first][end.second] << endl;

        string path;
        pair<int, int> cur = end;
        while (cur != start) {
            auto [px, py] = parent[cur.first][cur.second];
            for (int i = 0; i < 4; ++i) {
                if (px + directions[i].first == cur.first && py + directions[i].second == cur.second) {
                    path.push_back(dirChars[i]);
                    break;
                }
            }
            cur = parent[cur.first][cur.second];
        }
        reverse(path.begin(), path.end());
        cout << path << endl;
    }

    return 0;
}

"/home/raihan/Desktop/Codeforces/lazy_propagation.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);

int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;

        tree[node] += dx * (hi - lo + 1);
        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(lo > r or hi < l)return 0;
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return q1 + q2;
}

void update(int node, int lo, int hi, int &l, int &r, int &val){

    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;

        tree[node] += dx * (hi - lo + 1);
        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        tree[node] += (hi - lo + 1) * val;
        
        if(lo != hi){
            lazy[2 * node] += val;
            lazy[2 * node + 1] += val;
        }
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);

    tree[node] = tree[2 * node] + tree[2 * node + 1];
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1];
}


int32_t main(){
    int n, q;
    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];

    build(1, 0, n);

    while(q--){
        int t, l, r, val;
        cin >> t;
        if(t == 2){
            cin >> l;
            cout << query(1, 0, n, --l, l) << endl;
        }else{
            cin >> l >> r >> val;
            update(1, 0, n, --l, --r, val);
        }
    }  
  
}

"/home/raihan/Desktop/Codeforces/A_A_B_Trial_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(a) lin(b)
    cout<<a + b<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Choose_Two_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    lin(n);
    ll m=0,y=0;
    forn(i,n)
    {
        lin(x);
        if(x>m)m=x;
    }
    lin(nn);
    forn(i,nn)
    {
        lin(x);
        if(x>y)y=x;
    }
    cout<<m<<" "<<y;nl;
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Fancy_Fence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    double a, n;
    cin >> a;
    n = 360 / (180 - a);
    if(n == (int)n)yes;
    else no;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Is_your_horseshoe_on_the_other_hoof.cpp"
#include<iostream>
using namespace std;
int main()
{
    int arr[4],i,cnt=1;
    for(i=0;i<4;i++)cin>>arr[i];
    for(i=0;i<3;i++)
    {
        for(int j=i+1;j<4;j++)
        {
            if(arr[i]==arr[j]){cnt++; break;}
        }
    }
    cout<<cnt-1<<endl;
}

"/home/raihan/Desktop/Codeforces/A_Maximize_the_Last_Element.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    int ans = 0;
    for(int i = 0; i < n; i+= 2)ans = max(ans, v[i]);
    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Nene_s_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll k,q,n;
    cin>>k>>q;
    vector<ll>a(k);
    forn(i,k)cin>>a[i];
    forn(i,q)
    {
        cin>>n;
        if(n<a[0])cout<<n;
        else cout<<a[0]-1;
        cout<<" ";
    }nl;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Phoenix_and_Balance.cpp"
//Nothing to say
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/#include<bits/stdc++.h>
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        10101001010100101010010110101001010100101001001010010*/using namespace std;
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/typedef long long ll;
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/typedef long double ld;

/*1010101101010010
 101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101   101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/#define forn(i,e) for(ll i=0;i<e;i++)
/*1010101101010010
    101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010   0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
  01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
     101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/#define rforn(i,s) for(ll i=s-1;i>=0;i--)
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/#define yes cout<<"YES"<<endl
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/#define no cout<<"NO"<<endl
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/#define nl cout<<"\n"

int /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/main()
/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/{
    int /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/test;
    /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        01101010010101001010100101101010010101001010100101101010010101001011011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        10101001010100101010010110101001010100101010010110101001101010010101001010010*/cin>>/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/test;
    /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        1010100101010010101001011010100101010010110101001010100101010110010*/while/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/(test--)
    {
        /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        1010100101010010101001010010*/int/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/ n;
        /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        1010100101010010101001011010100101010010101001010101001010010*/cin>>n;
        /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        10101001010100101010010110101001010100101111111111111111111111111111111111111111100000000000000000000000000000000000001001010010*/ll i,j,/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        10101001010100101010001101010010101001010010*/mx=1<<n,mi=1<<n-1;
        if(/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        10101001010100101010010110101001010100101010010110101001010100101010010110101001010101010010*/n==2/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        1010100101010010101001011010100101010010101001011010101010010101001010010*/)cout/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101100101101010010101001010010*/<<"2\n";
       /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/ else{
        /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        1010100101010010101001011010100101010010101001011010100101010010101001011101001010010101001010010*/for/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/(i=1,/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/j=n-2;i<n/2;/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/i++,/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/j--)
        {
           /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/ mx/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/=mx+/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/(1<<i);
            /*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/mi=mi+/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/(1<<j)/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/;
        }
        cout<</*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/(mx-mi)/*1010101101010010
        101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101
        01001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010010110101001010100101010
        0101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001
        011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010010101001011010100101010
        01010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010100101
        101010010101001010100101101010010101001010100101101010010101001010100101101010010101001010010*/; nl;
        }
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Rounding.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    int n;
    cin >> n;
    if(n % 10 <= 5)n -= (n % 10);
    else n += 10 - n%10;
    cout << n << endl;
}

"/home/raihan/Desktop/Codeforces/A_Simple_Palindrome.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
string temp = "aeiou";

void sukuna(){
    lin(n);
    int cnt = n / 5;
    for(int i = 0; i < 5; i++){
        for(int j = 0; j < cnt + (i < n % 5); j++){
            cout << temp[i];
        }
    }
    nl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Sum_of_Three.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    if(n<6)no;
    else if(n%3==0 && n<=9)no;
    else if(n%3==0 && n>9)
    {
        yes;
        cout<<"1 4 "<<n-5;nl;
    }
    else 
    {
        yes;
        cout<<"1 2 "<<n-3;nl;
    }
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Upload_More_RAM.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    cout<< k * (n - 1) + 1<<endl;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Arranging_Cats.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"
int solve()
{
    int n;
    cin>>n;
    string s,f;
    cin>>s>>f;
    int si=0,fi=0,cnt=0;
    for(ll i=0;i<n;i++)
    {
        if(s[i]==49)si++;
        if(f[i]==49)fi++;
        if(f[i]!=s[i])cnt++;
    }
    if(cnt==0)cout<<"0";
    else if(fi==si)cout<<cnt-fi;
    else if(si>fi)cout<<cnt-(si-fi);
    else if(si<fi)cout<<cnt;
    nl;

    return 0;
}

int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Binary_Path.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define llin(n)            ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x;nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    llin(n); ll i, sc=0,tc=n;
    string s,t; cin>>s>>t;
    vector<char>v; bool fg=false;
    v.pb(s[0]);
    forn(i,n)
    {
        if(fg==false && i<n-1)
        {
            if(s[i+1]<=t[i])v.pb(s[i+1]);
            else {v.pb(t[i]); ; fg=true; }
        }
        else v.pb(t[i]);
    }
    print(v);

    for(i=0;i<n && s[i]==v[i];i++)sc++;
    for(i=n-1;i>=0 && t[i]==v[i+1];i--)tc--;

    cout<<abs(sc-tc);nl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Coin_Games.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,u=0;
    cin>>n;
    string s;
    cin>>s;
    forn(i,n)if(s[i]=='U')u++;
    if(u%2==1)yes;
    else no;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Erase_First_or_Second_Letter.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string str;
    cin>>str;
    set<char>s;
    int ans = 0;
    for(auto a : str){
        s.insert(a);
        ans += s.size();
    }
    cout << ans <<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_GCD_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5;

vin pm;
bool isPrime[N];

void seive(){
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            for(int j = i * i; j < N; j+= i){
                isPrime[j] = 1;
            }
        }
    }
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            pm.push_back(i);
        }
    }
}


void sukuna(){
    lin(n);
    int c = 1; n--;
    for(int i = 0; pm[i] < n - 1; i++){
        if(__gcd(n - pm[i], pm[i]) == 1){
            cout<<n - pm[i] <<' '<<pm[i]<<" "<<1<<endl;
            return;
        }
    }
    
}

int32_t main(){
    fast_in_out;
    seive();
    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Is_it_stated.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    string str; cin>>str;

    forn(i,str.size()-1)
    {
        if(str[i]=='i' && str[i+1]=='t')
        {
            yes; return 0;
        }
    }
    no;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Them_Equal.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    set<int> s;
    forn(i,n){
        lin(x);
        s.insert(x);
    }
    if(s.size() == 1){
        cout<<0<<endl;
    }else if(s.size() > 3){
        cout << - 1 << endl;
    }else if(s.size() == 2){
        int dif = *s.rbegin() - *s.begin();
        if(dif & 1)cout<<dif<<endl;
        else cout<<dif / 2;
    }else{
        int a = *s.begin(), b = *++s.begin(), c = *s.rbegin();
        if(abs(a - b) == abs(b - c)){
            cout<< abs(a - b) << endl;
        }else{
            cout << - 1<<endl;
        }
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Monsters_Attack.cpp"
//Life is beautiful with STL

#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,k,y,i,st=0;
    cin>>n>>k;
    map<ll,ll>s;
    vector<ll>a(n),x(n);

    forn(i,n)cin>>a[i];
    forn(i,n)cin>>x[i];

    forn(i,n)
    {
        y=abs(x[i]);
        if(s.count(y)==0)s.insert({y,a[i]});
        else s[y]+=a[i];
    }
    
    for(i=1;i<=(--s.end())->first;i++)
    {
        st+=k;
        if(s.count(i)==1)
        {
            if(s[i]<=st)st-=s[i];
            else{ no; return 0;}
        } 
    }
    yes;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_osu_mania.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m = 4;
    cin >> n;
    vector<string> v(n);
    forn(i,n)cin >> v[i];

    for(int i = n - 1; i >= 0; i--){
        for(int j = 0; j < m; j++){
            if(v[i][j] == '#'){
                cout<<j + 1<<" ";
                break;
            }
        }
    }
    nl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Reverse_Binary_Strings.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string v;
    cin >> v;
    int ans = 0;
    for(int i = 0; i < n - 1; i++){
        if(v[i] == v[i + 1])ans++;
    }
    cout<<ceil(ans / 2.0)<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Shifts_and_Sorting.cpp"
#include<bits/stdc++.h>
using namespace std;
         
typedef                    long long ll;
typedef                    long double ld;
         
#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
         
#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()
         
#define fi                 first
#define se                 second
#define mmp                make_pair
         
#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
         
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
         
int solve()
{
    string s;
    cin>>s;
    ll n=s.size();
    ll m=0,ans=0,j,k;
    bool ck=0;
         
    for(int i=0;i<n;i++)
    {
        if(s[i]=='1')
        {
           if(ck==0){k=i+1; ck=1;}
         
                for(j=k;j<n;j++)
                {
                    if(s[j]=='0')
                    {
                       ans+=(j-i+1);
                      swap(s[i],s[j]);
                       k=j;
                       break;
                    }
            }
        }
         if(k==(n-1))break;
    }
    cout<<ans;nl;
    return 0;
}
         
int main()
{
    fast_in_out;
         
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Madoka_and_Formal_Statement.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n; vin b;

class solution{
    private:
        void op(vin &v, int ind){
            for(int i = ind; i >= 0; i--){
                if(v[i] > v[i + 1])continue;
                int range = v[i + 1] + 1;
                range = min(range, b[i]);
                v[i] = range;
            }
        }

        bool firstOp(vin &v){
            int cnt = 0;
            again:
            v[n] = v[n - 1];
            if(v[0] == b[0])return true;

            int dist = 1, i;
            cnt++;
            for(i = 1; i < n; i++){
                if(v[i] + dist >= v[0] && v[i] <= v[i + 1]){
                    break;
                }
            }
            op(v, i);

            if(v[0] != b[0] && cnt < 100)goto again;
            return true;
        }

    public:
        void sukuna(){
            cin >> n;
            vin a(n), temp(n);
            forn(i,n)cin >> a[i];
            forn(i,n)cin >> temp[i]; b = temp;
            forn(i,n){if(a[i] > b[i]){no; return;}}
            a.push_back(a.back());
            int mn = *min_element(all(b));
            for(int i = 0; i <= n; i++)a[i] = max(mn, a[i]);

            firstOp(a);
            if(a[n - 1] != b[n - 1]){
                if(b[n - 1] - 1 <= a[0])a[n - 1] = b[n - 1];
                else {no; return;}
            }

            for(int i = n - 1; i >= 0; i--){
                if(a[i] == b[i])continue;
                if(b[i] <= a[i + 1] + 1){
                    a[i] = b[i];
                }else{
                    no;
                    return;
                }
            }

            yes;    
        }
};

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--){
        solution done;
        done.sukuna();
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Make_Equal_Again.cpp"
// Nothing to say
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i, e) for (ll i = 0; i < e; i++)
#define rforn(i, s) for (ll i = s - 1; i >= 0; i--)
#define yes cout << "YES" << endl
#define no cout << "NO" << endl
#define nl cout << "\n"

int main()
{
    int test;
    cin >> test;
    while (test--)
    {
        int n;
        cin >> n;
        int arr[n];
        int i,first=1,last=1,j,ck=0,ckk=0;

        forn(i, n) cin >> arr[i];

        for(i=1,j=n-1;i<j;)
        {
            if(arr[i]==arr[i-1]){first++; i++;}
            else ck=1;

            if(arr[j]==arr[j-1]){last++; j--;}
            else ckk=1;

            if(ck&ckk)break;
        }
        
        int ans;
        if(arr[0]==arr[n-1])ans=(n-first-last);
        else if(first>=last)ans=(n-first);
        else if(last>first)ans=(n-last);
        if(ans>=0)cout<<ans;
        else cout<<"0";
        nl;
        
    }
    return 0;
}

// Thanks for watching

"/home/raihan/Desktop/Codeforces/C_Make_Equal_With_Mod.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, one_cnt = 0;
    cin >> n;
    vin v(n);
    forn(i,n){
        cin >> v[i];
        if(v[i] == 1)one_cnt++;
    }

    if(one_cnt == 0){
        yes;
        return;
    }

    sort(all(v));
    forn(i,n - 1)if(v[i] + 1 == v[i + 1]){no; return;}
    yes;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Make_Equal_With_Mod.java"
import java.util.*;

public class C_Make_Equal_With_Mod {
    static Scanner in = new Scanner(System.in);

    static void DOMAIN_EXPENSION(){
        int n = in.nextInt();
        Arraylist<Integer> arr = new Arraylist<>();
        
        for(int i = 0; i < n; i++){
            arr[i] = in.nextInt();
        }

        

    }
    public static void main(String[] args) {
        int test = in.nextInt();
        while(test > 0){
            test--;
            DOMAIN_EXPENSION();
        }        
    }
}

"/home/raihan/Desktop/Codeforces/C_Make_It_Good.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

bool chk(vin v, int p){
    int n = v.size();
    vin c;
    for(int i = p, j = n - 1; i <= j;){
        if(i == j){
            c.push_back(v[i]);
            break;
        }

        if(v[i] < v[j]){
            c.push_back(v[i]);
            i++;
        }else{
            c.push_back(v[j]);
            j--;
        }
    }
    int m = c.size();
    for(int i = 1; i < m; i++){
        if(c[i - 1] > c[i])return false;
    }

    return true;
}

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    int lo = 0, hi = n, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;

        if(chk(v, mid)){
            hi = mid;
        }else{
            lo = mid + 1;
        }
    }
    
    cout<<lo<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Make_It_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, c, d;
    cin >> n >> c >> d;
    map<int, int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
    }
    vin v;
    int ans = 0;
    for(auto a : mp){
        ans += a.second - 1;
        v.push_back(a.first);
    }
    ans *= c;
    if(mp[1] == 0){
        v.insert(v.begin(), 1);
        ans += d;
    }
    n = v.size();

    int mn = (n - 1) * c, sum = 0;
    for(int i = 1; i < n; i++){
        sum += (v[i] - v[i - 1] - 1) * d;
        mn = min(mn, sum + (n - i - 1) * c);
    }

    cout<<mn + ans<<endl;
    


    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Make_Them_Equal.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n; char c; string str;
    cin >> n >> c >> str;
    int cnt = 0;
    forn(i,n)if(str[i] != c)cnt++;
    if(cnt == 0){
        cout<<0<<endl;
        return;
    }
    if(cnt == 1){
        if(str[n -1] != c){
            cout<<1<<endl<<n - 1<<endl;
        }else{
            cout<<1<<endl<<n<<endl;
        }
        return;
    }

    for(int i = n / 2; i < n; i++){
        if(str[i] == c){
            cout<<1<<endl;
            cout<<i + 1<<endl;
            return;
        }
    }
    cout<<2<<endl<<n -1<<" "<<n<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Mark_and_His_Unfinished_Essay.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m, q;
struct grp{int x, y, cnt; void display(){cout << x <<" " << y <<" " << cnt << endl; }};
vector<grp> v;
string str;


char solve(int pos){
    if(pos <= n)return str[pos];
    int sum = n, i;
    
    for(i = 0; i < m; i++){
        sum += v[i].cnt;
        if(sum >= pos){
            break;
        }
    }
    int st = n;
    for(int j =  0; j < i; j++)st += v[j].cnt;

    return solve(v[i].x + (pos - st - 1));
}

void sukuna(){
    v.clear();
    cin >> n >> m >> q;
    cin >> str;
    str = "*" + str;

    forn(i,m){
        int x, y;
        cin >> x >> y;
        v.push_back({x, y, y - x + 1});
    }


    while(q--){
        lin(ind);
        cout << solve(ind) << endl;
    }
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Matching_Arrays.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, x;
    cin >> n >> x;
    vector<pr> a(n);
    vin b(n);
    forn(i,n)cin >> a[i].first, a[i].second = i;
    forn(i,n)cin >> b[i];

    sort(all(a));
    sort(all(b));
    rotate(b.begin(), b.begin() + x, b.end());
    vin ans(n);
    int cnt = 0;

    forn(i,n){
        if(a[i].first > b[i])cnt++;
        ans[a[i].second] = b[i];
    }

    if(cnt == x){
        yes;
        print(ans);
    }else{
        no;
    }
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Matching_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    if(n % 2 == 0){
        no;
        return;
    }
    yes;
    vector<pr> ans;
    int x = (n + 1) / 2, y = - n + x;
    for(int k = 0, i = 1, j = n + (n + 1) / 2; k < n; k++){
        cout<<i<<' '<<j<<endl;
        i += x;
        j += y;
        swap(x, y);
    }   
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Maximum_Median.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vin arr;
int n, k;

bool chk(int mid){
    int sum = 0;
    for(int i = n / 2; i < n; i++){
        if(arr[i] >= mid)continue;
        sum += mid - arr[i];
        if(sum > k)return false;    
    }
    return sum <= k;
}

void sukuna(int test){
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    arr = v;
    
    int lo = 0, hi = k, mid, mid_element = v[n / 2];
    while(hi > lo){
        mid = (lo + hi) / 2;
        if(chk(mid_element + mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    if(!chk(lo + mid_element))lo--;
    cout << mid_element + lo << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Maximum_splitting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    private:
        int N = 1e6;
        vector<bool> isPrime;
    public:
        vector<int> prime_numbers, lowest_prime;
        
        SeiveAlgo(){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            isPrime = vector<bool> (N);
            generate();
        }
    
        SeiveAlgo(int N){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            isPrime = vector<bool> (N);
            generate();
        }

        vector<int> primeFactors(int n){
            vector<int> temp;
            while(n > 1){
                int pm = lowest_prime[n];
                while(n % pm == 0){
                    n /= pm;
                    temp.push_back(pm);
                }
            }
            return temp;
        }
        
    private:
        void generate(){
            isPrime[0] = isPrime[1] = 1;
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lowest_prime[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = 1;
                        if(lowest_prime[j] == 0){
                            lowest_prime[j] = i;
                        }
                    }
                }
            }
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    prime_numbers.push_back(i);
                }
            }
        }
};

SeiveAlgo sv(N);
vector<int>primes = sv.prime_numbers;

void func(vin &v, int n){
    for(auto i : sv.primeFactors(n)){
        v.push_back(i);
    }
}

void sukuna(){
    lin(n);
    vector<int> divisors;
    int m = n;

    for(int i = 0; primes[i] * primes[i] <= n; i++){
        if(m < N){
            func(divisors, m);
            break;
        }
        if(m % primes[i] == 0){
            while(m % primes[i] == 0){
                m /= primes[i];
                divisors.push_back(primes[i]);
            }
        }
    }
    sort(all(divisors));
    
    if(divisors.size() < 2){cout << -1 << endl; return;}
    if(divisors.size() == 2){cout << 1 << endl; return;}

    int ans = 1;
    for(int i = 2; i < divisors.size(); i++)ans *= divisors[i];
    cout << ans << endl;

}

int32_t main(){
    fast_in_out;
    lin(test);

    while(test--){
        sukuna();
    }

}

"/home/raihan/Desktop/Codeforces/C_Max_Ai_Bj.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin a(n),b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    cout << *max_element(all(a)) + *max_element(all(b))<<endl;    
}

"/home/raihan/Desktop/Codeforces/C_Maze.cpp"
#include<bits/stdc++.h>
using namespace std;

const int N = 505;
int n, m, k, vis[N][N], level[N][N];
vector<string> graph;
vector<vector<pair<int, int>>> lev(N * N);
vector<pair<int, int>> movements = {
    {-1, 0},
    {0, -1},
    {0, 1},
    {1, 0},
};

bool isValid(int x, int y){
    return x >= 0 && x < n && y >= 0 && y < m;
}


void bfs(int x, int y){
    queue<pair<int, int>> q;
    q.push({x, y});

    while(!q.empty()){
        x = q.front().first;
        y = q.front().second;
        q.pop();
        vis[x][y] = true;

        for(auto mv : movements){
            int childx = x + mv.first;
            int childy = y + mv.second;

            if(!isValid(childx, childy))continue;
            if(graph[childx][childy] == '#')continue;
            if(vis[childx][childy])continue;
            vis[childx][childy] = true;

            q.push({childx, childy});
            level[childx][childy] = level[x][y] + 1;
            lev[level[x][y]].push_back({childx, childy});
        }
    }
}

int main(){
    cin >> n >> m >> k;
    for(int i = 0; i < n; i++){
        string temp;
        cin >> temp;
        graph.push_back(temp);
    }
    int i, j;
    for(i = 0; i < n; i++){
        bool flg = 0;
        for(j = 0; j < m; j++){
            if(graph[i][j] == '.'){
                flg = 1;
                break;
            }
        }
        if(flg)break;
    }

    bfs(i, j);
    int mx = 0;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            mx = max(mx, level[i][j]);
        }
    }
    cout << endl;

    for(int i = mx; i >= 0; i--){
        bool flg = 0;
        for(auto j : lev[i]){
            if(k == 0){flg = 1; break;}
            graph[j.first][j.second] = 'X';
            k--;
            if(k == 0){flg = 1; break;}
        }
        if(flg)break;
    }

    for(int i = 0; i < n; i++){
        cout << graph[i] <<endl;
    }

}

"/home/raihan/Desktop/Codeforces/C_Mere_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> mp;
    forn(i,n)cin >> v[i];
    int mn = *min_element(all(v));
    vin a = v;
    sort(all(a));

    for(int i = 0; i < n; i++){
        if(v[i] % mn == 0)mp[v[i]] = 1;
    }

    for(int i = 0; i < n; i++){
        if(a[i] != v[i]){
            if(mp[v[i]] == 0){
                no; 
                return;
            }
        }
    }

    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Meximum_Array.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n), rev_mex(n + 1), ans;
    set<int> s, temp;
    forn(i,n)cin >> v[i];
    for(int i = 0; i <= n; i++)s.insert(i);

    for(int i = n - 1; i >= 0; i--){
        if(s.count(v[i]))s.erase(v[i]);
        rev_mex[i] = *s.begin();
    }    

    for(int i = 0; i <= n; i++)s.insert(i);

    int target = rev_mex.front();
    for(int i = 0; i < n; i++){
        temp.insert(v[i]);
        if(s.count(v[i]))s.erase(v[i]);

        int cur_mex = *s.begin();
        
        if(cur_mex == target){
            ans.push_back(target);
            target = rev_mex[i + 1];
            for(auto j : temp)s.insert(j);
            temp.clear();
        }        
    }

    cout << ans.size() << endl;
    print(ans);

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_MEX_Repetition.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n), ans;
    set<int> s;
    forn(i,n)cin >> v[i], s.insert(v[i]);

    int mex = 0;
    for(int i = 0; i <= n; i++){
        if(s.count(i) == 0){
            mex = i;
            break;
        }
    }
    k %= (n + 1);

    for(int i = n - k + 1; i < n; i++){
       ans.push_back(v[i]); 
    }
    if(k > 0)ans.pb(mex);

    for(int i = 0; i < n; i++){
        if(ans.size() >= n)break;
        ans.pb(v[i]);
    }
    print(ans);
  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Minimal_string.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string str, ans;
    cin >> str;
    int n = str.size();

    vector<char>mn(n);
    mn.back() = str.back();
    for(int i = n - 2; i >= 0; i--){
        mn[i] = min(mn[i+1], str[i]);
    }

    stack<char>st;

    for(int i = 0; i < n; i++){
        while(!st.empty() && st.top() <= mn[i]){
            ans.push_back(st.top());
            st.pop();
        }
        st.push(str[i]);
    }
    
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }
    cout << ans << endl;


   
}

"/home/raihan/Desktop/Codeforces/C_Minimizing_the_Sum.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e5 + 10;

int n, K, dp_cnt;
int v[N], dp[N][11];

int recur(int ind, int k){dp_cnt++;

    if(ind >= n)return 0;
    if(dp[ind][k] != -1)return dp[ind][k];

    int a = v[ind] + recur(ind + 1, k);

    int b = INF, sum = v[ind], cnt = k;
    for(int i = ind + 1; i < n and cnt > 0; i++){
        sum += v[ind];
        b = min(b, sum + recur(i + 1, --cnt));
    }

    int c = INF; sum = 0, cnt = k;
    for(int i = ind + 1, j = 1; i < n and cnt > 0; i++, j++){
        sum = v[i] * j + recur(i, --cnt);
        c = min(c, sum);
    }
    
    return dp[ind][k] = min({a, b, c});
}

void reset(){
    dp_cnt++;
    for(int i = 0; i <= n; i++){
        for(int j = 0; j <= K; j++){
            dp[i][j] = -1;
        }
    }
}

void sukuna(int test){
    cin >> n >> K;
    reset();

    forn(i,n)cin >> v[i];

    cout << recur(0, K) << endl;
    cerr << dp_cnt << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Minimum_Notation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<char>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<"";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

vin op(vin v){
    int n = v.size();
    char mn = '9';
    
    rforn(i, v.size()){
        mn = min(mn, v[i]);

        if(v[i] > mn)v[i] = min(57, v[i] + 1);
    }
    sort(all(v));
    return v;    
}

void sukuna(){
    string str;
    cin >> str;
    vin v(str.size());
    forn(i,str.size())v[i] = str[i];
    print(op(v));

}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Minimum_Varied_Number.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x;nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v;
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    
    for(int i = 8; i >= 0; i--){
        if(arr[i] <= n){
            v.push_back(arr[i]);
            n -= arr[i];
        }
    }
    reverse(all(v));
    print(v);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Nene_s_Magical_Matrix.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

ll summ(ll n)
{
    ll sum=0;
    for(ll i=1;i<=n;i++)sum+=i;
    return sum;
}


int solve()
{
    ll n,k=0,m,d,i;
    cin>>n;
    vector<ll>v(n);
    forn(i,n)v[i]=i+1;
    for(i=n;i>0;i--)k+=i*(i*2-1);
    cout<<k<<" "<<n*2;nl;
    forn(i,n)
    {
        cout<<"1 "<<n-i<<" ";print(v);
        cout<<"2 "<<n-i<<" ";print(v);
    }
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_New_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, k;

int func(vin v){
    int n = v.size();
    int sum = 0, ans = 0;
    for(int i = 0; i < k && i < n; i++)sum += v[i];
    ans = sum;
    for(int j = 0, i = k; i < n; i++, j++){
        sum += v[i]; sum -= v[j];
        ans = max(ans, sum);        
    }
    return ans;
}

void sukuna(int test){
    cin >> n >> k;
    vin v(n);
    map<int, int> mp;
    forn(i,n){
        cin >> v[i];
        mp[v[i]]++;
    }
    sort(all(v));

    vector<pr> vec;
    int ans = 0;
    for(auto i : mp){vec.push_back({i.first, i.second}); ans = max(ans, i.second);}
    vec.push_back({INF, 0});
    vector<vin> subs;

    vin temp = {vec.front().second};

    for(int i = 0; i < vec.size() - 1; i++){
        if(vec[i + 1].first - vec[i].first == 1){
            temp.push_back(vec[i + 1].second);
        }else{
            subs.push_back(temp);
            temp.clear();
            temp.push_back(vec[i + 1].second);
        }
    }

    for(auto i : subs){
        ans = max(ans, func(i));
    }
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_New_Rating.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1), pf(n + 1), mx(n + 2); mx.back() = n - 1;
    Forn(i,n)cin >> v[i];

    for(int i = n, j = 0; i > 0; i--, j++){
        mx[i] = min(mx[i + 1], v[i] + j);
    }   

    int x = 0, ans = 0;
    for(int i = 1; i <= n; i++){
        if(v[i] > x)x++;
        if(v[i] < x)x--;
        ans = max(ans, x);
        pf[i] = x;
    }
    ans = min(ans, n - 1);

    
    for(int i = 1; i <= n; i++){
        if(pf[i] < pf[i - 1]){
            int last = pf[i - 1];
            int j = i - 1;
            int cnt = last;

            for(; i <= n; i++){
                if(cnt < v[i]){
                    int cur = pf[n] - pf[i - 1] + last;
                    cur = min(cur, mx[i]);
                    ans = max(ans, cur);
                }
                if(cnt == v[i]){
                    int cur = pf[n] - pf[i] + last;
                    cur = min(cur, mx[i]);
                    ans = max(ans, cur);
                }
                if(pf[i] == pf[j])break;
            }
        }
    }
    ans = min(ans, n - 1);
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Distinct_Split.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int ans = 0, tot = 0;
    lin(n);
    string str;
    cin >> str;
    set<int> s;
    map<char, int> mp;
    forn(i,n)mp[str[i]]++;
    tot = mp.size();
    s.clear();

    for(int i = 0; i < n - 1; i++){
        s.insert(str[i]);
        mp[str[i]]--;
        int cnt = 0;
        for(auto a : mp){
            if(a.second > 0)cnt++;
        }
        cnt += s.size();
        ans = max(ans, cnt);        
    }

    cout<<ans<<endl;
      
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Districts_Connection.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    int i,j,cnt=0,c=1;
    bool t=true;
    vin v(n);

    set<int>s;
    forn(i,n)
    {
        cin>>v[i];
        s.insert(v[i]);
    }
    if(s.size()>=2)yes;
    else {no; return 0;}
    
    for(i=0;i<n;i++)
    {
        if(v[i]==v[0])
        {
            for(j=0;j<n;j++)
            {
                if(v[i]!=v[j])
                {
                    cout<<i+1<<" "<<j+1;nl;
                    if(t==false)break;
                }
            }
            t=false;
        }
    }
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Diverse_Garland.cpp"
#include<bits/stdc++.h>
using namespace std;

string colors = "RGB";

char op(char a, char b){
    for(auto color : colors){
        if(color != a && color != b){
            return color;
        }
    }
}


int main(){
    int n;
    cin >> n;
    string str, ans;
    cin >> str;
    ans = str;
    str += "*#$";

    for(int i = 0; i < n; i++){
        if(str[i] != str[i + 1])continue;
        str[i + 1] = op(str[i], str[i + 2]);
    }
    int cnt = 0;
    for(int i = 0; i < n; i++){
        if(ans[i] != str[i])cnt++;
        ans[i] = str[i];
    }

    cout << cnt <<endl << ans <<endl;




}

"/home/raihan/Desktop/Codeforces/D_Divide_and_Equalize.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e6 + 100;
vector<bool>isPrime(N);
vin lp(N);

void seive(){
    isPrime[0] = isPrime[1] = 1;
    lp[0] = lp[1] = 1;
    
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            lp[i] = i;
            for(int j = i * 2; j < N; j+= i){
                if(lp[j] == 0);lp[j] = i;
                isPrime[j] = 1;
            }
        }
    }
}

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    map<int, int> fact;
    
    for(auto a : v){
        while(a > 1){
            int pm = lp[a];
            while(a % pm == 0){
                a /= pm;
                fact[pm]++;
            }
        }
    }

    for(auto a : fact){
        if(a.second % n != 0){
            no;
            return;
        }
    }
    
    yes;
}

int32_t main(){
    fast_in_out;
    seive();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Divisibility_by_2_n.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int func(int n){
    int cnt = 0;
    while(n % 2 == 0){
        n >>= 1;
        cnt++;
    }
    return cnt;
}

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int sum = 0;

    forn(i,n){
        sum += func(v[i]);
    }
    if(sum >= n){
        cout<<0<<endl;
        return;
    }
    
    map<int, int> mp;
    for(int i = 1; i <= n; i++){
        int x = func(i);
        if(x > 0)mp[x]++;
    }

    int ans = 0;
    for(auto i = mp.rbegin(); i != mp.rend(); i++){
        bool ck = 0;
        for(int j = 0; j < i->second; j++){
            sum += i->first;
            ans++;
            if(sum >= n){
                ck = 1;
                break;
            }
        }
        if(ck)break;
    }

    if(sum >= n)cout<<ans<<endl;
    else cout<<-1<<endl;



    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Divisible_Pairs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, x, y;
    cin >> n >> x >> y;

    map<pair<int, int>, int> m;

    int ans = 0;
    for(int i = 0; i < n; i++){
        lin(k);
        ans += m[{(x - k%x) % x, k%y}];
        m[{k%x, k%y}]++;
    }
    cout<<ans<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Divisors.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 998244353;
const int N = 2e5 + 100;

mt19937 rnd(time(0));


int func(int x, int c, int mod){
    return ((__uint128_t) x * x % mod + c) % mod;
}

int rho(int n){
    int c = 1 + rnd() % (n - 2);
    int x = 2 + rnd() % (n - 2);
    int y = x, d = 1;

    while(d == 1){
        x = func(x, c, n);
        y = func(func(y, c, n), c, n);
        d = __gcd(abs(y - x), n);
    }
    if(d == n)return rho(n);
    return d;
}


void sukuna(int test){
    lin(n);
    map<int, int> mp, cnt;
    vector<int> res;
    while(n--){
        lin(num);
        int sq = sqrtl(num);
        if(sq * sq == num){
            int cnt = 2;
            int sqq = sqrtl(sq);
            if(sqq * sqq == sq){cnt = 4; sq = sqq;}
            mp[sq] += cnt;
            continue;
        }
        bool flg = false;
        for(auto i : mp){
            if(num % i.first == 0){
                flg = true;
                while(num % i.first == 0){
                    mp[i.first]++;
                    num /= i.first;
                }
                if(num > 1) mp[num]++;
                break;
            }
        }
        if(!flg)cnt[num]++;
    }
    for(auto i : cnt)res.push_back(i.first);
    n = res.size();

    for(int i = 0; i < n; i++){
        int d = 1;
        if(res[i] == 1)continue;
        for(int j = i + 1; j < n; j++){
            int g = __gcd(res[i], res[j]);
            if(g == 1)continue;
            d = g;
            int num = res[j];
            while(num % d == 0){
                num /= d;
                mp[d] += cnt[res[j]];
            }
            mp[num] += cnt[res[j]];
            res[j] = 1;
        }
        if(d > 1){
            int num = res[i];
            while(num % d == 0){
                num /= d;
                mp[d] += cnt[res[i]];
            }
            mp[num] += cnt[res[i]];
            res[i] = 1;
        }
    }

    int ans = 1;
    for(auto i : res){
        if(i == 1)continue;
        int mul = (cnt[i] + 1);
        mul = mul * mul % M;
        ans = ans * mul % M;
    }

    cout << ans << endl;

    for(auto i: mp){
        ans = ans * (i.second + 1) % M;
    }
    mprint(mp);
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1; //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Double_Strings.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
set<string> s;
map<string, int> mp;

bool func(string str){
    string fr;
    string bk = str;
    for(int i = 0; i < str.size() - 1; i++){
        fr.push_back(str[i]);
        string bk;
        for(int j = i + 1; j < str.size(); j++){
            bk.push_back(str[j]);
        }
        if(s.count(fr) && s.count(bk))return true;
    }
    return false;
}


void sukuna(){
    s.clear();
    mp.clear();
    lin(n);
    vector<string> v(n);
    forn(i,n){
        cin >> v[i];
        s.insert(v[i]);
        mp[v[i]]++;
    }
    
    for(int i = 0; i < n; i++){
        // func(v[i]); continue;
        if(func(v[i]))cout << 1 ;
        else cout << 0 ;
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Drunken_Maze.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;

struct grp{char dir; int x, y;};
vector<grp> moves;
vector<string> grid;

void sukuna(int test){
    cin >> n >> m;
    forn(i,n){
        string str;
        cin >> str;
        grid.push_back(str);
    }

    int i, j;
    for(i = 0; i < n; i++){
        bool flg = false;
        for(j = 0; j < m; j++){
            if(grid[i][j] == 'S'){
                flg = true;
                break;
            }
        }
        if(flg)break;
    }



    
}

int32_t main(){
    fast_in_out;

    moves.push_back({1, 0, 1});
    moves.push_back({2, 0, -1});
    moves.push_back({3, -1, 0});
    moves.push_back({4, 1, 0});

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Epic_Transformation.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int mx = 0;
    map<int, int> mp;
    
    forn(i,n){
        lin(x);
        mp[x]++;
        mx = max(mp[x], mx);
    }

    if(mx <= (n + 1) / 2){
        cout << (n & 1) << endl;
        return;
    }

    cout << n - (2 * (n - mx)) << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Even_Odd_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    
    int sum = 0;
    bool flg = 1;
    for(int i = n - 1; i >= 0; i--){
        if(flg){
            if(v[i] % 2 == 0)sum += v[i];
        }else{
            if(v[i] & 1)sum -= v[i];
        }
        flg = !flg;
    }  

    if(sum > 0)cout << "Alice\n";
    else if(sum == 0)cout <<"Tie\n";
    else cout << "Bob\n"; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Fight_with_Monsters.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, a, b, k, ans = 0;
    cin >> n >> a >> b >> k;
    int ab = a + b;

    vin v;
    forn(i,n){
        lin(x);
        if(x % ab > 0 and x % ab <= a){ans++; continue;}
        if(x % ab == 0)v.push_back(ab);
        else v.push_back(x % ab);
    }


    sort(all(v));
    for(auto &i : v){
        i -= a;
        int rm = ceil(i * 1.0 / a);
        if(rm > k)break;
        k -= rm;
        ans++;
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Find_the_Different_Ones.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n), pos(n);
    forn(i,n)cin >> v[i];
    int mn = -1;

    pos[0] = mn;
    for(int i = 1; i < n; i++){
        if(v[i] != v[i - 1])mn = i;
        pos[i] = mn;
    }

    lin(q);
    while (q--){
        int l, r;
        cin >> l >> r;
        if(l > pos[r - 1])cout<<-1<<" "<<-1<<endl;
        else cout<<pos[r - 1] <<" "<<r<<endl;
    }
    nl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_First_element_at_least_X_2.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 1e5 + 10;

int n, q;
int tree[4 * N], v[N];


int query(int node, int lo, int hi, int &l, int &r){
    if(lo > r or hi < l)return -M; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return max(q1, q2); //***
}


void update(int node, int lo, int hi, int pos, int val){
    if(lo > pos or hi < pos)return;
    if(lo >= pos and hi <= pos){
        tree[node] = val;
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, val);
    update(2 * node + 1, mid + 1, hi, pos, val);

    tree[node] = max(tree[2 * node], tree[2 * node + 1]); //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = max(tree[2 * node], tree[2 * node + 1]); //***
}

int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];
    build(1, 0, n - 1);

    while(q--){
        int typ, ind, val, ans = n;
        int lo = 0, hi = n, mid;
        cin >> typ;

        if(typ == 1){
            cin >> ind >> val;
            update(1, 0, n - 1, ind, val);
            continue;        
        }else{
            cin >> val >> lo;
            while(hi > lo){
                mid = (lo + hi) / 2;
                if(query(1, 0, n - 1, lo, mid) < val){
                    lo = mid + 1;
                }else{
                    hi = mid;
                }
            }
        }
        cout << (lo == n ? -1 : lo) << endl;
    }
}

// Problem link: https://codeforces.com/edu/course/2/lesson/4/2/practice/contest/273278/problem/D

"/home/raihan/Desktop/Codeforces/A_Round_Down_the_Price.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int digit_counter(ll n)
{
    
    ll i;
    for(i=0;n>0;i++)
    {
        n/=10;
    }
    return i;
}

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        ll num;
        cin>>num;
        ll d= digit_counter(num);
        ll ten=pow(10,d-1);
        cout<<num-ten;nl;

    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Round_House.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, a, b;
    cin >> n >> a >> b;

    cout << (100 * n + a + b - 1) % n + 1 << endl;    
    
}

"/home/raihan/Desktop/Codeforces/A_Rudolf_and_the_Ticket.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb()               push_back()
#define pp                 pop_back()
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    int n,m,k;
    cin>>n>>m>>k;
    int l[n],r[m];
    forn(i,n)cin>>l[i];
    forn(i,m)cin>>r[i];
    int i,j,cnt=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(l[i]+r[j]<=k)cnt++;
        }
    }
    cout<<cnt;nl;
    
    return 0;
}

int main()
{
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Sakurako_and_Kosuke.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"Sakurako\n"
#define no                 cout<<"Kosuke\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    bool flg = 1;
    int x = 0;
    
    for(int i = 1; abs(x) <= n ; i += 2){
        if(flg)x -= i;
        else x += i;
        flg = !flg;
    }

    if(flg)no;
    else yes;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Sakurako_s_Exam.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int a, b;
    cin >> a >> b;
    b %= 2;

    if(a == 0){
        if(b & 1)no;
        else yes;
        return;
    }
    if(b == 0){
        if(a & 1)no;
        else yes;
        return;
    }
    if(a % 2 == 0 && b % 2 == 0){
        yes;
        return;
    }
    if(b){
        if(a % 2 == 0 && a > 1)yes;
        else no;
        return;
    }
    yes;
    

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Sasha_and_the_Beautiful_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"
int solve()
{
    int n;
    cin>>n;
    int arr[n];
    forn(i,n)cin>>arr[i];

    sort(arr,arr+n);
    ll sum=0;
    for(ll i=1;i<n;i++)
    {
        sum=sum+(arr[i]-arr[i-1]);
    }
    cout<<sum;nl;

    return 0;
}

int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Scrambled_Scrabble.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int func3(int v, int c, int y){

    // cout << v <<" " << c << " " << y << endl;
    bool flg = 0;
    for(int i = 1; i <= y; i++){
        int vv = v + i;
        if((2 * vv) > (c + (y - i))){
            v = vv - 1;
            c += (y - i);
            flg = 1;
            break;
        }
        if((2 * vv) == (c + (y - i))){
            v == vv;
            c += (y - i);
            flg = 1;
            break;
        }
    }
    if(!flg)v += y, y = 0;

    int ans = 0;
    while(c > 1){
        if(v == 0 and y == 0)break;
        if(v > 0){
            ans += 3;
            c -= 2; v--;
            continue;
        }

        if(y > 0){
            ans += 3;
            c -= 2; y--;
        }
    }

    if(c > 0 and v > 0 and y > 0){
        ans += 3;
        c--; v--; y--;
    }
    if(c > 0 and y > 1){
        ans += 3;
        c--; y-= 2;
    }

    while(v > 0){
        if(y < 2)break;
        ans += 3;
        y -= 2; v--;
    }

    while(y >= 3){
        ans += 3;
        y -= 3;
    }


    return ans;
}

int func(int v, int c, int y){

    // cout << v <<" " << c << " " << y << endl;

    int ans = 0;
    while(c > 1){
        if(v == 0 and y == 0)break;
        if(v > 0){
            ans += 3;
            c -= 2; v--;
            continue;
        }

        if(y > 0){
            ans += 3;
            c -= 2; y--;
        }
    }

    if(c > 0 and v > 0 and y > 0){
        ans += 3;
        c--; v--; y--;
    }
    if(c > 0 and y > 1){
        ans += 3;
        c--; y-= 2;
    }

    while(v > 0){
        if(y < 2)break;
        ans += 3;
        y -= 2; v--;
    }

    while(y >= 3){
        ans += 3;
        y -= 3;
    }

    // return ans;
    return max(ans, func3(v, c, y));
}

int func2(string str){
    int n = str.size();
    int v = 0, c = 0, C = 0, nn = 0, gg = 0, ng = 0, y = 0, ans = 0;

    for(auto i : str){
        if(i == 'A' or i == 'E' or i == 'I' or i == 'O' or i == 'U')v++;
        else if(i == 'N')nn++;
        else if(i == 'G')gg++;
        else if(i == 'Y')y++;
        else c++;
    }
    C = c + nn + gg;

    ng = min(nn, gg);
    gg -= ng; nn -= ng;
    c += gg + nn;

    // while(ng >= 2){
    //     if(v == 0 and y == 0)break;
    //     if(v > 0){
    //         ans += 5;
    //         ng -= 2;    v--;
    //         continue;
    //     }

    //     if(y > 0){
    //         ans += 5;
    //         ng -= 2;
    //         y--;
    //     }
    // }

    while(ng > 0 and c > 0 and (y > 0 or v > 0)){
        ans += 4;
        ng--; c--;
        if(v > 0)v--;
        else y--;
    }


    while(c > 1){
        if(v == 0 and y == 0)break;
        if(v > 0){
            ans += 3;
            c -= 2; v--;
            continue;
        }

        if(y > 0){
            ans += 3;
            c -= 2; y--;
        }
    }

    if(c > 0 and v > 0 and y > 0){
        ans += 3;
        c--; v--; y--;
    }
    if(c > 0 and y > 1){
        ans += 3;
        c--; y-= 2;
    }

    while(v > 0){
        if(y < 2)break;
        ans += 3;
        y -= 2; v--;
    }

    while(y >= 3){
        ans += 3;
        y -= 3;
    }

    return ans;
}

void sukuna(int test){
    string str;
    cin >> str;
    int n = str.size();
    int v = 0, c = 0, C = 0, nn = 0, gg = 0, ng = 0, y = 0, ans = 0;

    for(auto i : str){
        if(i == 'A' or i == 'E' or i == 'I' or i == 'O' or i == 'U')v++;
        else if(i == 'N')nn++;
        else if(i == 'G')gg++;
        else if(i == 'Y')y++;
        else c++;
    }
    C = c + nn + gg;
    int ans2 = func(v, C, y);

    ng = min(nn, gg);
    gg -= ng; nn -= ng;
    c += gg + nn;

    while(ng >= 2){
        if(v == 0 and y == 0)break;
        if(v > 0){
            ans += 5;
            ng -= 2;    v--;
            continue;
        }

        if(y > 0){
            ans += 5;
            ng -= 2;
            y--;
        }
    }

    while(ng > 0 and c > 0 and (y > 0 or v > 0)){
        ans += 4;
        ng--; c--;
        if(v > 0)v--;
        else y--;
    }


    while(c > 1){
        if(v == 0 and y == 0)break;
        if(v > 0){
            ans += 3;
            c -= 2; v--;
            continue;
        }

        if(y > 0){
            ans += 3;
            c -= 2; y--;
        }
    }

    if(c > 0 and v > 0 and y > 0){
        ans += 3;
        c--; v--; y--;
    }
    if(c > 0 and y > 1){
        ans += 3;
        c--; y-= 2;
    }

    while(v > 0){
        if(y < 2)break;
        ans += 3;
        y -= 2; v--;
    }

    while(y >= 3){
        ans += 3;
        y -= 3;
    }

    ans = max(ans, ans2);
    ans = max(ans, func2(str));

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Segment_Tree_for_the_Sum.cpp"

"/home/raihan/Desktop/Codeforces/A_September.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n = 12;
    int ans = 0;
    Forn(i,n){
        string str;
        cin >> str;
        if(str.size() == i)ans++;
    }
    cout << ans  << endl;
    
    
}

"/home/raihan/Desktop/Codeforces/A_Sereja_and_Bottles.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    int n, ans = 0;
    cin>>n;
    vector<pair<int, int>> v(n);
    for(int i = 0; i < n; i++){
        cin>>v[i].first>>v[i].second;
    }
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j <n; j++){
            if(i == j)continue;
            if(v[i].second == v[j].first){
                ans ++;
                v[j].first = -1;
            }

        }
    }
    cout<<n - ans<<endl;
    
}

"/home/raihan/Desktop/Codeforces/A_Set.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int l, r, k;
    cin >> l >> r >> k;
    cout << max((r / k - l) + 1, 0ll) << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Setting_up_Camp.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    int a,b,c,ans,s;
    cin>>a>>b>>c;
    s=c+b;
    if(s%3==0)a+=(s/3);
    else if(s%3<=c)a+=(s/3)+1;
    else a=-1;

    cout<<a;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Shohag_Loves_Mod.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin ans;
    ans.pb(1);
    int cur = 2;
    for(int i = 2; i <= n; i++){
        int res = (i - 1) - cur % i;
        cur += res;
        ans.push_back(cur++);
    }
    print(ans);   
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Shuffle_Party.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        int n; cin>>n;
        
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Simple_Design.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()

#define F                  first
#define S                  second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int ckr(int n)
{
    int sum=0;
    while(n>0){ sum+=n%10;  n/=10; }
    return sum;
}

int solve()
{
    int x,k;
    cin>>x>>k;
    while(ckr(x)%k!=0)x++;
    cout<<x;nl;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Monsters_Attack2.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int FOOKING_MONSTER()
{
    ll n,k;
    cin>>n>>k;
    ll a[n],x[n],i;
    forn(i,n)cin>>a[i];
    forn(i,n)cin>>x[i];

    for(i=0;i<n;i++)
    {
        
    }



    return 0;
}
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        FOOKING_MONSTER();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Most_socially_distanced_subsequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n), ans;
    forn(i,n)cin >> v[i];
    
    ans.push_back(v[0]);
    for(int i = 1; i < n; i++){
        if(v[i] > v[i - 1]){
            while(v[i] > v[i - 1] && i < n)i++;
            i--;
            ans.push_back(v[i]);
        }else{
            while(v[i] < v[i - 1] && i < n)i++;
            i--;
            ans.push_back(v[i]);
        }
    }

    cout << ans.size() << endl;
    print(ans);
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Multiplication_and_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N, 1), lazy(4 * N, 1), v(N, 1);

int binExp(int a, int b){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = ((ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }
int mult(int a, int b){return ((a % M) *( b % M )) % M;}

 
int query(int node, int lo, int hi, int l, int r){
 
    if(lazy[node] != 1){
        int dx = lazy[node];
        lazy[node] = 1;
 
        tree[node] += mult(tree[node], dx);
        if(lo != hi){
            lazy[2 * node] = mult(lazy[2 * node], dx);
            lazy[2 * node + 1] = mult(lazy[2 * node + 1], dx);
        }
    }
    
    if(lo > r or hi < l)return 1;
    if(lo >= l and hi <= r)return tree[node];
 
    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);
 
    return (q1 * q2) % M;
}
 
void update(int node, int lo, int hi, int l, int r, int val){
 
    if(lazy[node] != 1){
        int dx = lazy[node];
        lazy[node] = 1;
 
        tree[node] += mult(tree[node], dx);
        if(lo != hi){
            lazy[2 * node] = mult(lazy[2 * node], dx);
            lazy[2 * node + 1] = mult(lazy[2 * node + 1], dx);
        }
    }
    
    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        tree[node] += mult(tree[node], val);
        
        if(lo != hi){
            lazy[2 * node] = mult(lazy[2 * node], val);
            lazy[2 * node + 1] = mult(lazy[2 * node + 1], val);
        }
        return;
    }
 
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);
 
    tree[node] = mult(tree[2 * node], tree[2 * node + 1]);
}
 

int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;

    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l;
            cout << query(1, 0, n - 1, l, l) << endl;
        }
    }    
}

"/home/raihan/Desktop/Codeforces/B_Multiplication_Table.cpp"

"/home/raihan/Desktop/Codeforces/B_M_arrays.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define printmp(m)         for(auto x : m)cout<<x.first<<" "<<x.second<<endl;
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    map<int, int> mp;
    mp[0] = 0;
    forn(i,n){
        lin(x);
        mp[x%m]++;
    }

    int ans = mp[0] > 0;
    for(int i = 1; i <= m/ 2; i++){
        if(mp[i] > 0 && mp[m - i] > 0){
            if(max(mp[i], mp[m - i]) > min(mp[i], mp[m - i]) + 1){
                ans += max(mp[i], mp[m - i]) - min(mp[i], mp[m - i]);
            }else{
                ans ++;
            }
        }
        else {
            ans += max(mp[i], mp[m - i]);
        }
    }
    cout<<ans<<endl;    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Nastia_and_a_Good_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    int x = M, pos = -1;
    forn(i,n){
        cin >> v[i];
        if(v[i] < x) x = v[i], pos = i; 
    }
    cout << n - 1 <<endl;
    for(int i = 0; i < n; i++){
        if(i == pos)continue;
        cout << pos + 1 <<" " << i + 1 <<' ' << x << " " << x + abs(i - pos) <<endl;
    }
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Negative_Prefixes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n), l(n), unlocked;

    forn(i,n)cin >> v[i];
    forn(i,n)cin >> l[i];

    forn(i,n)if(!l[i])unlocked.pb(v[i]);
    sort(all(unlocked));

    for(int i = 0, j = unlocked.size() - 1; i < n; i++){
        if(l[i] == 0){
            v[i] = unlocked[j];
            j--;
        }
    }
    print(v);    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Nene_and_the_Card_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,cnt=0;
    cin>>n;
    vector<ll>v(n);
    forn(i,n)cin>>v[i];
    sort(v.begin(),v.end());

    forn(i,n-1)
    {
        if(v[i]==v[i+1])cnt++;
    }
    cout<<cnt;nl;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_New_Bakery.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    int n , a , b;
    cin>> n >> a >>b ;
    if(a >= b){
        cout<<n * a<<endl;
        return;
    }
    int k , ans , sum, minus;
    k = b - a;
    ans = (n - k) * a;
    if(n < k){
        a = b - n;
        ans = 0;
    }

    sum = (b * (b + 1) / 2);
    minus = a * (a + 1) / 2;
    sum -= minus;
    ans += sum;
    cout<<ans<<endl;


    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_New_Year_s_Number.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(n);
    if(n%2020 <= n/2020)yes;
    else no;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Nice_Matrix.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m;

int func(vector<vin> &v, int i, int j){
    vin a(4);
    a[0] = v[i][j], a[1] = v[i][m - j - 1], a[2] = v[n - i - 1][j], a[3] = v[n - i - 1][m - j - 1];    
    int ans = INF;
    for(auto i : a){
        int sum = 0;
        for(auto j : a){
            sum += abs(i - j);
        }
        ans = min(ans, sum);
    }
    return ans;
}


void sukuna(){
    cin >> n >> m;
    vector<vin> v(n, vin (m));
    forn(i,n)forn(j,m)cin >> v[i][j];
    int ans = 0;

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            ans += func(v, i, j);
        }
    }

    cout<<ans / 4<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Nirvana.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v;
int n;

int op(int x, vin v){
    for(int i = x + 1; i < n; i++){
        v[i] = 9;
    }
    v[x]--;
    if(v[x] == 0 && x > 0)return 0;
    if(v[x] < 0){
        for(int i = x - 1; i >= 0; i--){
            v[x] = 9;
            if(v[i] >= 1){
                v[i]--;
                break;
            }else{
                v[i] = 9;
            }
        }
    }
    int product = 1;
    for(int i = 1; i < n; i++){
        product *= v[i];
    }
    if(v.front() != 0)product *= v.front();
    return product;

}

int32_t main()
{
    fast_in_out;
    string str;
    cin >> str;
    n= str.size();
    forn(i,n)v.push_back(str[i] - '0');
    int ans = 1;
    for(auto i : v)ans *= i;
    forn(i,n){
        ans = max(ans, op(i, v));
    }    

    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/B_Normal_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str;
    cin >> str;
    reverse(all(str));

    for(auto &i : str){
        if(i == 'p') i = 'q';
        else if(i == 'q') i = 'p';
    }

    cout << str << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Not_simply_beatiful_strings.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    string str;
    cin >> str;
    
    map<char, int> mp;
    for(auto i : str)mp[i]++;
    int n = mp.size();

    if(n == 2){
        if(str.front() == str.back())no;
        else yes;
        return 0;
    }
    if(n == 3 or n == 4){
        yes;
        return 0;
    }
    no;    
    
}

"/home/raihan/Desktop/Codeforces/B_Number_Factorization.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e6 + 100;
bool isPrime[N];
vin prime;

void seive(){
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            for(int j = i * i; j < N; j += i){
                isPrime[j] = 1;
            }
        }
    }
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            prime.pb(i);
        }
    }
}

void sukuna(){
    lin(n);
    map<int, int> pm;
    int nn = n;
    for(int i = 0; prime[i] * prime[i] < nn && i < prime.size(); i++){
        if(n % prime[i] == 0){
            int p = prime[i];
            while(n % p == 0){
                n /= p;
                pm[p]++;
            }
        }
    }
    // mprint(pm);
    int ans = 0;

    bool ck = true;
    while(ck){
        ck = false;
        int sum = 1;
        for(auto &i : pm){
            if(i.second == 0)continue;
            ck = true;
            sum *= i.first;
            i.second--;
        }
        if(sum > 1)ans += sum;
    }
    if(ans == 0)ans = nn;
    cout<<ans<<endl;

    
    
}

int32_t main(){
    fast_in_out;
    seive();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Obtain_Two_Zeroes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int a, b;
    cin >> a >> b;
    if(a > b)swap(a, b);
    if(a == 0 && b == 0){yes; return;}
    if((a + b) % 3 == 0){
        if(b <= a * 2)yes;
        else no;
    }else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Odd_sum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin v(n), b, a;
    forn(i,n){
        cin >> v[i];
        if(v[i] >= 0)b.pb(v[i]);
        else a.pb(v[i]);
    }
    if(accumulate(all(b), 0ll) & 1){
        cout << accumulate(all(b), 0ll) << endl;
        return 0;
    }
    sort(all(a), greater<>());
    int num = 0;
    for(auto i : a){
        if(i & 1){
            num = i;
            break;
        }
    }
    sort(all(b));
    int num2 = 0;
    for(auto i : b){
        if(i & 1){
            num2 = i;
            break;
        }
    }
    num2 *= -1;

    int sub = max(num, num2);
    if(sub == 0)sub = min(num, num2);

    cout << accumulate(all(b), sub) << endl;

    
    
}

"/home/raihan/Desktop/Codeforces/B_Odd_Sum_Segments.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    int sum = 0, cnt = 0, i = 0;
    vin ans;
    for(; i < n; i++){
        if(cnt == k - 1)break;
        sum += v[i];
        if(sum & 1){
            sum = 0;
            cnt++;
            ans.push_back(i + 1);
            continue;
        }
    }

    for(; i < n; i++)sum += v[i];
    if(sum & 1)ans.push_back(n);

    if(ans.size() != k){
        no;
    }else{
        yes;
        print(ans);
    }

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Odd_Swap_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin even, odd;
    forn(i,n){
        lin(x);
        if(x & 1)odd.pb(x);
        else even.pb(x);
    }

    for(int i = 1; i < odd.size(); i++){
        if(odd[i] < odd[i - 1]){
            no;
            return;
        }
    }
    for(int i = 1; i < even.size(); i++){
        if(even[i] < even[i - 1]){
            no;
            return;
        }
    }
    yes;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Omkar_and_Last_Class_of_Math.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


class SEIVE{
    private:
        int N = 1e6;
        vector<bool> isPrime;
    public:
        vector<int> prime_numbers, lowest_prime, heighest_prime;
        
        SEIVE(){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            heighest_prime = lowest_prime;
            isPrime = vector<bool> (N);
            generate();
        }
    
        SEIVE(int N){
            N++; this->N = N;
            lowest_prime = vector<int> (N);
            heighest_prime = lowest_prime;
            isPrime = vector<bool> (N);
            generate();
        }

        vector<int> primeFactors(int n){
            vector<int> temp;
            while(n > 1){
                int pm = lowest_prime[n];
                while(n % pm == 0){
                    n /= pm;
                    temp.push_back(pm);
                }
            }
            return temp;
        }

        vector<int> segSeive(int l, int r){
            int n = r - l + 1;
            vector<bool> isPrime(n + 1);
            vector<int> primes;

            for(int i = 0; prime_numbers[i] * prime_numbers[i] <= r; i++){
                int st = ceil(l * 1.0 / prime_numbers[i]) * prime_numbers[i];
                
                for(int j = st; j <= r; j += prime_numbers[i]){
                    if(j == prime_numbers[i])continue;
                    isPrime[j - l] = true;
                }
            }

            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        primes.push_back(i + l);
                    }
                }
            }
            return primes;
        }
        
    private:
        void generate(){
            isPrime[0] = isPrime[1] = 1;
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lowest_prime[i] = i;
                    heighest_prime[i] = i;
    
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = 1;
                        heighest_prime[j] = i;
                        if(lowest_prime[j] == 0){
                            lowest_prime[j] = i;
                        }
                    }
                }
            }
    
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    prime_numbers.push_back(i);
                }
            }
        }
};

SEIVE sv(1e5);


void sukuna(){
    int n, x, div = -1;
    cin >> n;

    for(int i = 0; sv.prime_numbers[i] * sv.prime_numbers[i] <= n; i++){
        if(n % sv.prime_numbers[i] == 0){
            div = sv.prime_numbers[i];
            break;
        }
    }
    if(div == -1){
        cout << 1 <<" " << --n << endl;
        return;
    }
    x = n / div;
    cout << x <<" " << (div - 1) * x << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_One_Bomb.cpp"
#include <bits/stdc++.h>
using namespace std;
int n, m, i, j, co, a[1000], b[1000], c[1000][1000];
char k;
int main()
{

    cin >> n >> m;
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
        {
            cin >> k;
            if (k == '*')
            {
                co++;
                a[i]++;
                b[j]++;
                c[i][j]++;
            }
        }
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            if (co - a[i] - b[j] + c[i][j] == 0)
            {
                cout << "YES" << endl
                     << i + 1 << " " << j + 1;
                return 0;
            }

    cout << "NO";
}

"/home/raihan/Desktop/Codeforces/B_Ordinary_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

ll dig(ll n, ll* l)
{
    int d=0;
    while(n>0)
    {
        if(n<10)*l=n;
        n/=10; d++;
    }
    return d;
}

ll ock(ll *l,ll d)
{
    int x=10, y=*l;
    forn(i,d-1)
    {
        *l+=y*x;
        x*=10;
    }
    return *l;
}

int solve()
{
    ll n,d,l,ans=0; cin>>n;
    d=dig(n,&l);
    if(n<=9)cout<<n<<endl;
    else
    {
        ans=(9*(d-1))+(l-1);
        if(n>=ock(&l,d))ans++;
        cout<<ans;nl;
    }
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Product_1_Modulo_N.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class SeiveAlgo{
    private:
        //Variables
        int N = 1e6, factors_size,  num_cnt = 0, dp_cnt = 0;
        vector<int> lp;
        vector<bool>isPrime;
        set<int> divisors;
        struct grp{int pm, cnt;};
        vector<grp>factors;

    public:
        vector<int>primes;

        SeiveAlgo(int n = 1e6){
            N = n + 100;
            lp = vector<int> (N);
            isPrime = vector<bool> (N);
            generatePrimes();
        }

        vector<int> primeFactors(int n){
            vector<int> v;
            factors.clear();
            while(n > 1){
                int pm = lp[n], cnt = 0;
                while(n % pm == 0){
                    v.push_back(pm);
                    n /= pm;
                    cnt++;
                }
                factors.push_back({pm, cnt});
            }
            return v;
        }

        //All the divisors of a number
        set<int> allDivisors(int n){
            primeFactors(n);
            factors_size = factors.size();
            divisors.clear();
            allDivisorsGenerator(0, 1);
            return divisors;
        }

    private:
        //Segment Seive
        vector<int> segSeive(int l, int r){
            if(l > r)swap(l, r);
            int n = r - l + 1;
            vector<bool>isPrime(n + 1);
            vector<int>segPrimes;

            for(int i = 0; primes[i] * primes[i] <= r; i++){
                int st = ceil(l * 1.0 / primes[i]) * primes[i];
                for(int j = st; j <= r; j += primes[i]){
                    if(j == primes[i])continue;
                    isPrime[j - l] = true;
                }
            }
            
            for(int i = 0; i < n; i++){
                if(!isPrime[i]){
                    if(i + l > 1){
                        segPrimes.push_back(i + l);
                    }
                }
            }
            return segPrimes;
        }

    private:
        void allDivisorsGenerator(int currIndex, int currDivisor){
            dp_cnt++;
            if(currIndex == factors_size){
                num_cnt++;
                divisors.insert(currDivisor);
                return;
            }
            for(int i = 0; i <= factors[currIndex].cnt; i++){
                allDivisorsGenerator(currIndex + 1, currDivisor);
                currDivisor *= factors[currIndex].pm;
            }
        }

        void generatePrimes(){
            isPrime[0] = isPrime[1] = true;
            for(int i = 2; i < N; i++){
                if(!isPrime[i]){
                    lp[i] = i;
                    for(int j = i + i; j < N; j += i){
                        isPrime[j] = true;
                        if(lp[j] == 0)lp[j] = i;
                    }
                }
            }
            for(int i = 2; i < N; i++){
                if(!isPrime[i])primes.push_back(i);
            }
        }
};

SeiveAlgo sv(N);

void sukuna(int test){
    lin(n);

    vin fact = sv.primeFactors(n);
    set<int> s;
    for(int i = 1; i < n; i++)s.insert(i);

    for(auto i : fact){
        for(int j = i; j < n; j += i){
            if(s.count(j)){
                s.erase(j);
            }
        }
    }

    int ans = 1;
    for(auto i : s){
        ans = ans * i % n;
    }

    if(ans != 1)s.erase(n - 1);

    cout << s.size() << endl;
    print(s);    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Product_of_Three_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,a[3]={0},j=0;
    cin>>n;

    for(ll i=2;i<sqrt(n);i++)
    {
        if(n%i==0)
        {
            a[j]=i;
            j++;
            n/=i;
        }
        if(a[1]!=0)break;
    }
    
    if(a[1]==0 || a[1]==n || a[0]==n){no; return 0;}
    yes;
    cout<<a[0]<<" "<<a[1]<<" "<<n<<"\n";

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}


"/home/raihan/Desktop/Codeforces/C_Quests.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k, ans = 0;
    cin >> n >> k;
    vin a(n), b(n), v(n);
    cin >> a[0];
    for(int i = 1; i < n; i++){
        cin >> a[i];
        a[i] += a[i - 1];
    }
    forn(i,n)cin >> b[i];

    v[0] = b[0];
    for(int i = 1; i < n; i++){
        v[i] = max(v[i - 1], b[i]);
    }

    for(int i = 0; i < n && i < k; i++){

        ans = max(ans,a[i] + v[i] * (k - i - 1));
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Raspberries.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int N = 1e5 +  10;

void sukuna()
{
    int n, k;
    cin>>n>>k;
    int ans = 10, even = 0, odd = 0;
    for(int i = 0; i < n; i++){
        lin(x);
        if(x & 1)odd ++;
        else even++;
        if(x % k == 0)ans = 0;
        ans = min(ans, k - (x % k));
    }
    if(k == 4){
        if(even > 1)ans = 0;
        if(even == 1 && odd > 0)ans = min(ans, 1LL);
        if(odd > 1)ans = min(ans, 2LL);
    }
    cout<<ans<<endl;
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Registration_system.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;

    lin(n); string str;
    map<string,int>m;
    forn(i,n)
    {
        cin>>str;
        if(m[str]==0){cout<<"OK"; m[str]++;}
        else cout<<str<<m[str]++;
        nl;
    }    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Removal_of_Unattractive_Pairs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    int nn = n;
    string str;
    cin >> str;
    map<char, int>m;
    forn(i,n)m[str[i]]++;
    int mx = 0; char c;
    for(auto a : m){
        if(a.second > mx){
            mx = a.second;
            c = a.first;
        }
    }
    n -= mx;
    mx -= n;
    if(mx < 0)mx = 0;
    if(nn & 1 && mx <= 0)mx++;
    cout<<mx<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Removing_Smallest_Multiples.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int ans = 0;

    for(int i = 1; i <= n; i++){
        for(int j = i; j <= n; j += i){
            if(str[j - 1] == '1')break;
            if(str[j - 1] == '0')ans += i;
            str[j - 1] = 'X';
        }
    }
    cout<<ans<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Replace_To_Make_Regular_Bracket_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"Impossible\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string fw = "[{(<";
string rev = "]})>";

bool ck(char c){
    for(auto i : fw)if(c == i)return true;
    return false;
}

char alt(char c){
    if(c == '(')return ')';
    if(c == '[')return ']';
    if(c == '{')return '}';
    if(c == '<')return '>';
}


int32_t main(){
    fast_in_out;

    string str;
    cin >> str;
    int n = str.size();  
    stack<char> st;

    int ans = 0, sum = 0, tramp = 0;


    for(int i = 0; i < n; i++){
        if(sum == 0){
            if(ck(str[i]))st.push(str[i]), sum++;
            else{
                no;
                return 0;
            }
            continue;
        }

        if(ck(str[i])){
            st.push(str[i]);
            sum++;
        }else{
            if(alt(st.top()) == str[i]){
                sum--;
                st.pop();
            }else{
                ans++;
                sum--;
                st.pop();
            }
        }
    }  

    if(st.size() > 0)no;
    else cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Roads_in_Berland.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vector<vin> graph(n, vin (n)), temp;

    forn(i, n){
        forn(j, n){
            cin>>graph[i][j];
        }
    }
    lin(k);

    // return;
    while(k--){
        int a, b, c;
        cin >> a >> b >> c;
        a--; b--;

        int sum = 0;
        forn(i,n){
            forn(j, n){
                graph[i][j] = min(graph[i][j], graph[i][a] + graph[b][j] + c);
                graph[i][j] = min(graph[i][j], graph[i][b] + graph[a][j] + c);
                sum += graph[i][j];
            }
        }
        cout << sum / 2 <<" ";
    }nl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Robin_Hood_in_Town.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    if(n < 3){
        cout << - 1 << endl;
        return;
    }
    sort(all(v));
    int sum = accumulate(all(v), 0ll);
    int avg = (v[n / 2] * n * 2) - sum;

    if(avg < 0)avg = 0;
    else avg++;

    cout << avg << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Rotation_Matching.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    map<int, int> a, b, ans;
    forn(i,n){
        lin(x);
        a[x] = i + 1;
    }
    forn(i,n){
        lin(x);
        b[x] = i + 1;
    }
    
    for(int i = 1; i <= n; i++){
        if(b[i] < a[i]){
            ans[a[i] - (n + b[i])]++;
        }else{
            ans[a[i] - b[i]]++;
        }
    }
    int mx = 0;
    for(auto i : ans){
        mx = max(mx, i.second);
    }

    cout << mx << endl;


}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Row_GCD.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, m, mn = INF;
    cin >> n >> m;
    vin a(n), b(m);

    forn(i,n)cin >> a[i], mn = min(mn, a[i]);
    forn(i,m)cin >> b[i];

    int gc = 0;
    forn(i,n)gc = __gcd(gc, a[i] - mn);

    for(int i = 0; i < m; i++){
        cout << gcd(gc, mn + b[i])<<" ";
    }    
    nl;    
}

"/home/raihan/Desktop/Codeforces/C_Rudolf_and_the_Ugly_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb()               push_back()
#define pp                 pop_back()
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    int n,i,cnt=0; cin>>n;
    string str;
    cin>>str;
    for(i=0;i<n;i++)
    {
        if(str[i]=='m' && str[i+1]=='a' && str[i+2]=='p' && str[i+3]=='i' && str[i+4]=='e')
        {
            cnt++;
            str[i+2]='0';
        }
        else if(str[i]=='m' && str[i+1]=='a' && str[i+2]=='p')
        {
            cnt++;
            str[i+1]='0';
        }

        else if(str[i]=='p' && str[i+1]=='i' && str[i+2]=='e')
        {
            cnt++;
            str[i+1]='0';
        }
    }
    cout<<cnt;nl;

    return 0;
}
int main()
{
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Rumor.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5 + 100;
vin graph[N];
bool vis[N];
vin c;

void dfs(int vertex){
    if(vis[vertex])return;
    vis[vertex] = true;
    c.push_back(vertex);
    for(auto child : graph[vertex]){
        dfs(child);
    }
}


void sukuna(){
    int n, m;
    cin >> n >> m;
    vin v(n + 1);
    Forn(i,n)cin >> v[i];
    set<int> s;

    forn(i,m){
        int v1, v2;
        cin >> v1 >> v2;
        s.insert(v1); 
        s.insert(v2);

        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }
    vector<vin> cc;
    for(auto a : s){
        if(vis[a])continue;
        c.clear();
        dfs(a);
        cc.push_back(c);
    }

    int ans = 0;
    
    for(auto c : cc){
        int mn = INF;
        for(auto a : c){
            mn = min(mn, v[a]);
        }
        ans += mn;
    }

    for(int i = 1; i <= n; i++){
        if(!vis[i])ans += v[i];
    }

    cout<<ans<<endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sakurako_s_Field_Trip.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1);
    Forn(i,n)cin >> v[i];{
    for (int i = 2; i <= n/2; i++) 
        if (v[i] == v[i - 1] or v[n - i + 1] == v[n - i + 2]){ 
            swap(v[i], v[n - i + 1]); 
        }
    }
    int ans = 0;
    for(int i = 1; i <= n; i++)if(v[i] == v[i - 1])ans++;
    cout << ans << endl;
}


int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sasha_and_the_Casino.cpp"
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i, e) for (ll i = 0; i < e; i++)
#define rforn(i, s) for (ll i = s - 1; i >= 0; i--)
#define yes cout << "YES" << endl
#define no cout << "NO" << endl
#define nl cout << "\n"
int solve()
{
    int k, x, a;
    cin >> k >> x >> a;

    ll n = a / (k + x);
    if(n<=0)n=1;
    cout<<n;nl;
    
    if ((a - (n *x)) > 1)
    {
        if (n * k >=n * (x - 1))
            yes;
        else
            no;
    }
    else no;
}

int main()
{
    int test;
    cin >> test;
    while (test--)
    {
        solve();
    }
    return 0;
}

// Thanks for watching

"/home/raihan/Desktop/Codeforces/C_Schedule_Management.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m;
map<int, int> mp;

bool chk(int hrs){
    int rem = 0, extra = 0;
    vin ex;
    for(auto i : mp){
        rem += max(0ll, i.second - hrs);
        int res = max(0ll, hrs - i.second);
        extra += res / 2;
    }

    rem -= extra;

    return rem <= 0;
}

void sukuna(){
    mp.clear();
    cin >> n >> m;
    forn(i,m){
        lin(x);
        mp[x]++;
    }  
    for(int i = 1; i <= n; i++)mp[i];  

    int lo = 1, hi = m, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(!chk(mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    if(chk(lo - 1))lo--;

    cout << lo << endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Scoring_Subsequences.cpp"

"/home/raihan/Desktop/Codeforces/C_Seat_Arrangements.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, m, k;

int func(vin temp){
    int ans = 0;
    for(auto i : temp){
        ans += (i - k) + 1;
    }
    return ans;
}


int32_t main(){
    fast_in_out;
    cin >> n >> m >> k;
    vector<string>v(n);
    forn(i,n)cin >> v[i];

    int ans = 0;

    vin temp;
    for(int i = 0; i < n; i++){
        int cnt = 0;
        for(int j = 0; j < m; j++){
            if(v[i][j] == '*'){
                if(cnt >= k){
                    temp.push_back(cnt);
                }
                cnt = 0;
                continue;
            }
            cnt++;
        }
        if(cnt >= k){
            temp.push_back(cnt);
        }
    }
    ans += func(temp);
    temp.clear();


    for(int i = 0; i < m; i++){
        int cnt = 0;
        for(int j = 0;j < n; j++){
            if(v[j][i] == '*'){
                if(cnt >= k){
                    temp.push_back(cnt);
                }
                cnt = 0;
                continue;
            }
            cnt++;
        }
        if(cnt >= k){
            temp.push_back(cnt);
        }
    }
    ans += func(temp);

    if(k == 1)ans /= 2;
    cout << ans << endl;
    
    
}

"/home/raihan/Desktop/Codeforces/C_Sequence.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 5e3 + 100;

int n, v[N];

int recur(int ind){

    
}

void sukuna(int test){
    cin >> n;
    forn(i,n)cin >> v[i];
    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sequence_Pair_Weight.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1);
    Forn(i,n)cin >> v[i];
    map<int, int> mp;
    int ans = 0;
    for(int i = 1; i <= n; i++){
        ans += mp[v[i]] * (n - i + 1);
        mp[v[i]] += i;
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sequence_Transformation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n;

int func(vin v){
    int cnt = 1;
    for(auto i : v){
        if(i == 1 || i == n)continue;
        cnt++;
    }
    return cnt;
}

void sukuna(){
    cin >> n;
    vin v(1);
    map<int, vin> mp;
    forn(i,n){
        lin(x);
        if(v.back() != x)v.push_back(x);
    }
    n = v.size(); n--;
    
    for(int i = 1; i <= n; i++)
        mp[v[i]].push_back(i);
    

    if(mp.size() == 1){
        cout << 0 <<endl;
        return;
    }

    int ans = INF;
    for(auto i : mp)
        ans = min(ans, func(i.se));        

    cout << ans <<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Sereja_and_Brackets.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define printpr(p)         cout << p.first <<" " << p.second << endl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e6 + 100;

struct grp{int open = 0, close = 0, val = 0;};

string str;
vector<grp> tree(4 * N);

grp query(int node, int lo, int hi, int l, int r){

    if(hi < l or lo > r)return {0, 0, 0};
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    grp a = query(2 * node, lo, mid, l, r);
    grp b = query(2 * node + 1, mid + 1, hi, l, r);
    grp q;

    if(a.open > 0 and b.close > 0){
        int mn = min(a.open, b.close);
        q.val += mn * 2;
        a.open -= mn;
        b.close -= mn;
    }
    q.open += a.open + b.open;
    q.close += a.close + b.close;
    q.val += a.val + b.val;
    
    return q;
}


void build(int node, int lo, int hi){

    if(lo == hi){
        if(str[lo] == '(')tree[node].open++;
        if(str[lo] == ')')tree[node].close++;
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    grp a = tree[2 * node];
    grp b = tree[2 * node + 1];

    if(a.open > 0 and b.close > 0){
        int mn = min(a.open, b.close);
        tree[node].val += mn * 2;
        a.open -= mn;
        b.close -= mn;
    }
    tree[node].open += a.open + b.open;
    tree[node].close += a.close + b.close;
    tree[node].val += a.val + b.val; 
}


void sukuna(int test){
    cin >> str;
    int n = str.size();

    stack<char> st, temp;

    for(int i = 0; i < n; i++){
        if(str[i] == '(')st.push('(');
        else{
            if(!st.empty())st.pop();
            else str[i] = '0';
        }
    }
    st = temp;
    for(int i = n - 1; i >= 0; i--){
        if(str[i] == '0')continue;
        if(str[i] == ')')st.push(')');
        else{
            if(!st.empty())st.pop();
            else str[i] = '0';
        }
    }

    build(1, 0, n - 1);

    lin(q);
    while(q--){
        int l, r;
        cin >> l >> r;

        grp ans = query(1, 0, n - 1, --l, --r);

        cout << ans.val << endl;
    }
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Reverse_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;
string a, b;
bool isMatch = false;

void recur(int i, int j){
    if(j == m){
        isMatch = true;
        return;
    }
    if(i >= n)return;
    if(a[i] != b[j])return;

    recur(i + 1, j + 1);
    
    bool ck = 1;
    for(;i >= 0 && j < m; i--, j++){
        if(a[i] != b[j]){
            ck = false;
            break;
        }
    }

    if(j != m)ck = false;
    if(ck){
        isMatch = true;
        return;
    }

}


void sukuna(){
    isMatch = false;
    cin >> a >> b;
    n = a.size(), m = b.size();

    for(int i = 0; i < n; i++){
        if(a[i] == b[0]){
            recur(i, 0);
        }
    }

    if(isMatch)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Rising_Sand.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,k,cnt=0;
    cin>>n>>k;
    vector<ll>v(n);
    forn(i,n)cin>>v[i];

    for(int i=1;i<n-1;i++) 
        if(v[i]>v[i-1]+v[i+1])cnt++;

    if(k!=1)cout<<cnt;
    else cout<<(n%2==0?(n-2)/2:(n-1)/2); nl;  

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Robin_Hood_and_the_Major_Oak.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int sum(int n){
    return n * (n + 1) / 2;
}

void sukuna(){
    int n, k;
    cin >> n >> k;
    n -= k; n++;
    int ans = sum(n) - sum(n - k);

    if(ans & 1)no;
    else yes;

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Rock_and_Lever.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int bitcnt(int a){
    int cnt = 0;
    while(a > 0){
        a >>= 1;
        cnt++;
    }
    return cnt;
}

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> m;
    forn(i, n)cin >> v[i];
    
    for(int i = 0; i <n; i++){
        m[bitcnt(v[i])]++;
    }

    int ans = 0;
    for(auto a : m){
        if(a.second > 0){
            ans += (a.second - 1) * a.second / 2;
        }
    }

    cout<<ans<<endl;  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Sakurako_and_Water.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    int sum = 0;
    vector<vin> v(n, vin(n));
    forn(i,n){
        forn(j,n){
            cin >> v[i][j];
        }
    }
    
    forn(i,n){
        forn(j,n){
            if(v[i][j] >= 0)continue;
            int need = abs(v[i][j]);
            sum += need;

            forn(k, n){
                if(i + k < n and j + k < n){
                    v[i + k][j + k] += need;
                }
            }
        }
    }
    cout << sum << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Sale.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int
#define nl cout<<"\n"

int main()
{
    int n,m,i,ans=0;
    cin>>n>>m;
    int arr[n];
    for(i=0;i<n;i++)cin>>arr[i];
    sort(arr,arr+n);

    for(i=0;i<m;i++)
    {
        if(arr[i]<0)ans=ans+arr[i];
    }
    cout<<ans*-1<<endl;

    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Same_Parity_Summands.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    if(n < k){
        no; return;
    }
    if(n%2 == 0 && k % 2 == 1){
        if(k > n / 2)no;
        else{
            yes;
            int sum = 0;
            for(int i = 0; i < k - 1; i++){
                cout<<2<<' ';
                sum += 2;
            }
            cout<<n - sum <<endl;
        }
        return;
    }

    if(n %2 == 1 && k % 2 == 0){
        no;
        return;
    }
    
    yes;
    int sum = 0;
    for(int i = 0; i < k - 1; i++){
        cout<<1<<' ';
        sum ++;
    }
    cout<<n - sum<<endl;
    return;
    


    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Sasha_and_the_Drawing.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"
int solve()
{
    int n,k;
    cin>>n>>k;
    ll x=(4*n)-2,y=(4*n)-4,ans;

    if(k>=y)ans=y/2+(k-y);
    else if(k%2==0)ans=k/2;
    else if(k%2==1)ans=(k/2)+1;
    cout<<ans; nl;


    return 0;
}

int main()
{
    int test; cin>>test;
    while(test--)
    {
        solve();
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Saving_the_City.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int a, b, n;
string v;

int recur(int i){
    if(i >= n){
        if(v[n - 1] == '0')return 0;
        else return a;
    }

    int cnt = 0;
    for(; i < n; i++){
        bool ck = 0;
        if(v[i] == '0'){
            ck = 1;
            for(; i < n; i++){
                if(v[i] == '0')cnt++;
                else break;
            }
        }
        if(ck)break;
    }

    int x = recur(i);
    return a + min(max((b * cnt + x - a), 0ll), x);
}


void sukuna(){
    cin >> a >> b;
    cin >> v; 
    n = v.size();
    for(int i = 0; i < n; i++){
        if(v[i] == '1'){
            cout<<recur(i)<<endl;
            return;
        }
    }
    cout<<0<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Scale.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;

    vector<string> v(n), ans(n / k);
    forn(i,n)cin >> v[i];

    for(int i = 0, l = 0; i < n; i+= k, l++){
        for(int j = 0; j < n; j+= k){
            ans[l].push_back(v[i][j]);
        }
    }

    for(auto a : ans)cout<<a<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Seating_in_a_Bus.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    set<int> s;
    s.insert(v[0]);

    for(int i = 1; i < n; i++){
        if(s.count(v[i] + 1) == 1 || s.count(v[i] - 1) == 1)s.insert(v[i]);
        else{
            no;
            return;
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Segment_Occurrences.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main()
{
    fast_in_out;
    int n, m, q;
    cin >>  n >> m >> q;
    string a, b;
    cin >> a >> b;
    vin hash(n + 1), rhash(n + 1);

    for(int i = 0; i < n; i++){
        if(a[i] != b[0])continue;
        
        int j = i; 
        bool flg = 1;
        for(int k = 0; k < m; k++,  j++){
            if(a[j] != b[k]){flg = 0; break;}
        }
        if(!flg)continue;
        hash[i + m - 1] = 1;
        rhash[i + 1] = -1;

    }

    for(int i = 1; i < n; i++){
        hash[i] += hash[i - 1]; 
        rhash[i] += rhash[i - 1];
    }

    while(q--){
        int l, r;
        cin >> l >> r;
        l--; r--;
        cout << max(hash[r] + rhash[l], 0ll) << endl;
    }
}

"/home/raihan/Desktop/Codeforces/B_Sequence_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n;
    vin v(n), ans;
    forn(i,n)cin >> v[i];
    ans.pb(v[0]);
    for(int i = 1; i < n; i++){
        if(v[i] >= v[i - 1]){
            ans.pb(v[i]);
            continue;
        }
        ans.pb(v[i]);
        ans.pb(v[i]);        
    }

    cout<<ans.size()<<endl;
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Sereja_and_Suffixes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    int n, m;
    cin >> n >> m;
    vin v(n), dist(n);
    unordered_set<int> s;
    forn(i,n){
        cin>>v[i];
    }
    rforn(i, n){
        s.insert(v[i]);
        dist[i] = s.size();
    }

    while(m --){
        lin(x);
        cout<<dist[x - 1]<<endl;
    }
    
    
}

"/home/raihan/Desktop/Codeforces/B_Sets_and_Union.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vector<set<int>> v(n);
    set<int> s;
    forn(i,n){
        lin(m);
        while(m--){
            lin(x);
            v[i].insert(x);
            s.insert(x);
        }
    }

    int ans = 0;
    for(auto a : s){
        set<int> temp;
        for(int i = 0; i < n; i++){
            if(v[i].count(a))continue;
            for(auto x : v[i]){
                temp.insert(x);
            }
        }
        int sz = temp.size();
        ans = max(ans, sz);
    }

    cout<<ans<<endl;  
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Sending_a_Sequence_Over_the_Network.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, dp_cnt, chk = false;
vin v, dp(N, -1), mx(N);

int recur(int ind){ 
    if(chk)return 1;
    if(ind >= n){return chk = 1;}
    if(dp[ind] != -1)return dp[ind];
    
    int a = 0, b = 0, cnt = 0;
    if(ind + v[ind] < n)a = recur(ind + v[ind] + 1);
    
    for(int i = ind; i < n; i++, cnt++){
        if(cnt != v[i])continue;
        if(cnt > mx[i])break;
        b |= recur(i + 1);
        if(i == n - 1) b = 1;
    }

    return dp[ind] = (a | b);
}

void reset(){
    v.clear();
    chk = false;
    for(int i = 0; i < n + 10; i++){
        dp[i] = -1;
        mx[i] = 0;
    }
}

void sukuna(int test){
    cin >> n;
    reset();
    forn(i,n){
        lin(x);
        v.push_back(x);
    }
    rforn(i,n){
        mx[i] = max(mx[i + 1], v[i]);
    }

    if(recur(0))yes;
    else no;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Special_Elements.cpp"
#include<bits/stdc++.h>
using namespace std;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n + 1), a(n +1);
    Forn(i,n){
        cin >> a[i];
        v[i] = v[i - 1] + a[i];
    }
    vector<bool> mp(n + 1, 0);


    for(int i = 0; i <= n  - 2; i++){
        for(int j = i + 2; j <= n; j++){
            int dif = v[j] - v[i];
            if(dif > n)continue;
            mp[dif] = 1;
        }
    }
    int ans = 0;

    Forn(i,n){
        if(mp[a[i]]){
            ans++;
        }
    }

    cout<<ans<<endl;


}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Split_Into_Two_Sets.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vector<vin> graph;
bool vis[N], isLoopExists = false;


void dfs(int vertex, int par = 0){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        if(child == par)continue;
        if(vis[child]){
            isLoopExists = true;
            continue;
        }

        dfs(child, vertex);
    }
}


void sukuna(){
    lin(n);
    vector<pr> v(n);
    vector<vin> gph(n + 1);
    map<int, int> mp;
    forn(i,n){

        cin >> v[i].first >> v[i].second;
        mp[v[i].first]++;
        mp[v[i].second]++;
        if(v[i].first > v[i].second)swap(v[i].first, v[i].second);
        vis[i + 1] = false;
    }

    for(auto i : mp){
        if(i.second > 2){
            no;
            return;
        }
    }
    sort(all(v));
    v.push_back({0, 0});
    set<int> s;
    for(int i = 0; i < n; i++){
        if(v[i] == v[i + 1]){i++; continue;}
        gph[v[i].first].push_back(v[i].second);
        gph[v[i].second].push_back(v[i].first);
        s.insert(v[i].first);
        s.insert(v[i].second);
    }
    graph = gph;
    if(s.empty()){
        yes;
        return;
    }
    
    // for(auto a : gph){
    //     print(a);
    // }

    int cnt = 0;
    for(auto i : s){
        if(vis[i])continue;
        isLoopExists = false;
        dfs(i);
        if(isLoopExists)cnt++;
    }

    // cout<<cnt<<endl;
    if(cnt > 1)no;
    else yes;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_The_Humanoid.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, h,rh;
    cin >> n >> h; rh = h;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int g = 2, b = 1;

    int ans = 0;
    for(int i = 0; i < n; ){
        if(v[i] < h){
            h += (v[i] / 2);
            i++;
            ans++;
            continue;
        }
        if(g > 0){
            h *= 2;
            g--;
        }else if(b > 0){
            h *= 3;
            b--;
        }else break;
       
    }

    int ans1 = 0; h = rh; g = 2, b = 1;

    for(int i = 0; i < n; ){
        if(v[i] < h){
            h += (v[i] / 2);
            i++;
            ans1++;
            continue;
        }
        if(b > 0){
            h *= 3;
            b--;
        }else if(g > 0){
            h *= 2;
            g--;
        }else break;
    }

    int ans2 = 0; h = rh; g = 2, b = 1;

    for(int i = 0; i < n; ){
        if(v[i] < h){
            h += (v[i] / 2);
            i++;
            ans2++;
            continue;
        }
        if(g == 2){
            h*= 2;
            g--;
            continue;
        }
        if(b > 0){
            h *= 3;
            b--;
            continue;
        }
        if(g == 1){
            h *= 2;
            g--;
            continue;
        }
        break;
    }

    cout<<max(ans, max(ans1, ans2))<<endl;  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_The_Lakes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e3 + 10;
int n, m;
vector<vin>graph;
vector<vector<bool>>vis(N, vector<bool> (N));
int sum = 0;

void dfs(int i, int j){
    if(i < 0 || i >= n)return;
    if(j < 0 || j >= m)return;
    if(graph[i][j] == 0)return;
    if(vis[i][j])return;

    vis[i][j] = true;
    sum += graph[i][j];


    dfs(i + 1, j);
    dfs(i - 1, j);
    dfs(i, j + 1);
    dfs(i, j - 1);
}

void sukuna(){
    cin >> n >> m;
    vector<vin> v(n, vin (m));
    forn(i,n){
        forn(j, m){
            cin >> v[i][j];
            vis[i][j] = false;
        }
    }
    graph = v;
    int ans = 0;

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(vis[i][j])continue;
            sum = 0;
            dfs(i, j);
            ans = max(ans, sum);
        }
    }

    cout<<ans<<endl;
}


int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Three_Strings.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e3 + 100;

string a, b, c;
int l, m, n;

int dp[N][N];


int recur(int i, int j){

    if(j >= n)return 0;
    if(dp[i][j] != -1)return dp[i][j];


    int k = j - i;
    int x = 0, y = 0;

    if(k < l)x = (a[k] == c[j]) + recur(i, j + 1);
    if(i < m)y = (b[i] == c[j]) + recur(i + 1, j + 1);

    return dp[i][j] = max(x, y);
}

void reset(){
    for(int i = 0; i <= m; i++){
        for(int j = 0; j <= n; j++){
            dp[i][j] = -1;
        }
    }
}

void sukuna(int test){
    cin >> a >> b >> c;
    l = a.size(), m = b.size(), n = c.size();
    reset();
    cout << n - recur(0, 0) << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Tree_Pruning.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 5e5 + 100;

vector<int> graph[N], depth(N), max_depth(N), dis(N);
int n,m;

void dfs(int vertex = 1, int par = 0){

    depth[vertex] = depth[par] + 1;
    max_depth[vertex] = depth[vertex];
    for(auto child : graph[vertex]){
        if(child == par)continue;
        dfs(child, vertex);
        max_depth[vertex] = max(max_depth[vertex], max_depth[child]);
    }
}


void reset(){
    depth[0] = 0;
    for(int i = 0; i <= n + 5; i++){
        graph[i].clear();
        depth[i] = max_depth[i] = dis[i] = 0;
    }
}

void sukuna(){
    cin >> n;
    reset();
    for(int i = 0; i < n -1 ; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }

    dfs(1);

    Forn(i, n){
        dis[depth[i]]++;
        dis[max_depth[i] + 1]--;
    }

    Forn(i,n)cout << depth[i] <<" ";nl;
    Forn(i,n)cout<< max_depth[i] <<" ";nl;
    Forn(i,n + 2)cout << dis[i] <<" ";nl;

    int ans = 0, cur = 0;
    Forn(i,n){
        cur += dis[i];
        ans = max(ans,cur);
    }

    cout << n - ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Triple_Operations.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vin v(N);

int op(int n){
    int cnt = 0;
    while(n > 0){
        n /= 3;
        cnt ++;
    }
    return cnt;
}

void func(){
    for(int i = 1; i < N; i++){
        v[i] = op(i);
    }
    for(int i = 1; i < N; i++){
        v[i] += v[i - 1];
    }
}


void sukuna(){
    int l, r;
    cin >> l >> r;
    int ans = 0, ll = l;

    while(ll > 0){
        ans += 2;
        ll /= 3;
    }
    ans += (v[r] - v[l]);
    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;
    func();
    
    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Turtle_vs_Rabbit_Race_Optimal_Trainings.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int func(int n){return n * (n + 1) / 2;}

void sukuna(int test){
    int n;
    cin >> n;
    vin v(n + 1);
    Forn(i,n){
        cin >> v[i];
        v[i] += v[i - 1];
    }
    v.push_back(M);

    lin(q);
    while(q--){
        int l, u;
        cin >> l >> u;
        int cur = u + v[l - 1];
        int up = lower_bound(all(v), cur) - v.begin();

        int mx = -INF, ind = 0;
        
        for(int i = max(l, up - 2); i <= min(n, up + 2); i++){
            int cur = v[i] - v[l - 1];
            int sum = (u + (u - cur +  1)) * cur / 2;
            if(sum > mx){
                mx = sum;
                ind = i;
            }
        }
        cout << ind << " ";
    }    
    nl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Two_Arrays_and_Sum_of_Functions.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 998244353;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin a(n);
    vin b(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    sort(all(a)); sort(all(b));
    reverse(all(b));

    print(a);
    print(b);

    int ans = 0;

    for(int i = 0; i < n; i++){
        for(int j = i; j < n; j++){
            ans = (ans + (a[i] * b[j]) % M) % M;
        }
    }

    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/E_Two_Round_Dances.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int fact(int n){
    if(n <= 0)return 1;
    return n * fact(n - 1);
}

int ncr(int n, int r){
    return fact(n) / (fact(n - r) * fact(r));
}

int32_t main()
{
    fast_in_out;
    lin(n);
    int r =  n / 2;

    int ans =  ncr(n, r) / 2 * fact(r - 1) * fact(r - 1);
    cout<<ans<<endl;
    
}

"/home/raihan/Desktop/Codeforces/E_Vlad_and_an_Odd_Ordering.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;
    int cnt = 0, i, store = 0;

    for( i = 1; i < n; i <<= 1){

        int p = (n / (i * 2)) * 2 - 1;
        store = n / (i * 2);
        
        if((p + 2) * i <= n)store++; 
        cnt += store;


        if(cnt >= k){
            cnt -= store;
            break;
        }
    }
    
    if(i > n){i >>= 1, cnt -= store;}
    k -= cnt;

    cout<<((k * 2) - 1) * i<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/Farhan_vai.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


vector<int>prime;

bool isPrime(int n)
{

	for(int i = 2; i < n; i++)
	{
		if(n % i == 0) return false;
	}
	return true;
}

int pm()
{
    int cnt=0;
	for(int i = 2; cnt<1200; i++)
	{
		if(isPrime(i)) 
		{
			prime.push_back(i);
            cnt++;
		}
	}
	return 0;
}



int solve()
{
    ll n,q;
    cin>>n>>q;
    stack<ll>s,b;
    queue<ll>a;
    forn(i,n)
    {
        lin(x);
        s.push(x);
    }

    forn(j,q)
    {
        while(!s.empty())
        {
            if(s.top()%prime[j]==0)
            {
                b.push(s.top());
                s.pop();
            }
            else 
            {
                a.push(s.top());
                s.pop();
            }
        }
        while(!a.empty())
        {
            s.push(a.front());
            a.pop();
        }
        while(!b.empty())
        {
            cout<<b.top();nl;
            b.pop();
        }
        
    }
    while(!s.empty())
    {
       cout<<s.top();nl;
        s.pop();
    }

    return 0;
}

int main()
{
    fast_in_out;
    pm();
    print(prime);
    solve();
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/Fibonacci.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef 				long long ll;
typedef 				long double ld;

#define forn(i,e) 		for(ll i=0;i<e;i++)
#define rforn(i,s) 		for(ll i=s-1;i>=0;i--)
#define yes 			cout<<"YES"<<endl
#define no 				cout<<"NO"<<endl
#define pb 				push_back
#define pp 				pop_back
#define nl 				cout<<"\n"
#define sz(x) 			((ll)(x).size())
 

 // From youtube with recursion process

 int fib(int n)
 {
    if(n==0 || n==1)
    {
        return n;
    }
    else
    return (fib(n-1)+fib(n-2));
 }


 //Author Raihan Ahmed
int main()
{
    int n;
    cout<<"Enter the no of terms:";nl;
    cin>>n;

    ll pre=1,mid=0,post=0;
    for(int i=0;i<n;i++)
    {
        // cout<<fib(i)<<" ";nl;
        swap(pre,post);
        mid=mid+pre;
        if(n>0)cout<<mid<<" ";
        else cout<<mid;
        pre=mid;

    }
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/F_0_1_2_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vector<vin> graph;
int val[N], depth[N];
int a, b, c, n;

void dfs(int v, int par = 0){

    for(auto child : graph[v]){
        if(child == par)continue;

        depth[child] = depth[v] + 1;
        dfs(child);
    }
}

void bfs(){
    queue<int> q;
    q.push(1);

    int f = 0;
    while(!q.empty()){
        int x = q.front();
        int y = x + f;

        q.pop();
        if(val[x] == 2){
            graph[x].push_back(y + 1);
            graph[x].push_back(y + 2);
            q.push(y + 1);
            q.push(y + 2);
            val[x] -= 2;
            f++;
        }
        if(val[x] == 1){
            graph[x].push_back(y + 1);
            q.push(y + 1);
            val[x] --;
        }
    }

}

void sukuna(){
    cin >> a >> b >> c;
    n = a + b + c;
    vector<vin> v(n + 1); graph = v;
    Forn(i,n){
        depth[i] = 0;
        val[i] = 0;
    }
    
    int i = 1;
    for(int _ = 0; _ < a; _++, i++){
        val[i] = 2;
    }
    for(int j = 0; j < b; j++, i++){
        val[i] = 1;
    }
    for(int j = 0; j < c; j++, i++){
        val[i] = 0;
    }
    
    bfs();
    dfs(1);
    // Forn(i,n)cout<<val[i]<<' ';

    int ans = 0;
    Forn(i,n)ans = max(ans, depth[i]);

    cout<<ans<<endl;
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_1_Complete_the_Projects_easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;



void sukuna(int test){
    int n, r;
    cin >> n >> r;
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;

    sort(all(v), [](pr a, pr b){
        if(a.second > 0 and b.second > 0)return a.first < b.first;
        if(a.second <= 0 and b.second <= 0)return a.first + a.second > b.first + b.second;
        return a.second > b.second;
    });  
    

    for(int i = 0; i < n; i++){
        if(r < v[i].first or r < 0){no; return;}
        r += v[i].second;
    }

    if(r >= 0)yes;
    else no;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_1_Guess_the_K_th_Zero_Easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int query(int l, int r){
    cout <<"? " << l <<" " <<r<<endl;
    cout.flush();
    int ask;
    cin >> ask;
    return ask;
}

int32_t main(){
    fast_in_out;
    int n, t;
    cin >> n >> t;
    lin(k);
    int kk = k;

    int lo = 1, hi = n;

    while(hi > lo + 1){
        int mid = (lo + hi) / 2;

        int ask = query(lo, mid);
        int len = mid - lo + 1;
        int zero = len - ask;

        if(zero < k){
            k -= zero;
            lo = mid + 1;
        }else{
            hi = mid;            
        }
    }

    int ask = lo - query(1, lo);
    if(ask < kk)lo++;
    cout << "! " << lo << endl;
    cout.flush();
}

"/home/raihan/Desktop/Codeforces/F_1_Lightsabers_easy.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    vin v(n);
    multiset<int> s;
    forn(i,n)cin >> v[i];

    Forn(i,k){
        lin(x);
        forn(j, x)s.insert(i);
    }

    for(int i = 0; i <= n - s.size(); i++){
        multiset<int> temp = s;
        for(int j = i; j < n; j++){
            if(temp.count(v[j]) == 0)break;
            temp.erase(temp.find(v[j]));
            if(temp.empty()){
                yes; 
                return;
            }
        }
    }
    no;
    
}

int32_t main(){
    fast_in_out;

    int test = 1; 
    //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_2_Complete_the_Projects_hard_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;



void sukuna(int test){
    int n, r;
    cin >> n >> r;
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;

    sort(all(v), [](pr a, pr b){
        if(a.second > 0 and b.second > 0)return a.first < b.first;
        if(a.second <= 0 and b.second <= 0)return a.first + a.second > b.first + b.second;
        return a.second > b.second;
    });  
    

    for(int i = 0; i < n; i++){
        if(r < v[i].first or r < 0){no; return;}
        r += v[i].second;
    }

    if(r >= 0)yes;
    else no;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_3_SUM.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
set<map<int, int>> s;

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> mp;
    forn(i,n){
        cin >> v[i];
        v[i] %= 10;
        mp[v[i]]++;
    }

    for(auto m : s){
        bool ck = 1;
        for(auto a : m){
            if(mp[a.first] < a.second){
                ck = 0;
                break;
            }
        }
        if(ck){
            yes;
            return;
        }
    }
    no;
    
}

int32_t main(){
    fast_in_out;
    for(int i = 0; i < 9; i++){
        for(int j = 0; j < 10; j++){
            for(int k = 0; k < 10; k++){
                if((i + j + k) % 10 == 3){
                    map<int, int>tmp;
                    tmp[i]++; tmp[j]++; tmp[k]++;
                    s.insert(tmp);
                }
            }
        }
    }

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Aiiif_vai.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


void sss(vector<ll>v, ll n, ll &a, ll &b){
    forn(i,n-1){
        if(v[0]>v[1])
        {
            v.push_back(v[1]);
            v.erase(++v.begin());
        }
        else
        {
            v.push_back(v[0]);
            v.erase(v.begin());
        }
    }
    a = v[0]; b= v[1];
}


void crt( vector<ll> &v,ll n)
{
    for(int i=0;i<n-1;i++)
    {
        if(v[0]>v[1])
        {
            v.push_back(v[1]);
            v.erase(++v.begin());
        }
        else
        {
            v.push_back(v[0]);
            v.erase(v.begin());
        }
    }
    
}


int main()
{
    fast_in_out;
    ll n,q;
    cin>>n>>q;

    vector<ll>v,d;
    forn(i,n){
        lin(x);
        v.pb(x);
        d.pb(x);
    }


    crt(d,n);
    // print(d);
    
    while(q--){
        long long x,a,b;
        cin >> x;
        if(x<n){
            sss(v,x,a,b);
            cout<<a<<" "<<b<<"\n";
            

        }
        else {
            cout<<d[0]<<" ";
            if(x%(n-1)==0)cout<<d[n-1];
            else cout<<d[x%(n-1)];
        }
    }
    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Ant_colony.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18 + 7;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

struct grp{int mn = INF, cnt = 0, gc = 0; void display(){cout << mn <<" " << cnt <<" " << gc << endl;}};

vin v(N);
vector<grp> tree(4 * N);


grp query(int node, int lo, int hi, int l, int r){

    if(hi < l or lo > r)return grp();
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    grp a = query(2 * node, lo, mid, l,  r);
    grp b = query(2 * node + 1, mid + 1, hi, l, r);
    grp ret;

    ret.mn = min(a.mn, b.mn);
    ret.gc = __gcd(a.gc, b.gc);

    if(a.mn < b.mn)ret.cnt = a.cnt;
    else if(b.mn < a.mn)ret.cnt = b.cnt;
    else if(a.mn == b.mn)ret.cnt = a.cnt + b.cnt;

    return ret;
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node].mn = v[lo];
        tree[node].cnt = 1;
        tree[node].gc = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    grp a = tree[2 * node];
    grp b = tree[2 * node + 1];

    if(a.mn < b.mn){
        tree[node].mn = a.mn;
        tree[node].cnt = a.cnt;
    }else if(a.mn == b.mn){
        tree[node].mn = a.mn;
        tree[node].cnt = a.cnt + b.cnt;
    }else{
        tree[node].mn = b.mn;
        tree[node].cnt = b.cnt;
    }
    
    tree[node].gc = __gcd(a.gc, b.gc);
}


void sukuna(int test){
    lin(n);
    forn(i,n)cin >> v[i];
    build(1, 0, n - 1);    

    lin(q);
    while(q--){
        int l, r;
        cin >> l >> r;
        int tot = r - l + 1;
        grp ans = query(1, 0, n - 1, --l, --r);

        if(ans.gc == ans.mn)tot -= ans.cnt;
        cout << tot << endl;
    }
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Assignment_and_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5 + 100;



vector<int> tree(4 * N), v(N), lazy(4 * N, -1);

int query(int node, int lo, int hi, int &l, int &r){

    if(lazy[node] != -1){
        int dx = lazy[node];
        lazy[node] = -1;

        tree[node] = (hi - lo + 1) * dx;

        if(hi != lo){
            lazy[2 * node] = dx;
            lazy[2 * node + 1] = dx;
        }
    }

    if(lo > r or hi < l)return 0; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return q1 + q2; //***
}


void update(int node, int lo, int hi, int l, int r, int val){


    if(lazy[node] != -1){
        int dx = lazy[node];
        lazy[node] = -1;

        tree[node] = (hi - lo + 1) * dx;

        if(hi != lo){
            lazy[2 * node] = dx;
            lazy[2 * node + 1] = dx;
        }
    }
    
    if(lo > r or hi < l)return;
    if(lo >= l and hi <= r){
        tree[node] = (hi - lo + 1) * val;

        if(hi != lo){
            lazy[2 * node] = val;
            lazy[2 * node + 1] = val;
        }
        
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);

    tree[node] = tree[2 * node] + tree[2 * node + 1];  //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1]; //***
}


int32_t main(){
    fast_in_out;
    int n, q;
    cin >> n >> q;

    // build(1, 0, n - 1);

    while(q--){
        int t, l, r, val;
        cin >> t >> l >> r;

        if(t == 2){
            cout << query(1, 0, n - 1, l, --r) << endl;
        }else{
            cin >> val;
            update(1, 0, n - 1, l, --r, val);
        }
    }

    
}

"/home/raihan/Desktop/Codeforces/F_Binary_String_Reconstruction.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int a, b, c;

string func(int n, int type){
    string ans;
    if(type == 1){
        forn(i,n + 1)ans.pb('1');
    }else if(type == 3){
        forn(i,n + 1)ans.pb('0');
    }else{
        bool flg = 0;
        forn(i, n + 1){
            if(flg)ans.pb('0');
            else ans.pb('1');
            flg = !flg;
        }
    }
    return ans;
}


void sukuna(){
    cin >> c >> b >> a;
    string ans;
    int sum = a + b + c;
    if(sum == a){
        cout<<func(a, 1)<<endl;
        return;
    }
    if(sum == b){
        cout<<func(b, 2)<<endl;
        return;
    }
    if(sum == c){
        cout<<func(c, 3)<<endl;
        return;
    }

    if(a > 0)
    forn(i, a + 1)ans.pb('1');
    if(c > 0)
    forn(i,c + 1)ans.pb('0');
    if(a > 0 && c > 0)b--;

    if(b <= 0){cout<<ans<<endl; return;}

    char c = ans.back();
    bool flg = 1;
    if(c == '1')flg = 0;
    for(int i = 0; i < b; i++){
        if(flg)ans.push_back('1');
        else ans.push_back('0');
        flg = !flg;
    }

    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Easy_Demon_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m, q;
    cin >> n >> m >> q;
    vin a(n), b(n), v, u;

    forn(i,n)cin >> a[i];
    forn(i,m)cin >> b[i];
    v = a; u = b;

    for(int i = 1; i < n; i++)a[i] += a[i - 1];
    for(int i = 1; i < m; i++)b[i] += b[i - 1];

    set<int> sa = {all(v)}, sb = {all(u)};

    // print(a);
    // print(b);

    map<int, bool> mp;

    int tot = a.back() * b.back();
    // cout << tot << endl;

    int A = a.back(), B = b.back();

    for(int i = -N; i <= N; i++){
        bool flg = false;
        
    }
    
    while(q--){
        lin(x);
        if(mp.find(x) != mp.end()){
            if(mp[x])yes;
            else no;

            continue;
        }
        bool flg = false;
        for(auto ai : sa){
            if(A == ai)continue;
            int sum = tot - x - ai * B;
            int div = A - ai;
            if(sum % div)continue;
            if(sb.count(sum / div)){
                flg = true;
                break;
            }
        }
        if(flg){yes; mp[x] = 1;}
        else {no; mp[x] = 0;}
    }



}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Eating_Candies.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    if(n == 1){
        cout<<0<<endl;
        return;
    }
    int ans = 0, sum = 2;
    int x = v.front(), y = v.back();

    for(int i = 0, j = n - 1; i < j;){
        if(x < y){
            i++;
            x += v[i];
            sum++;
        }else if(y < x){
            j--;
            y += v[j];
            sum++;
        }else{
            ans = sum;
            i++;
            x += v[i];
            sum++;
        }
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Expected_Median.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin fact(N);

void func(){
    fact [0] = 1;
    for(int i = 1; i < N; i++){
        fact[i] = fact[i - 1] * i;
        fact[i] %= M;
    }
}

<<<<<<< HEAD
=======
int nCr(int n, int r){
    if(r > n)swap(n, r);
    return (fact[n] / (fact[n - r] * fact[r])) % M;
}
>>>>>>> 1f6306d ( AC)

void sukuna(){
    int n, k, x = 0, y = 0;
    cin >> n >> k;
    vin v(n);
    forn(i,n){
        cin >> v[i];
        if(v[i])y++;
        else x++;
    }
    int mid = (k + 1) / 2;
    int mid2 = mid - 1;
<<<<<<< HEAD
    int f1 = 0, f2 = 0;
    if(y >= mid)f1 = fact[y] / (fact[y - mid] * fact[mid]);
    // if(x >= mid2)f2 = fact[x] / (fact[x - mid2] * fact[mid2]);
    // int ans = f1 * f2;
    int ans = 0;


    for(int i = y - 1; i >= mid; i--){
        ans += fact[i] / (fact[i - mid] * fact[mid]);
    }

    cout<<ans<<endl;

=======
    int z = n - mid;

    if(y < mid){
        cout<<0<<endl;
        return;
    }

    int f = nCr(y, mid);
    int l = nCr(z, mid2);

    cout<<y<<' '<<z<<endl;
    cout<<f<<' '<<l<<endl;

    int ans = f * l - z;
    cout<<ans<<endl;



>>>>>>> 1f6306d ( AC)
}

int32_t main(){
    fast_in_out;

    func();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_F.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string ed = "what does the fox say?";


void sukuna(int test){
    string str, ans;
    getline(cin, str);
    
    set<string> sounds;
    string temp = "*";

    while(temp != ed){
        getline(cin, temp);
        if(temp == ed)break;
        vector<string> v;
        string tm;
        temp.push_back(' ');
        for(auto i : temp){
            if(i == ' '){
                v.push_back(tm);
                tm.clear();
                continue;
            }
            tm.push_back(i);
        }
        temp.pop_back();
        for(int i = v.size(); i > 1; i--){
            sounds.insert(v[i]);
        }
    }

    print(sounds);
    vector<string> v;
    string tm;
    for(int i = 0; i < str.size(); i++){
        if(str[i] == ' '){
            v.push_back(tm);
            tm
        }
    }
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    cin.ignore();
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/F_Feed_Cats.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;

    vin mx;
    vector<pr> v(m), temp;
    vector<vector<pr>>fin;

    forn(i,m)cin >> v[i].first >> v[i].second;
    sort(all(v));
    mx.pb(v[0].second);
    for(int i = 1; i < m; i++){
        mx.push_back(max(mx.back(), v[i].second));
    }
   
    mprint(v);nl;
    print(mx);

    
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_First_element_at_least_X.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 1e5 + 10;

int n, q;
int tree[4 * N], v[N];


int query(int node, int lo, int hi, int &l, int &r){
    if(lo > r or hi < l)return -M; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return max(q1, q2); //***
}


void update(int node, int lo, int hi, int pos, int val){
    if(lo > pos or hi < pos)return;
    if(lo >= pos and hi <= pos){
        tree[node] = val;
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, val);
    update(2 * node + 1, mid + 1, hi, pos, val);

    tree[node] = max(tree[2 * node], tree[2 * node + 1]); //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = max(tree[2 * node], tree[2 * node + 1]); //***
}

int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];
    build(1, 0, n - 1);

    while(q--){
        int typ, ind, val, ans = n;
        int lo = 0, hi = n, mid;
        cin >> typ;

        if(typ == 1){
            cin >> ind >> val;
            update(1, 0, n - 1, ind, val);
            continue;        
        }else{
            cin >> val;
            while(hi > lo){
                mid = (lo + hi) / 2;
                if(query(1, 0, n - 1, lo, mid) < val){
                    lo = mid + 1;
                }else{
                    hi = mid;
                }
            }
        }
        cout << (lo == n ? -1 : lo) << endl;
    }
}

// Problem link: https://codeforces.com/edu/course/2/lesson/4/2/practice/contest/273278/problem/C

"/home/raihan/Desktop/Codeforces/C_Fishingprince_Plays_With_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, k, m;

pr func(int num){
    map<int, int> mp;
    mp[num] ++;
    while(num % k == 0){
        mp[num / k] += k * mp[num];
        num /= k;
    }

    return {mp.begin()->first, mp.begin()->second};
}


void sukuna(){
    cin >> n >> k;
    vin a(n);
    forn(i,n)cin >> a[i];
    cin >> m;
    vin b(m);
    forn(i,m)cin >> b[i];

    vector<pr> x(1), y(1);

    forn(i,n){
        pr cnt = func(a[i]);
        if(x.back().first == cnt.first)x.back().second += cnt.second;
        else x.push_back(cnt);
    }

    forn(i,m){
        pr cnt = func(b[i]);
        if(y.back().first == cnt.first)y.back().second += cnt.second;
        else y.push_back(cnt);
    }
    if(x == y)yes;
    else no;    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Fishingprince_Plays_With_Array.java"

"/home/raihan/Desktop/Codeforces/C_Floor_and_Mod.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int a, b;

void sukuna(int test){
    cin >> a >> b;

    int cnt = 1, ans = 0, sq = sqrt(a);
    if(b <= sq){
        cout << b * (b - 1) / 2;
        return;
    }
    if(b > a)b = a;

    cnt = a / (b - 1);

    for(;; cnt++){
        int nw = (a / (cnt + 1));
        if(nw * nw <= a){
            ans += (nw * (nw ) / 2);
            break;
        }
        cerr << cnt <<" " << nw << " " << b << endl;
        if(nw > b)continue;
        ans += (b - nw) * cnt;
        b = nw;
    }



    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Flower_City_Fence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    int mx = 0;
    vin v(n), cnt(n + 10), ans;
    forn(i,n)cin >> v[i], mx = max(mx, v[i]);
    if(mx != n){no; return;}
    forn(i,n)cnt[v[i]]++;

    for(int i = n; i >= 0; i--)cnt[i] += cnt[i + 1];

    for(int i = n; i > 0; i--){
        ans.pb(cnt[i]);
    }
    reverse(all(ans));

    forn(i,n)if(v[i] != ans[i]){no; return;}
    yes; 
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Game_with_Multiset.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

bool func(map<int, int> mp, int sum){
    auto a = mp.rbegin();
    for(; a != mp.rend(); a++){
        if(a->first > sum)continue;
        int div = sum / a->first;
        sum -= min(a->second, div) * a->first;
    }
    if(sum == 0)return true;
    
    return 0;
}


void sukuna(){
    lin(n);
    int sum = 0;
    map<int, int> mp;
    vin s;
    while(n--){
        int x, y;
        cin >> y >> x;
        if(y == 1){
            x = 1 << x;
            mp[x]++;
        }else{
            if(func(mp, x))yes;
            else no;
        }

    }    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Game_with_Reversing.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e19;
const int M = 1e9 + 7;

void sukuna(){
    int n, a = 0, b = 0, ans = 0;
    string s, t, r;
    cin >> n >> s >> t;

    r = s; reverse(all(r));

    forn(i,n){
        if(s[i] != t[i])a++;
        if(r[i] != t[i])b++;
    }

    if(a == 0)a = 0;
    else if(a%2 == 0) a *= 2;
    else a += a - 1;

    if(b == 0)b = 2;
    else if(b%2 == 0) b += b - 1;
    else b *= 2;

    cout<<min(a, b)<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Gerrymandering.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e5 + 100;

int n = 2, m;
vector<vin> v(n, vin(N));
vector<vin> dp(N, vin (5));

int recur(int j, int type){

    if(j >= m)return dp[j][type] = 0;
    if(dp[j][type] != 0)return dp[j][type];

    if(type == 0){
        int a = ((v[0][j] + v[1][j] + v[1][j + 1]) >= 2) + recur(j + 2, 1);
        int b = ((v[0][j] + v[1][j] + v[0][j + 1]) >= 2) + recur(j + 2, 2);

        int c = ((v[0][j] + v[0][j + 1] + v[0][j + 2]) >= 2) +
                ((v[1][j] + v[1][j + 1] + v[1][j + 2]) >= 2) + recur(j + 3, 0);

        return dp[j][type] = max(max(a, b), c);

    }else if(type == 1){
        int b = ((v[0][j] + v[1][j] + v[0][j - 1]) >= 2) + recur(j + 1, 0);
        if(j + 2 >= n){
            return dp[j][type] = b;
        }

        int a = ((v[1][j] + v[1][j + 1] + v[1][j + 2]) >= 2) +
                ((v[0][j] + v[0][j + 1] + v[0][j - 1]) >= 2) + recur(j + 3, 1);
        return dp[j][type] = max(a, b);
        
    }else{
        int b = ((v[1][j] + v[0][j] + v[1][j - 1]) >= 2) + recur(j + 1, 0);
        if(j + 2 >= n){
            return dp[j][type] = b;
        }

        int a = ((v[0][j] + v[0][j + 1] + v[0][j + 2]) >= 2) +
                ((v[1][j] + v[1][j + 1] + v[1][j - 1]) >= 2) + recur(j + 3, 2);

        return dp[j][type] = max(a, b);
    }
}


void reset(){
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m + 10; j++){
            v[i][j] = 0;
        }
    }
    for(int i = 0; i < m; i++){
        for(int j = 0; j < 5; j++)dp[i][j] = 0;
    }
}

void sukuna(int test){
    cin >> m;
    reset();
    vector<string> str(2);
    forn(i,n)cin >> str[i];

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            v[i][j] = str[i][j] == 'A';
            // cout << v[i][j] <<" ";
        }
        // nl;
    }

    cout << recur(0, 0) << endl;

    for(int i = 0; i < 3; i++){
        for(int j = 0; j < m; j++){
            cout << dp[j][i] <<" ";
        }
        nl;
    }

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Get_an_Even_String.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    string str;
    cin >> str;
    str += "**";
    int n = str.size(), ans = 0;
    set<char> s;

    for(int i = 0; i < n - 1; i++){
        if(s.count(str[i])){
            // print(s);
            ans += s.size() - 1;
            s.clear();
            continue;
        }
        if(str[i] == str[i + 1]){
            ans += s.size();
            s.clear();
            i++;
            continue;
        }
        s.insert(str[i]);
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Good_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
int sum = 0;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sum = accumulate(all(v), 0ll);
    int mx = *max_element(all(v));

    vin ans, a = v;
    sort(all(a));
    int mx2 = mx;
    if(n > 1)mx2 = a[n - 2];

    for(int i = 0; i < n; i++){
        if(v[i] == mx){
            if(mx2 == (sum - mx2 - v[i])){
                ans.push_back(i + 1);
            }
            continue;
        }

        if(mx == (sum - mx - v[i])){
            ans.push_back(i + 1);
        }
    }

    cout<<ans.size()<<endl;
    print(ans);


    
}

"/home/raihan/Desktop/Codeforces/C_Good_Prefixes.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    
    int sum = 0;
    int mx = 0;
    int ans = 0;
    // print(v);

    for(int i = 0;  i < n; i++){
        sum += v[i];
        mx = max(mx, v[i]);
        if(sum - mx == mx){
            // cout<<sum<<' '<<mx<<' '<<v[i]<<endl; 
            ans++;
        }
    }
    
    cout<<ans<<endl;

    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Good_String.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n;
string str;

int func(string op){
    bool flg = 0;
    int ans = 0;
    for(auto i : str){
        if(i == op[flg]){
            flg = !flg;
            continue;
        }
        ans++;
    }

    return ans + (flg and op.front() != op.back());
}

void sukuna(int test){
    cin >> str;
    n = str.size();
    int ans = n - 2;    

    for(char f = '0'; f <= '9'; f++){
        for(char l = '0'; l <= '9'; l++){
            string temp; 
            temp.push_back(f);
            temp.push_back(l);
            ans = min(ans, func(temp));
        }
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Good_Subarrays.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;
    map<int, int> mp;
    vin v(n + 1), sf;
    Forn(i,n)v[i] = str[i - 1] - '1';

    int ans = 0, sum = 0;

    for(int i = 0; i <= n; i++){
        sum += v[i];
        ans += mp[sum];
        mp[sum]++;
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Gorilla_and_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m, k;
    cin >>n >> m >> k;
    k += (n - k);
    for(int i = k; i > m; i--)cout<<i<<" ";
    for(int i = 1; i <= m; i++)cout<<i<<" ";
    nl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Guess_the_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int ask(int i, int j){
    cout <<"? " << i <<" " << j << endl;
    cout.flush();
    int x;
    cin >> x;
    return x;
}

int func(int ab, int bc, int ca){
    return (ca - ab + bc) / 2;
}

void sukuna(){
    int n;
    cin >> n;
    vin ans(n + 1);

    int ab = ask(1, 2), bc = ask(2, 3), ca = ask(1, 3);
    ans[3] = func(ab, bc, ca);
    ans[1] = ca - ans[3];
    ans[2] = bc - ans[3];

    for(int i = 4; i <= n; i++){
        ans[i] = ask(3, i) - ans[3];
    }

    cout <<"! ";
    for(int i = 1; i <= n; i++)cout << ans[i]<<" ";nl;    
    cout.flush();
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Guess_The_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int query(int par, int i){
    cout<<"? " << par << " " << i <<endl;
    cout.flush();
    int ask;
    cin >> ask;
    return ask; 
}

void sukuna(){
    int n, i;
    cin >> n;
    vector<pr> v;
    for(int i = 2; i <= n; i++){
        int par = 1;
        while(1){
            int gave = query(par, i);
            if(par == gave)break;
            par = gave;
        }
        v.push_back({par, i});
    }
    cout<<"! ";
    for(auto a : v)cout<<a.first<<" "<<a.second<<" ";nl;
    cout.flush();
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Hamiltonian_Wall.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

bool func(vector<string> v){
    int n = v[0].size();
    int ck = 0;
    for(int i = 0; i < n - 1; i++){
        if(v[!ck][i] == 'B'){
            v[ck][i] = 'W';
            ck = !ck;
            i--;
            continue;
        }else if(v[ck][i] != v[ck][i + 1]){
            return false;
        }
    }
    return true;
}

void sukuna(){
    lin(n);
    vector<string>v(2);
    cin >> v[0] >> v[1];

    if(n == 1){
        if(v[0][0] == 'B' || v[1][0] == 'B')yes;
        else no;
        return;
    }
    if(func(v)){
        yes;
        return;
    }
    swap(v[0], v[1]);
    if(func(v))yes;
    else no;


}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Hard_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int m, a, b, c;
    cin >> m >> a >> b >> c;
    int ans = 0;
    ans += min(m, a);
    int tmp = ans;
    ans += min(c, (m - ans));
    c -= (ans - tmp);


    int ans2 = min(m, b);
    ans2 += min(c, (m - ans2));

    cout << ans + ans2 << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Hard_problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e5 + 100;

int n;
vin v(N);
vector<vin> dp(N, vin (3, -1));
vector<string> str(N), rev(N);

int recur(int ind, int t){
    
    if(ind > n)return dp[ind][t] = 0;
    if(dp[ind][t] != -1)return dp[ind][t];

    string prev;
    if(t)prev = rev[ind - 1];
    else prev = str[ind - 1];

    int a = INF, b = INF;
    if(prev <= str[ind])a = recur(ind + 1, 0);
    if(prev <= rev[ind])b = v[ind] + recur(ind + 1, 1);

    return dp[ind][t] = min(a, b);
}


void sukuna(int test){
    cin >> n;
    str[0] = "0";

    Forn(i,n)cin >> v[i];
    Forn(i,n){
        cin >> str[i];
        rev[i] = str[i];
        reverse(all(rev[i]));
    }

    int ans = recur(1, 0);
    cout << (ans != INF ? ans : -1) << endl;


}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Have_Your_Cake_and_Eat_It_Too.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

vin second_ck(vin &a, vin &b, int l, int rec){
    int n = a.size();
    int x = a[l], y = b[l];
    vin v(3);
    v[0] = l + 2;
    for(int i = l + 1; i < n; i++){
        if(a[i] - x >= rec){
            v[1] = i + 1;
            break;
        }
        if(b[i] - y >= rec){
            v[1] = i + 1;
            v[2] = 1;
            break;
        }
    }
    return v;
}

int sum(vin &v, int l, int r){
    if(l == 1){
        return v[r - 1];
    }
    return v[r - 1] - v[l - 2];
}


void sukuna(){
    lin(n);
    vin a(n), b(n), c(n);
    cin >> a[0]; Forn(i, n - 1){
        cin >> a[i];
        a[i] += a[i - 1];
    }
    cin >> b[0];Forn(i, n - 1){
        cin >> b[i];
        b[i] += b[i - 1];
    }
    cin >> c[0]; Forn(i, n - 1){
        cin >> c[i];
        c[i] += c[i - 1];
    }
    

    double recc = a[n - 1] / 3.0;
    int l1, rec = ceil(recc);
    vin ans(6), done(4);

    forn(i, n){
        if(a[i] >= rec && b[i] >= rec){
            if(a[i] > b[i]){
                ans[0] = 1;
                ans[1] = i + 1;
                l1 = i;
                done[1]++;
                break;
            }
            else{
                ans[2] = 1;
                ans[3] = i + 1;
                l1 = i;
                done[2]++;
                break;

            }
        }
        else if(a[i] >= rec && c[i] >= rec){
            if(a[i] > c[i]){
                ans[0] = 1;
                ans[1] = i + 1;
                l1 = i;
                done[1]++;
                break;
            }
            else{
                ans[4] = 1;
                ans[5] = i + 1;
                l1 = i;
                done[3]++;
                break;
            }
        }
        else if(b[i] >= rec && c[i] >= rec){
            if(b[i] > c[i]){
                ans[2] = 1;
                ans[3] = i + 1;
                l1 = i;
                done[2]++;
                break;
                
            }
            else{
                ans[4] = 1;
                ans[5] = i + 1;
                l1 = i;
                done[3]++;
                break;
            }
        }

        if(a[i] >= rec){
            ans[0] = 1;
            ans[1] = i + 1;
            l1 = i;
            done[1]++;
            break;
        }
        if(b[i] >= rec){
            ans[2] = 1;
            ans[3] = i + 1;
            l1 = i;
            done[2]++;
            break;
        }
        if(c[i] >= rec){
            ans[4] = 1;
            ans[5] = i + 1;
            l1 = i;
            done[3]++;
            break;
        }
    }
    


    vin v(3);
    if(done[1] == 1){
        v = second_ck(b, c, l1, rec);
        if(v[2] == 0){
            ans[2] = v[0]; ans[3] = v[1];
            ans[4] = v[1] + 1; ans[5] = n;
        }
        else{
            ans[4] = v[0]; ans[5] = v[1];
            ans[2] = v[1] + 1; ans[3] = n;
        }
    }
    else if(done[2] == 1){
        v = second_ck(a, c, l1, rec);
        if(v[2] == 0){
            ans[0] = v[0]; ans[1] = v[1];
            ans[4] = v[1] + 1; ans[5] = n;
        }
        else{
            ans[4] = v[0]; ans[5] = v[1];
            ans[0] = v[1] + 1; ans[1] = n;
        }
    }
    else{
        v = second_ck(a, b, l1, rec);
        if(v[2] == 0){
            ans[0] = v[0]; ans[1] = v[1];
            ans[2] = v[1] + 1; ans[3] = n;
        }
        else{
            ans[2] = v[0]; ans[3] = v[1];
            ans[0] = v[1] + 1; ans[1] = n;
        }
    }

    int ff = sum(a, ans[0], ans[1]);
    int ss = sum(b, ans[2], ans[3]);
    int ll = sum(c, ans[4], ans[5]);

    if(ff < rec || ss < rec || ll < rec){
        cout<<-1<<endl;
        return;
    }
    print(ans);

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_How_Does_the_Rook_Move.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int mod=1e9+7;


int solve()
{
    ll n,k,x,y,ans=0;

    cin>>n>>k;
    set<ll>s;
    forn(i,k)
    {
        cin>>x>>y;
        s.insert(x);
        s.insert(y);
    }   

    

    
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Ice_and_Fire.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n); n--;
    string str;
    cin >> str;
    vin pf(n);
    pf[0] = 1;
    for(int i = 1; i < n; i++){
        if(str[i] == str[i - 1]){
            pf[i] = pf[i - 1] + 1;
        }else{
            pf[i] = 1;
        }
    }

    for(int i = 0; i < n; i++){
        cout<<i + 2 - pf[i]<<' ';
    }
    nl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Journey.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, a, b, c;
    cin >> n >> a >> b >> c;
    int s = a + b + c;
    int ans = (n / s) * 3;
    n %= s;
    if(n == 0);
    else if(n <= a)ans++;
    else if(n <= a + b)ans += 2;
    else ans += 3;
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Jumps.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    int jump = 0, sum = 0;
    while(sum < n){
        sum += jump++;
    }
    if(sum == n + 1)cout<<jump<<endl;
    else cout<<jump - 1<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Jzzhu_and_Sequences.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;


int32_t main(){
    int x, y, n, ans ;
    cin>>x>>y>>n;

    int f0 = y, f1 = y - x, f2 = -x, f3 = -y, f4 = x - y, f5 = x;
    n-=2;
    if(n > 0){
        if(n % 6 == 0)ans = f0 % M;
        if(n % 6 == 1)ans = f1 % M;
        if(n % 6 == 2)ans = f2 % M;
        if(n % 6 == 3)ans = f3 % M;
        if(n % 6 == 4)ans = f4 % M;
        if(n % 6 == 5)ans = f5 % M;
    }
    else if(n == -1)ans = x;
    else if(n == 0)ans = y;

    if(ans < 0)ans += M;
    cout<<ans % M;
    
}

"/home/raihan/Desktop/Codeforces/B_Kar_Salesman.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, x;
    cin >> n >> x;
    vin v(n);
    forn(i,n)cin >> v[i];
    int sum = accumulate(all(v), 0ll);
    int mx_el = *max_element(all(v));

    int ans = ceil(sum * 1.0 / x);
    ans = max(ans, mx_el);
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Kevin_and_Permutation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    int s = 1;

    for(int i = n, j = 1; i >= s;){
        if(j == k){
            cout << s++ <<" ";
            j = 1;
            continue;
        }
        cout << i <<" "; i--; j++;
    }nl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Kvass_and_the_Fair_Nut.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, s;

int check(vin &v, int x){
    int sum = 0;
    for(auto &i : v){
        sum += (i - x);
        if(sum >= s)return true;
    }

    return sum >= s;
}


void sukuna(int test){
    cin >> n >> s;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int sum = accumulate(all(v), 0ll);
    if(sum < s){cout << -1 << endl; return;}


    int lo = 0, hi = v.front(), mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(check(v, mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    if(!check(v, lo))lo--;

    cout << lo << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_K_Sort.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n), increase;
    forn(i,n)cin>>v[i];

    int f = v[0];

    for(int i = 0; i < n; i++){
        if(v[i] >= f){
            f = v[i];
            continue;
        }
        else{
            increase.push_back(f - v[i]);
        }
    }
    sort(all(increase));
    // print(increase);



    int ans = 0, minus = 0, m = increase.size();
    
    for(int i = 0; i < m; i++){
        increase[i] -= minus;
        // cout<<increase[i]<<' ';
        ans +=increase[i] * (m - i + 1);
        minus += increase[i];
    }
    cout<<ans<<endl;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_K_th_Beautiful_String.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, k;

int sum(int n){
    return n * (n + 1) / 2;
}

void sukuna(){
    cin >> n >> k;
    int lo = 1, hi = n - 1, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(sum(mid) < k){
            lo = mid + 1;
        }else {
            hi = mid;
        }
    }
    int m = k - sum(lo - 1);

    string ans;
    forn(i,n)ans.push_back('a');
    ans[n - lo - 1] = 'b';
    ans[n - m] = 'b';

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Labyrinth.cpp"
#include <bits/stdc++.h>
using namespace std;

#define int long long

#define yes cout << "YES\n"
#define no cout << "NO\n"
#define nl cout << "\n"
#define endl "\n"

#define lin(n) int n; cin >> n;
#define vin vector<int>
#define pr pair<int, int>
#define pb(n) push_back(n)
#define pp pop_back()
#define all(x) x.begin(), x.end()

#define fi first
#define se second

#define forn(i, e) for (int i = 0; i < e; i++)
#define Forn(i, e) for (int i = 1; i <= e; i++)
#define rforn(i, s) for (int i = s - 1; i >= 0; i--)
#define print(arr) for (auto x : arr) cout << x << " "; nl;
#define mprint(mp) for (auto a : mp) cout << a.first << " " << a.second << endl;

#define fast_in_out ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2000 + 10;

int n, m;
bool vis[N][N];
vector<string> graph;

bool isValid(int x, int y) {
    return x >= 0 && x < n && y >= 0 && y < m;
}

struct grp{ int u, v, x, y;};

void bfs(int u, int v, int x, int y) {
    deque<grp> Q;
    Q.push_front({u, v, x, y});

    int ans = 0;
    while(!Q.empty()){
        auto [a,b,X,Y]=Q.front(); Q.pop_front();

        if(!isValid(a,b)) continue;
        if(vis[a][b]) continue;
        if(X<0 || Y<0) continue;
        if(graph[a][b] == '*') continue;

		vis[a][b] = true;
		Q.push_front({a+1,b,X,Y});
		Q.push_front({a-1,b,X,Y});
		Q.push_back({a,b+1,X,Y-1});
		Q.push_back({a,b-1,X-1,Y});   
    }
}

int32_t main() {
    fast_in_out;
    int x, y, u, v;
    cin >> n >> m >> u >> v >> x >> y;

    forn(i, n) {
        string str;
        cin >> str;
        graph.push_back(str);
    }

    bfs(--u, --v, x, y);

    int ans = 0;
    forn(i,n){
        forn(j, m){
            if(vis[i][j])ans++;
        }
    }
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/B_Large_Addition.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void solve()
{
    string str;
    cin>>str;
    int n = str.size();
    if(str[0] != 49 || str[n - 1] == 57){
        no;
        return;
    }

    for(int i = 1; i < n - 1; i++){
        if(str[i] == 48){
            no;
            return;
        }
    }
    
    yes;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Lost_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n + 1), ans(n);
    Forn(i,n)cin >> v[i];

    for(int i = 1; i <= n; i++){
        int k = n + v[i - 1];
        ans[i - 1] = v[i];
    }
    print(ans);
    
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Lost_Numbers.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v = {4, 8, 15, 16, 23, 42};
map<int, pr> mp;

int query(int i, int j){
    cout << "? " << i <<" " << j << endl;
    cout.flush();
    lin(ask);
    return ask;
}

vin abc_find(int ab, int bc){
    map<int, int> abc;
    abc[mp[ab].first]++; abc[mp[ab].second]++;
    abc[mp[bc].first]++; abc[mp[bc].second]++;
    
    vin ans(3);
    ans[0] = ab; ans[2] = bc;
    for(auto i : abc){
        if(i.second == 2){
            ans[1] = i.first;
            break;
        }
    }
    ans[0] /= ans[1];
    ans[2] /= ans[1];

    return ans;
}


void sukuna(int test){

    int ab = query(1, 2), bc = query(2, 3);
    vin ans(6);
    vin temp = abc_find(ab, bc);
    for(int i = 0; i < 3; i++)ans[i] = temp[i];

    int de = query(4, 5), ef = query(5, 6);
    temp = abc_find(de, ef);
    for(int i = 3; i < 6; i++)ans[i] = temp[i - 3];

    cout <<"! ";print(ans);
    cout.flush();   
}

int32_t main(){
    fast_in_out;
    for(int i = 0; i < 6; i++){
        for(int j = i + 1; j < 6; j++){
            mp[v[i] * v[j]] = {v[i], v[j]};
        }
    }

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Lost_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m;
    cin >> n >> m;
    set<int> s;
    forn(i,n){
        lin(x);
        s.insert(x);
    }

    for(int i = 1; m > 0; i++){
        if(s.count(i))continue;
        s.insert(i);
        m -= i;
        if(m < 0){
            no;
            return;
        }
        if(m == 0){
            break;
            return;
        }
    }

    for(int i = 1; i <= *s.end(); i++){
        if(s.count(i) == 0){
            no;
            return;
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Lucky_Number_2.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<"";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string func1(int a, int b, int c, int d, char prev){
        string ans;
        ans.pb(prev);
        while(c > 0 or d > 0){
        if(ans.back() == '4'){
            ans.push_back('7');
            b--;
            c--;
        }else{
            ans.push_back('4');
            a--;
            d--;
        }
        if(a < 0 or b < 0){
            return "-1";
        }
    }

    for(int i = 0; i <ans.size(); i++){
        if(ans[i] == '4'){
            ans.insert(ans.begin() + i, a, '4');
            break;
        }
    }

    for(int i = ans.size() - 1; i >= 0; i--){
        if(ans[i] == '7'){
            ans.insert(ans.begin() + i, b, '7');
            break;
        }
    }

    return ans;
}

int32_t main(){
    fast_in_out;
    int a, b, c, d;
    cin >> a >> b >> c >> d;

    if(abs(c - d) > 1){
        cout << -1 << endl;
        return 0;
    }

    string ans;

    if(c > d){
        ans = func1(a - 1, b, c, d, '4');
    }else if(c < d){
        ans = func1(a, b - 1, c, d, '7');
    }else{
        string ans1 = func1(a - 1, b, c, d, '4');
        string ans2 = func1(a, b - 1, c, d, '7');

        if(ans1 == "-1")ans = ans2;
        else if(ans2 == "-1")ans = ans1;
        else if(ans1 < ans2)ans = ans1;
        else ans = ans2;

    }


    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/B_Luke_is_a_Foodie.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, x;
    cin >> n >> x;
    vin v(n);
    forn(i,n)cin >> v[i];
    int cnt = 0, mx = 0, mn = INF;
    for(int i = 0; i < n; i++){
        mx = max(mx, v[i]);
        mn = min(mn, v[i]);
        if((mx - mn) > x * 2){
            i--;
            cnt++;
            mx = 0;
            mn = INF;
        }
    }
    cout<<cnt<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_AP.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int A, B, C;
    cin >> A >> B >> C;
    B <<= 1;

    if ((A + C) % B && ((B - C) % A || B <= C) && ((B - A) % C || B <= A))no;
    else yes;    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Equal.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n;
        cin>>n;
        int arr[n],i,j,sum=0;
        forn(i,n)
        {
            cin>>arr[i]; sum=sum+arr[i];
        }
        int x=sum/n,ck=1,extra=0;
        for(i=0;i<n;i++)
        {
            if((arr[i]-x)<0)
            {
                if((arr[i]-x+extra)<0){ck=0;break;}
                else extra=extra-(x-arr[i]);
            }

            else if((arr[i]-x)>0)extra=extra+arr[i]-x;
            
        }

        if(ck==1)yes;
        else no;
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/B_Make_It_Ugly.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,i;
    cin>>n;
    vector<ll>v(n);
    set<ll>s;
    forn(i,n)
    {
        cin>>v[i];
        s.insert(v[i]);
    }

    if(s.size()==1){cout<<-1<<"\n"; return 0;}

    ll  mx=LLONG_MAX,cnt=0;

    for(i=0;i<n;i++)
    {
        if(v[i]==v[0])cnt++;
        else 
        {
            if(cnt<mx)mx=cnt;
            cnt=0;
        }
    }
    if(cnt<mx)mx=cnt;
    
    cout<<mx;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Majority.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string str, ans;
    cin >> str;
    for(int i = 0; i < n;){
        if(str[i] == 49)ans.push_back('1'), i++;
        else{
            ans.push_back('0');
            while (str[i] == '0')i++;            
        }
    }

    int c0 = 0;
    for(int i = 0; i < ans.size(); i++){
        if(ans[i] == 48)c0++;
    }
    
    int c1 = ans.size() - c0;

    if(c1 > c0)yes;
    else no;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Make_Product_Equal_One.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;

    ll n,sum=0,m=0,z=0;
    cin>>n;
    forn(i,n)
    {
        lin(x);
        if(x>0)sum+=x-1;
        if(x==0){ z++;}
        if(x<0)
        {
            m++;
            sum+=abs(-x-1);
        }
    }

    if(m%2==1 && z>0){sum+=1; z--;}
    else if(m%2==1)sum+=2;
    sum+=z;
    cout<<sum;nl;
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Zero_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

#define yes cout << "YES" << endl;
#define no cout << "NO" << endl;
#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    int n;
    cin >> n;
    int v[n];
    int sum = 0;
    for(int i = 0; i < n; i++)cin >> v[i], sum += v[i];

    if(sum & 1){no; return 0;}
    for(int i = 0; i < n; i++){
        if(v[i] > (sum - v[i])){
            no;
            return 0;
        }
    }
    yes;
}

"/home/raihan/Desktop/Codeforces/ckk.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int n;
    cin>>n;
    vector <ll> arr(n);
    forn(i,n)cin>>arr[i];
    forn(i,n)cout<<arr[i];
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/Counting_Numbers.cpp"

"/home/raihan/Desktop/Codeforces/C_1_Adjust_The_Presentation_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YA\n"
#define no                 cout<<"TIDAK\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m, q;
    cin >> n >> m >> q;
    vin a(n), b(m);
    
    forn(i,n)cin >> a[i];
    forn(i,m)cin >> b[i];

    set<int> s;
    vin temp;
    for(int i = 0; i < m; i++){
        if(s.count(b[i]))continue;
        s.insert(b[i]);
        temp.push_back(b[i]);
        if(s.size() == n)break;
    }

    for(int i = 0; i < temp.size(); i++){
        if(a[i] != temp[i]){
            no;
            return;
        }
    }
    yes;
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Bessie_s_Birthday_Cake_Easy_Version.cpp"
//Another Version

#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,x,y,k,out=0;
    cin>>n>>x>>y;
    set<ll>s; vector<ll>df;

    forn(i,x){cin>>k; s.insert(k);}
    s.insert(n+*s.begin());

    set<ll>::iterator f=s.begin(),se=++f;f--;
    for(;se!=s.end();f++,se++)df.pb(*se-*f);
    
    forn(i,df.size())if(df[i]==2)out++;
    cout<<out+x-2;nl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Encryption_easy.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    vin v(n);
    forn(i,n)cin >> v[i];
    vin u = v;
    for(int i = n - 2; i >= 0; i--)v[i] += v[i + 1];

    int ans = 0;
    int sum = u[0];
    for(int i = 1; i < n; i++){
        int temp = sum % m + v[i] % m;
        ans = max(ans, temp);
        sum += u[i];
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Good_Numbers_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e18 + 100;
int n;
vin v;

void sukuna(){
    lin(x);
    int ans = 0, i;
    set<int> s;
    for( i = n - 1; i >= 0; i--){
        if(v[i] <= x){
            s.insert(v[i]);
        }
    } 
    for(int i = n - 1; i >= 0; i--){
        if(v[i] <= x - ans){
            s.erase(v[i]);
            ans += v[i];
        }
    }
    for(i = 0; i < n; i++)if(v[i] > x)break;

    if(ans < x){
        ans += *s.begin();
        for(int i = 0; i < n; i++){
            if(v[i] < *s.begin())ans -= v[i];
            else break;
        }
        if(ans < x)ans = v[i];
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int b = 1;
    for(; b < N; b *= 3){
        v.push_back(b);
    }
    n = v.size();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Good_Subarrays_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int ans = 0, cnt = 1;
    for(int i = 1; i < n; i++){
        if(v[i] > v[i - 1]){
            cnt++;
        }else if(v[i] <= v[i - 1] && v[i] > cnt){
            cnt++;
        }else{
            ans += (cnt * (cnt + 1) / 2);
            int x = v[i] - 1;
            ans -= x * (x + 1) / 2;
            cnt = v[i];
        }
    }

    ans += (cnt * (cnt + 1) / 2);
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Guessing_the_Greatest_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


class solve{
    public:
        int n;
        int ans = 1;
        solve(int n){
            this->n = n;
            ans = computerMid(1, n);
        }
        int ask(int l, int r){
            cout <<"? " << l <<" " << r << endl;
            cout.flush();
            lin(x);
            return x;
        }

        int computerMid(int lo, int hi){
            //Base Case
            if(hi == lo)return hi;
            if(hi - lo == 1){
                if(ask(lo, hi) == lo)return hi;
                else return lo;
            }

            int mid = ask(lo, hi);
            if(hi == mid or lo == mid){
                return userMid(lo, hi, mid);
            }

            if(ask(mid, hi) != mid){
                return userMid(lo, mid, mid);
            }else{
                return userMid(mid, hi, mid);
            }
        }


        int userMid(int lo, int hi, int m){
            //Base Case
            if(lo == hi)return lo;
            if(hi - lo == 1){
                if(ask(lo, hi) == lo)return hi;
                else return lo;
            }

            int umid = (lo + hi) / 2;
            if(hi == m){
                if(ask(umid, hi) == hi){
                    return userMid(umid, hi, hi);
                }else{
                    return computerMid(lo, umid);
                }
            }else{
                if(ask(lo, umid) == lo){
                    return userMid(lo, umid, lo);
                }else{
                    return computerMid(umid, hi);
                }
            }

        }
};


int32_t main(){
    fast_in_out;
    lin(n);
    
    solve sl(n);
    cout <<"! ";
    cout << sl.ans << endl;
    cout.flush();
}

"/home/raihan/Desktop/Codeforces/C_1_Increasing_Subsequence_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n), a; a.push_back(0);
    forn(i,n)cin >> v[i];
    string ans;


    for(int i = 0, j = n - 1; i <= j;){
        if(v[i] < v[j]){
            if(v[i] > a.back())ans.push_back('L'),a.pb(v[i]), i++;
            else if(v[j] > a.back())ans.push_back('R'), a.pb(v[j]), j--;
            else break;
        }else{
            if(v[j] > a.back())ans.pb('R'), a.pb(v[j]), j--;
            else if(v[i] > a.back())ans.push_back('L'),a.pb(v[i]), i++;
            else break;        
        }
    }
    cout<<ans.size()<<endl;
    cout<<ans<<endl;

    
}

"/home/raihan/Desktop/Codeforces/C_1_k_LCM_easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int lcm(int a, int b){
    return a * b / __gcd(a, b);
}

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    if(n & 1){
        cout << 1 <<" " << n /2 <<" " << n / 2 << endl;
        return;
    }

    for(int i = 2; i < n; i *= 2){
        int x = n - i;
        int hf = x / 2;
        if(lcm(hf, i) <= n / 2){
            cout << i <<" " << hf <<" " << hf << endl;
            return;
        }
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Magnitude_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

vin a, b;

void dp(vin &v, int n){
    if(n == -1){
        return;
    }

    if(a[n + 1] == 0){
        dp(v, n - 1);
        int x = a[n] + v[n];
        int y = b[n] + v[n];

        a[n + 1] = max(x, abs(y));
        b[n + 1] = min(x,y);
    }
    
}

void solve()
{
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];

    //Change Global Variable
    a.assign(n+1, 0); b = a;

    dp(v, n - 1);
    cout<<max(a[n], abs(b[n]))<<endl;
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Potions_Easy_Version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    multiset<int> s;
    int sum = 0, sz = 0;

    for(int i = 0; i < n; i++){
        s.insert(v[i]); sz++; sum += v[i];
        if(sum < 0){
            sum -= *s.begin();
            sz--;
            s.erase(s.begin());
        }
    }

    cout << sz << endl; 
}

int32_t main(){
    fast_in_out;

    int test = 1;  // cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Powering_the_Hero_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int ans = 0;
    priority_queue<int> q;
    for(int i = 0; i < n; i++){
        lin(x);
        if(x == 0){
            if(q.empty())continue;
            ans += q.top();
            q.pop();
        }else{
            q.push(x);
        }
    }

    cout << ans << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_1_Shohag_Loves_XOR_Easy_Version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int x, m;
    cin >> x >> m;
    int sum = 0, n = min(m, x *3);
    
    for(int i = 1; i <= n; i++){
        int div=(x ^ i);
        if(div==0){continue;}
        if(x % div == 0 or i % div == 0){
            sum++;
        }
    }

    cout << sum << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_2_Bessie_s_Birthday_Cake_Hard_Version.cpp"
//Finally I got this

#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()
#define rall(x)            x.rbegin(),x.rend()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,x,y,i,out=0,kk;
    cin>>n>>x>>y;
    vector<ll>df; set<ll>s;
    forn(i,x){cin>>kk;   s.insert(kk);}
    s.insert(n+*s.begin());

    auto fi=s.begin(),se=++fi; fi--;
    for(;se!=s.end();se++,fi++)df.pb(*se-*fi);
    sort(all(df));


    for(i=0;i<df.size() &&  y>0;i++)
    {
        ll d=df[i];
        if(d%2==0 && df[i]>2)
        {
            if((d/2-1)<=y)
            {
                out+=d/2;
                x+=d/2-1;
                y-=d/2-1;
                df[i]=0;
            }
            else
            {
                out+=y;
                x+=y;
                df[i]-=y*2;
                y=0;
            }
        }
    }

    for(i=0;i<df.size() && y>0;i++)
    {
        ll d=df[i];
        if(d>2)
        {
            if(d/2<=y)
            {
                out+=d/2;
                x+=d/2;
                y-=d/2;
                df[i]=0;
            }
            else
            {
                out+=y;
                x+=y;
                y=0;
                df[i]=y*2;
            }
        }
    }

    for(i=0;i<df.size();i++)if(df[i]==2)out++;
    
    cout<<x+out-2;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}


/* Corner case
15 3 2
3 6 10

Output: 6
*/

"/home/raihan/Desktop/Codeforces/C_2_Good_Numbers_hard_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e18 + 100;
int n;
vin v;

void sukuna(){
    lin(x);
    int ans = 0, i;
    set<int> s;
    for( i = n - 1; i >= 0; i--){
        if(v[i] <= x){
            s.insert(v[i]);
        }
    } 
    for(int i = n - 1; i >= 0; i--){
        if(v[i] <= x - ans){
            s.erase(v[i]);
            ans += v[i];
        }
    }
    for(i = 0; i < n; i++)if(v[i] > x)break;

    if(ans < x){
        ans += *s.begin();
        for(int i = 0; i < n; i++){
            if(v[i] < *s.begin())ans -= v[i];
            else break;
        }
        if(ans < x)ans = v[i];
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int b = 1;
    for(; b < N; b *= 3){
        v.push_back(b);
    }
    n = v.size();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_2_Increasing_Subsequence_hard_version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n), a; a.push_back(0);
    forn(i,n)cin >> v[i];
    string ans, ans2;

    for(int i = 0, j = n - 1; i <= j;){
        if(v[i] < v[j]){
            if(v[i] > a.back())ans.push_back('L'),a.pb(v[i]), i++;
            else if(v[j] > a.back())ans.push_back('R'), a.pb(v[j]), j--;
            else break;
        }else{
            if(v[j] > a.back())ans.pb('R'), a.pb(v[j]), j--;
            else if(v[i] > a.back())ans.push_back('L'),a.pb(v[i]), i++;
            else break;        
        }
    }
    ans2 = ans;
    ans.clear();
    a.clear(); a.push_back(0);

    for(int i = 0, j = n - 1; i <= j;){
        if(v[i] <= v[j]){
            if(v[i] > a.back())ans.push_back('L'),a.pb(v[i]), i++;
            else if(v[j] > a.back())ans.push_back('R'), a.pb(v[j]), j--;
            else break;
        }else{
            if(v[j] > a.back())ans.pb('R'), a.pb(v[j]), j--;
            else if(v[i] > a.back())ans.push_back('L'),a.pb(v[i]), i++;
            else break;        
        }
    }

    if(ans2.size() > ans.size())ans = ans2;

    cout<<ans.size()<<endl;
    cout<<ans<<endl;
}

"/home/raihan/Desktop/Codeforces/C_2_k_LCM_hard_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int nn, k;

int lcm(int a, int b){
    return a * b / __gcd(a, b);
}

void k3(int m){
    for(int i = 2;i < nn; i *= 2){
        int x = m - i;
        int hf = x / 2;
        if(lcm(hf, i) <= nn / 2){
            cout << i <<" " << hf <<" " << hf << endl;
            return;
        }
    }
}

void sukuna(int test){
    int n; 
    cin >> n >> k;
    nn = n;
    if((n & 1) && (k & 1)){
        forn(i, k - 2){
            cout << 1 <<" "; n--;
        }
        cout << n / 2 <<" " << n / 2 << endl;
        return;
    }
    if(n % 2 == 0 && k % 2 == 0){
        forn(i,k - 2){
            cout << 1 <<" "; n--;
        }
        cout << n / 2 <<" " << n / 2 << endl;
        return;
    }
    if(k == 3){
        k3(n);
        return;
    }
    if(n & 1){cout << 1 <<" "; k--; n--;}
    if(k & 1){
        forn(i, k - 3){
            cout << 1 <<" "; n--;
        } 
        k3(n);
        return;
    }else{
        forn(i,  k - 3){
            cout << 2 <<" "; n -= 2;
        }
        k3(n);
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/1_Guess_the_Number.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string ask(int n){
    cout << n <<endl;
    cout.flush();
    string inp;
    cin >> inp;
    return inp;
}

int32_t main(){
    fast_in_out;
    
    int lo = 1, hi = 1e6, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        string q = ask(mid);
        if(q == ">="){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    string q = ask(lo);
    if(q != ">=")lo--;
    cout <<"! ";
    cout << lo << endl;
    cout.flush();
}

"/home/raihan/Desktop/Codeforces/a.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class Dsu{
    private:
        int n;
        vector<int> par, sz;
        void make(){
            for(int v = 1; v <= n; v++){
                par[v] = v; 
                sz[v] = 1;
            }
        }
    public:
        Dsu(int n){
            this->n = n;
            par = vector<int> (n + 1);
            sz = vector<int> (n + 1);
            make();
        }
        
        int Find(int v){
            if(par[v] == v)return v;
            return par[v] = Find(par[v]);
        }
        void Union(int a, int b){
            a = Find(a);
            b = Find(b);

            if(a != b){
                if(sz[a] < sz[b])swap(a, b);
                par[b] = a;
                sz[a] += sz[b];
            }
        }
};

struct grp{
    ordered_set<pr>s;
    int mx = 0;
    void display(){
        mprint(s);nl;
    }
};

void task1(){

}

void sukuna(int test){
    int n, q;
    cin >> n >> q;
    vector<grp> v(n + 1);
    vector<vin> inp(n + 1);
    vin isEmpty(n + 1);
    Forn(i,n){
        lin(m);
        set<int> s;
        forn(j, m){
            lin(x);
            s.insert(x);
        }
        vin temp;
        for(auto it : s)temp.push_back(it);
        m = temp.size();
        v[i].mx = temp.back();
        inp[i] = temp;

        int cur = 1;
        for(int j = 0; j < m; j++, cur++){
            if(temp[j] == cur)continue;
            v[i].s.insert({cur, temp[j] - 1});
            cur = temp[j];
        }
    }

    // for(auto i : v)i.display();

    Dsu dsu(n + 10);

    while(q--){
        lin(type);
        if(type == 1){
            int x, y;
            cin >> x >> y;
            isEmpty[y] = 1;
            dsu.Union(x, y);
            int par = dsu.Find(x);

            cout << x <<" " << y << endl;
            cout << "Parent: " << par << endl;


            for(auto i : inp[y]){

                int ind = v[par].s.order_of_key({i, i});
                pr p = *v[par].s.find_by_order(ind);
                if(p.first < i)ind--;
                p = *v[par].s.find_by_order(ind);
                cout << i <<" " << endl;
                cout << p.first <<" " << p.second << endl;
                
                if(i > v[par].mx){
                    if(i == v[par].mx + 1);
                    else v[par].s.insert({v[par].mx + 1, i - 1});
                    v[par].mx = i;
                    continue;
                }


                if(p.second < i)continue;
                if(p.first == i){
                    if(p.second != p.first) v[par].s.insert({i + 1, p.second});
                    v[par].s.erase(p);
                    continue;
                }

                if(p.second == i){
                    if(p.second != p.first) v[par].s.insert({p.first, i - 1});
                    v[par].s.erase(p);
                    continue;
                }
                v[par].s.insert({p.first, i - 1});
                v[par].s.insert({i + 1, p.second});
                v[par].s.erase(p);

            }
            // inp[y].clear();
            nl;
        }else{
            lin(x);

        }
    }

    Forn(i,n){
        cout << "Index: " << i << endl;
        // v[i].display();
        cout << v[i].mx << endl;
    }    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/Addition_of_Big_Integers.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;


#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;



class BigInt{
    string digits;
public:

    //Constructors:
    BigInt(unsigned long long n = 0);
    BigInt(string &);
    BigInt(const char *);
    BigInt(BigInt &);

    //Helper Functions:
    friend void divide_by_2(BigInt &a);
    friend bool Null(const BigInt &);
    friend int Length(const BigInt &);
    int operator[](const int)const;


    //Direct assignment
    BigInt &operator=(const BigInt &);

    //Post/Pre - Incrementation
    BigInt &operator++();
    BigInt operator++(int temp);
    BigInt &operator--();
    BigInt operator--(int temp);

    //Addition and Subtraction
    friend BigInt &operator+=(BigInt &, const BigInt &);
    friend BigInt operator+(const BigInt &, const BigInt &);
    friend BigInt operator-(const BigInt &, const BigInt &);
    friend BigInt &operator-=(BigInt &, const BigInt &);

    //Comparison operators
    friend bool operator==(const BigInt &, const BigInt &);
    friend bool operator!=(const BigInt &, const BigInt &);

    friend bool operator>(const BigInt &, const BigInt &);
    friend bool operator>=(const BigInt &, const BigInt &);
    friend bool operator<(const BigInt &, const BigInt &);
    friend bool operator<=(const BigInt &, const BigInt &);

    //Multiplication and Division
    friend BigInt &operator*=(BigInt &, const BigInt &);
    friend BigInt operator*(const BigInt &, const BigInt &);
    friend BigInt &operator/=(BigInt &, const BigInt &);
    friend BigInt operator/(const BigInt &, const BigInt &);

    //Modulo
    friend BigInt operator%(const BigInt &, const BigInt &);
    friend BigInt &operator%=(BigInt &, const BigInt &);

    //Power Function
    friend BigInt &operator^=(BigInt &,const BigInt &);
    friend BigInt operator^(BigInt &, const BigInt &);
    
    //Square Root Function
    friend BigInt sqrt(BigInt &a);

    //Read and Write
    friend ostream &operator<<(ostream &,const BigInt &);
    friend istream &operator>>(istream &, BigInt &);

    //Others
    friend BigInt NthCatalan(int n);
    friend BigInt NthFibonacci(int n);
    friend BigInt Factorial(int n);
};

BigInt::BigInt(string & s){
    digits = "";
    int n = s.size();
    for (int i = n - 1; i >= 0;i--){
        if(!isdigit(s[i]))
            throw("ERROR");
        digits.push_back(s[i] - '0');
    }
}
BigInt::BigInt(unsigned long long nr){
    do{
        digits.push_back(nr % 10);
        nr /= 10;
    } while (nr);
}
BigInt::BigInt(const char *s){
    digits = "";
    for (int i = strlen(s) - 1; i >= 0;i--)
    {
        if(!isdigit(s[i]))
            throw("ERROR");
        digits.push_back(s[i] - '0');
    }
}
BigInt::BigInt(BigInt & a){
    digits = a.digits;
}

bool Null(const BigInt& a){
    if(a.digits.size() == 1 && a.digits[0] == 0)
        return true;
    return false;
}
int Length(const BigInt & a){
    return a.digits.size();
}
int BigInt::operator[](const int index)const{
    if(digits.size() <= index || index < 0)
        throw("ERROR");
    return digits[index];
}
bool operator==(const BigInt &a, const BigInt &b){
    return a.digits == b.digits;
}
bool operator!=(const BigInt & a,const BigInt &b){
    return !(a == b);
}
bool operator<(const BigInt&a,const BigInt&b){
    int n = Length(a), m = Length(b);
    if(n != m)
        return n < m;
    while(n--)
        if(a.digits[n] != b.digits[n])
            return a.digits[n] < b.digits[n];
    return false;
}
bool operator>(const BigInt&a,const BigInt&b){
    return b < a;
}
bool operator>=(const BigInt&a,const BigInt&b){
    return !(a < b);
}
bool operator<=(const BigInt&a,const BigInt&b){
    return !(a > b);
}

BigInt &BigInt::operator=(const BigInt &a){
    digits = a.digits;
    return *this;
}

BigInt &BigInt::operator++(){
    int i, n = digits.size();
    for (i = 0; i < n && digits[i] == 9;i++)
        digits[i] = 0;
    if(i == n)
        digits.push_back(1);
    else
        digits[i]++;
    return *this;
}
BigInt BigInt::operator++(int temp){
    BigInt aux;
    aux = *this;
    ++(*this);
    return aux;
}

BigInt &BigInt::operator--(){
    if(digits[0] == 0 && digits.size() == 1)
        throw("UNDERFLOW");
    int i, n = digits.size();
    for (i = 0; digits[i] == 0 && i < n;i++)
        digits[i] = 9;
    digits[i]--;
    if(n > 1 && digits[n - 1] == 0)
        digits.pop_back();
    return *this;
}
BigInt BigInt::operator--(int temp){
    BigInt aux;
    aux = *this;
    --(*this);
    return aux;
}

BigInt &operator+=(BigInt &a,const BigInt& b){
    int t = 0, s, i;
    int n = Length(a), m = Length(b);
    if(m > n)
        a.digits.append(m - n, 0);
    n = Length(a);
    for (i = 0; i < n;i++){
        if(i < m)
            s = (a.digits[i] + b.digits[i]) + t;
        else
            s = a.digits[i] + t;
        t = s / 10;
        a.digits[i] = (s % 10);
    }
    if(t)
        a.digits.push_back(t);
    return a;
}
BigInt operator+(const BigInt &a, const BigInt &b){
    BigInt temp;
    temp = a;
    temp += b;
    return temp;
}

BigInt &operator-=(BigInt&a,const BigInt &b){
    if(a < b)
        throw("UNDERFLOW");
    int n = Length(a), m = Length(b);
    int i, t = 0, s;
    for (i = 0; i < n;i++){
        if(i < m)
            s = a.digits[i] - b.digits[i]+ t;
        else
            s = a.digits[i]+ t;
        if(s < 0)
            s += 10,
            t = -1;
        else
            t = 0;
        a.digits[i] = s;
    }
    while(n > 1 && a.digits[n - 1] == 0)
        a.digits.pop_back(),
        n--;
    return a;
}
BigInt operator-(const BigInt& a,const BigInt&b){
    BigInt temp;
    temp = a;
    temp -= b;
    return temp;
}

BigInt &operator*=(BigInt &a, const BigInt &b)
{
    if(Null(a) || Null(b)){
        a = BigInt();
        return a;
    }
    int n = a.digits.size(), m = b.digits.size();
    vector<int> v(n + m, 0);
    for (int i = 0; i < n;i++)
        for (int j = 0; j < m;j++){
            v[i + j] += (a.digits[i] ) * (b.digits[j]);
        }
    n += m;
    a.digits.resize(v.size());
    for (int s, i = 0, t = 0; i < n; i++)
    {
        s = t + v[i];
        v[i] = s % 10;
        t = s / 10;
        a.digits[i] = v[i] ;
    }
    for (int i = n - 1; i >= 1 && !v[i];i--)
            a.digits.pop_back();
    return a;
}
BigInt operator*(const BigInt&a,const BigInt&b){
    BigInt temp;
    temp = a;
    temp *= b;
    return temp;
}

BigInt &operator/=(BigInt& a,const BigInt &b){
    if(Null(b))
        throw("Arithmetic Error: Division By 0");
    if(a < b){
        a = BigInt();
        return a;
    }
    if(a == b){
        a = BigInt(1);
        return a;
    }
    int i, lgcat = 0, cc;
    int n = Length(a), m = Length(b);
    vector<int> cat(n, 0);
    BigInt t;
    for (i = n - 1; t * 10 + a.digits[i] < b;i--){
        t *= 10;
        t += a.digits[i] ;
    }
    for (; i >= 0; i--){
        t = t * 10 + a.digits[i];
        for (cc = 9; cc * b > t;cc--);
        t -= cc * b;
        cat[lgcat++] = cc;
    }
    a.digits.resize(cat.size());
    for (i = 0; i < lgcat;i++)
        a.digits[i] = cat[lgcat - i - 1];
    a.digits.resize(lgcat);
    return a;
}
BigInt operator/(const BigInt &a,const BigInt &b){
    BigInt temp;
    temp = a;
    temp /= b;
    return temp;
}

BigInt &operator%=(BigInt& a,const BigInt &b){
    if(Null(b))
        throw("Arithmetic Error: Division By 0");
    if(a < b){
        return a;
    }
    if(a == b){
        a = BigInt();
        return a;
    }
    int i, lgcat = 0, cc;
    int n = Length(a), m = Length(b);
    vector<int> cat(n, 0);
    BigInt t;
    for (i = n - 1; t * 10 + a.digits[i] < b;i--){
        t *= 10;
        t += a.digits[i];
    }
    for (; i >= 0; i--){
        t = t * 10 + a.digits[i];
        for (cc = 9; cc * b > t;cc--);
        t -= cc * b;
        cat[lgcat++] = cc;
    }
    a = t;
    return a;
}
BigInt operator%(const BigInt &a,const BigInt &b){
    BigInt temp;
    temp = a;
    temp %= b;
    return temp;
}

BigInt &operator^=(BigInt & a,const BigInt & b){
    BigInt Exponent, Base(a);
    Exponent = b;
    a = 1;
    while(!Null(Exponent)){
        if(Exponent[0] & 1)
            a *= Base;
        Base *= Base;
        divide_by_2(Exponent);
    }
    return a;
}
BigInt operator^(BigInt & a,BigInt & b){
    BigInt temp(a);
    temp ^= b;
    return temp;
}

void divide_by_2(BigInt & a){
    int add = 0;
    for (int i = a.digits.size() - 1; i >= 0;i--){
        int digit = (a.digits[i] >> 1) + add;
        add = ((a.digits[i] & 1) * 5);
        a.digits[i] = digit;
    }
    while(a.digits.size() > 1 && !a.digits.back())
        a.digits.pop_back();
}

BigInt sqrt(BigInt & a){
    BigInt left(1), right(a), v(1), mid, prod;
    divide_by_2(right);
    while(left <= right){
        mid += left;
        mid += right;
        divide_by_2(mid);
        prod = (mid * mid);
        if(prod <= a){
            v = mid;
            ++mid;
            left = mid;
        }
        else{
            --mid;
            right = mid;
        }
        mid = BigInt();
    }
    return v;
}


istream &operator>>(istream &in,BigInt&a){
    string s;
    in >> s;
    int n = s.size();
    for (int i = n - 1; i >= 0;i--){
        if(!isdigit(s[i]))
            throw("INVALID NUMBER");
        a.digits[n - i - 1] = s[i];
    }
    return in;
}

ostream &operator<<(ostream &out,const BigInt &a){
    for (int i = a.digits.size() - 1; i >= 0;i--)
        cout << (short)a.digits[i];
    return cout;
}


void sukuna(int test){
    string a, b;
    cin >> a >> b;
    int e1 = a.front() == '-';
    int e2 = b.front() == '-';

    if(e1)ppfr(a);
    if(e2)ppfr(b);
    BigInt x(a), y(b);
    bool flg = false;
    if(x < y){
        flg = true;
        x = BigInt(b);
        y = BigInt(a);
    }

    // cout << e1 <<" " << e2 << endl;
    // cout << a <<" " << b << endl;

    if(!e1 and !e2){
        cout << x + y << endl;
    }else if(e1 and e2){
        cout << "-" << x + y << endl;
    }else if(e2){
        if(!flg)cout << x - y << endl;
        else cout << "-" << x - y << endl;
    }else{
        if(!flg)cout << "-" << x - y << endl;
        else cout << x - y << endl;
    }

   
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/alif_vai.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int smm(deque<ll>d,ll m, ll &a,ll &b)
{
    // a=d[0]; b=d[1];
    forn(i,m-1)
    {
        if(d[0]>d[1])
        {
            d.push_back(d[1]);
            d.erase(++d.begin());
        }
        else
        {
            d.push_back(d[0]);
            d.erase(d.begin());
        }
    }

    a=d[0]; 
    b=d[1];

    return 0;

}

void cr(deque<ll>&d,int n)
{
    forn(i,n-1)
    {
        if(d[0]>d[1])
        {
            d.push_back(d[1]);
            d.erase(++d.begin());
        }
        else
        {
            d.push_back(d[0]);
            d.erase(d.begin());
        }
    }
    
}


int main()
{
    fast_in_out;
    ll n,q,mx=0,a,b;
    cin>>n>>q;
    deque<ll>d,f;
    vector<ll>v;
    forn(i,n)
    {
        lin(x);
        v.pb(x);
        if(x>mx)mx=x;
        d.push_back(x);
        f.push_back(x);
    }
    cr(f,n);

    forn(i,q)
    {
        lin(m);

        if(m>=n)
        {
            cout<<mx<<" ";
            if(m%(n-1)==0)cout<<f[n-1];
            else cout<<f[m%(n-1)];
        }
        else 
        {
            smm(d,m,a,b);
            cout<<a<<" "<<b;

        }
        nl;

    }

    return 0;
}

"/home/raihan/Desktop/Codeforces/AllSnippet"

"/home/raihan/Desktop/Codeforces/AllSnippet.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;
const int INF = 1e18 + 7;

//Using of Template (Generic Class)
template<class T>
void print(vector<T> v){
    for(auto i : v)cout << i <<" ";
    cout << endl;
}

//Comparator Set Sort
struct cmp{
    bool operator()(const auto &a, const auto &b) const{
        if(a > b)return true;
        return false;
    }
};    

//Binary Exponentiation 
int binExp(int a, int b){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = ((ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }

/***********************************/


//Binary Exponentiation Matrix
int n;
vector<vector<int>> muliplyMatrix(vector<vector<int>> a, vector<vector<int>> b){
    vector<vector<int>> ans(n, vector<int> (n));
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            for(int k = 0; k < n; k ++){
                ans[i][j] += a[i][k] * a[k][j];
            }
        }
    }
    return ans;
}

vector<vector<int>> binExpMatrix(vector<vector<int>> v, int p){
    if(p <= 1){
        return v;
    }
    vector<vector<int>> u = binExpMatrix(v, p / 2), temp;
    temp = muliplyMatrix(u, u);
    if(p & 1)return muliplyMatrix(temp, v);
    else return temp;  

}
/************************************************************************************************************/



//Seive Algorithm
void seive(){
    bool isPrime[N] = {false};

    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            for(int j = i + i; j < N; j += i){
                isPrime[j] = true;
            }
        }
    }
    vector<int> prime;

    for(int i = 2; i < N; i++){
        if(!isPrime[i])prime.push_back(i);
    }
    print(prime);
}
/*********************************************************************************************************/



//Segment Tree
vector<int> source(N), tree(4 * N);

int query(int node, int lo, int hi, int l, int r){
    
    if(lo > r or hi < l)return -M;
    if(lo >= l and lo <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid + 1, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi , l, r);
    return max(q1, q2);
}

void update(int node, int lo, int hi, int pos, int value){

    if(hi < pos or lo > pos)return;
    if(hi == lo){
        source[pos] = value;
        tree[node] = value;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, value);
    update(2 * node + 1, mid + 1, hi, pos, value);
    tree[node] = max(tree[2 * node], tree[2 * node + 1]);
}

void build(int node, int lo, int hi){
    if(hi == lo){
        tree[node] = source[lo];
        return;
    }
    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = max(tree[2 * node], tree[2 * node + 1]);

}
/*********************************************************************************************************/



/******************Graph and Tree**********************/
vector<vector<int>> graph(N);
vector<int> vis(N);

vector<int> graph[N], vis(N), height(N), depth(N);
int n,m;

void dfs(int vertex = 1, int par = -1){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        if(vis[child])continue;
        
        depth[child] = depth[vertex] + 1;
        dfs(child);
        height[vertex] = max(height[vertex], height[child] + 1);
    }
}


//Tree DFS
int n;
vector<int> graph[N];
int depth[N], height[N];

void dfs(int vertex, int par){
    //Part 1: After entering vertex

    for(auto child : graph[vertex]){
        if(child == par)continue;
        
        //Part 2: Before entering child

        depth[child] = depth[vertex] + 1;
        dfs(child, vertex);

        //Part 3: After exiting child

        height[vertex] = max(height[vertex], height[child] + 1);
    }

    //Part 4: Before exiting vertex
}



//Breadth First Search
void bfs(int vertex = 1){
    vector<int>  dist(N);
    queue<int> q;
    q.push(vertex);
    vis[vertex] = 0;

    while(!q.empty()){
        vertex = q.front();
        q.pop();

        for(auto child : graph[vertex]){
            if(vis[child])continue;
            vis[child] = true;
            q.push(child);
            dist[child] = dist[vertex] + 1;
        }
    }
}

//Maze Bfs
int n, m, vis[N][N];
vector<string> graph;

vector<pair<int, int>> movements = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};
bool isValid(int x, int y){return x >= 0 && x < n && y >= 0 && y < m;}

void bfs(int x, int y){
    queue<pair<int, int>> q;
    q.push({x, y});
    vis[x][y] = true;

    while(!q.empty()){
        x = q.front().first;
        y = q.front().second;
        q.pop();

        for(auto mv : movements){
            int childx = x + mv.first;
            int childy = y + mv.second;

            if(!isValid(childx, childy))continue;
            if(vis[childx][childy])continue;
            vis[childx][childy] = true;

            
            q.push({childx, childy});
        }
    }
}


//Kruskal*******
class grp{public: int x, y, z; grp(){}grp(int a, int b, int c){x = a; y = b; z = c;}};

//Disjoint Set Union*******
class dsu{
    private:
        int n; vector<int> par, sz;
        void make(){
            for(int v = 1; v <= n; v++){
                par[v] = v; 
                sz[v] = 1;
            }
        }
    public:
        dsu(int n){
            this->n = n;
            par = vector<int> (n + 1); sz = vector<int> (n + 1);
            make();
        }
        
        int Find(int v){
            if(par[v] == v)return v;
            return par[v] = Find(par[v]);
        }
        void Union(int a, int b){
            a = Find(a);
            b = Find(b);

            if(a != b){
                if(sz[a] < sz[b])swap(a, b);
                par[b] = a;
                sz[a] += sz[b];
            }
        }
};

void kruskal(){
    int n, m;
    cin >> n >> m;
    vector<grp> graph;
    for(int i = 0; i < m; i++){
        int x, y, z;
        cin >> x >> y >> z;
        graph.push_back({x, y, z});
    }
    sort(graph.begin(), graph.end(),[](grp a, grp b){return a.z < b.z;});

    int total_cost = 0;
    dsu obj(n);

    for(auto edge : graph){
        int x = edge.x;
        int y = edge.y;
        int z = edge.z;

        if(obj.Find(x) == obj.Find(y))continue;
        obj.Union(x, y);
        total_cost += z;
    }

    cout << total_cost << endl;
}




//Dijsktra*******
void dijsktra(int source){

    vector<int> dist(N, INF), vis(N);

    set<pair<int, int>> s;
    s.insert({0, source});
    dist[source] = 0;

    while(!s.empty()){
        auto node = * s.begin();
        int v = node.second;
        int d = node.first;
        s.erase(s.begin());

        if(vis[v])continue;
        vis[v] = 1;

        for(auto child : graph[v]){
            int child_v = child.first;
            int wt = child.second;

            if(dist[v] + wt <  dist[child_v]){
                dist[child_v] = dist[v] + wt;
                s.insert({dist[child_v], child_v});
            }
        }        
    }
}

//BipartileGraph

int n, m;
vector<int> graph[N], color(N);
bool vis[N];

void dfs(int vertex, int col = 1){
    if(vis[vertex])return;
    vis[vertex] = true;

    color[vertex] = col;
    if(col == 1)col = 2;
    else col = 1;

    for(auto child : graph[vertex]){
        dfs(child, col);
    }
}

void sukuna(){
        cin >> n >> m;

    for(int i = 0; i < m; i++){
        int x, y;
        cin >> x >> y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }

    for(int i = 1; i <= n; i++){
        if(vis[i])continue;
        dfs(i, 1);
    }

    for(int v = 1; v <= n; v++){
        for(auto u : graph[v]){
            if(color[u] == color[v]){
                cout << "IMPOSSIBLE" << endl;
                return;
            }
        }
    }
    
    for(int i = 1; i <= n; i++){
        cout << color[i] << " ";
    } cout << endl;
}
/***********************************************END******************************************************/

int32_t main(){
    
}

"/home/raihan/Desktop/Codeforces/A_A.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
#define print(arr)     for(auto i : arr)cout << i <<" "; cout << endl;

const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    int n;
    cin >> n;
    int arr[n];
    for(int i = 0; i < n; i++)cin >> arr[i];

    int index = 0;
    for(int i = 64; i >= 0; i--){
        int mx = INT_MIN;
        int mxInd = index;
        for(int j = index; j < n; j++){
            int setBit = (arr[j] >> i) & 1;
            if(setBit && mx < arr[j]){
                mx = arr[j];
                mxInd = j;
            }
        }
        if(mx == INT_MIN)continue;
        swap(arr[index], arr[mxInd]);
        mxInd = index;

        for(int j = 0; j < n; j++){
            int setBit = (arr[j] >> i) & 1;
            if(setBit and j != mxInd){
                arr[j] ^= arr[mxInd];
            }
        }
        index++;
    }
    int ans = 0;
    for(auto i : arr)ans ^= i;
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/A_Addition_and_Minimum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int INF = 1e18 + 100;
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);


int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
        tree[node] += dx;

        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(lo > r or hi < l)return INF;
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return min(q1, q2);
}


void update(int node, int lo, int hi, int &l, int &r, int &val){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
        tree[node] += dx;

        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    

    if(lo > r or hi < l)return;
    if(lo >= l and hi <= r){
        tree[node] += val;

        if(hi != lo){
            lazy[2 * node] += val;
            lazy[2 * node + 1] += val;
        }
        return;    
    }
    
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);

    tree[node] = min(tree[2 * node], tree[2 * node + 1]);

}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1];
}


int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;
    // build(1, 0, n - 1);
    
    // return 0;
    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l >> r;
            cout << query(1, 0, n - 1, l, --r) << endl;
        }
    }

    // for(int i = 0; i < n; i++)cout << tree[i] <<" ";
    
}

"/home/raihan/Desktop/Codeforces/A_Addition_to_Segment.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);
 
int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        tree[node] += dx * (hi - lo + 1);
        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(lo > r or hi < l)return 0;
    if(lo >= l and hi <= r)return tree[node];
 
    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);
 
    return q1 + q2;
}
 
void update(int node, int lo, int hi, int &l, int &r, int &val){
 
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        tree[node] += dx * (hi - lo + 1);
        if(lo != hi){
            lazy[2 * node] += dx;
            lazy[2 * node + 1] += dx;
        }
    }
    
    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        tree[node] += (hi - lo + 1) * val;
        
        if(lo != hi){
            lazy[2 * node] += val;
            lazy[2 * node + 1] += val;
        }
        return;
    }
 
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);
 
    tree[node] = tree[2 * node] + tree[2 * node + 1];
}
 
 
void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }
 
    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);
 
    tree[node] = tree[2 * node] + tree[2 * node + 1];
}
 

int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;

    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l;
            cout << query(1, 0, n - 1, l, l) << endl;
        }
    }    
}

"/home/raihan/Desktop/Codeforces/A_Adjacent_Product.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;

    ll n,x,y;
    cin>>n>>x;
    for(int i=0;i<n-1;i++)
    {
        cin>>y;
        cout<<x*y<<" ";
        x=y;
    }nl;
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Adrenaline_Rush.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1), a(n + 1);
    vector<pr> ans;

    Forn(i,n)cin >> v[i];
    Forn(i,n)a[i] = i;

    for(int i = n, j; i > 0; i--){
        for(j = 1; j <= n; j++)if(v[i] == a[j])break;
        for(int k = j - 1; k > 0; k--){
            swap(a[k], a[k + 1]);
            ans.push_back({a[k], a[k + 1]});
        }
    }

    cout << ans.size() << endl;
    mprint(ans);
    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Alice_and_Books.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    int ans = v[n - 1];
    v.pop_back();
    cout<<*max_element(all(v)) + ans<<endl;
    
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Alice_s_Adventures_in_Chess.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, l, r;
    cin >> n >> l >> r;
    string str;
    cin >> str;
    int x = 0, y = 0;

    for(int i = 0; i < 10000; i++){
        for(auto s : str){
            if(s == 'N')y++;
            if(s == 'E')x++;
            if(s == 'S')y--;
            if(s == 'W')x--;

            if(x == l and y == r){
                yes;
                return;
            }
        }
    }
    no;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Alyona_and_a_Square_Jigsaw_Puzzle.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);

    forn(i,n){
        cin >> v[i];
    }

    int sum = 0, ans = 0;
    for(int i = 0; i < n; i++){
        sum += v[i];

        double res = sqrtl(sum);
        int num = res;
        if(num * num == sum){ans += (num & 1); }
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Anton_and_Letters.cpp"
//Nothing to say
#include<bits/stdc++.h>
#include<stdio.h>
#include<string>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int

int main()
{
    string str;
    getline(cin,str);
    int n=size(str),i,arr[26]={0},ans=0;
    for(i=1;i<n;i+=3) arr[str[i]-97]++;
    for(i=0;i<26;i++) if(arr[i]>0)ans++;
    cout<<ans<<endl;
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Are_You_a_Robot.cpp"
#include<bits/stdc++.h>
using namespace std;
int main()
{
    cout<<"security";
}

"/home/raihan/Desktop/Codeforces/A_Are_You_a_Robot_Again.cpp"
#include<bits/stdc++.h>
using namespace std;
int main()
{
    cout<<"safety";
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Array_Divisibility.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    for(int i = 1; i <= n; i++)cout<<i<<' ';
    nl;   
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Assignment_Addition_and_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long

#define left   lazy[2 * node]
#define right  lazy[2 * node + 1]

const int M = 1e9 + 7;
const int N = 1e5 + 10;

int n, q;
int v[N], tree[4 * N];
pair<int, int> lazy[4 * N];

void propagate(int node, int lo, int hi){
        if(lazy[node].first == 1){
        int x = lazy[node].second;
        lazy[node] = {0, 0};
        tree[node] = x * (hi - lo + 1);
        if(hi != lo){
            left = {1, x};
            right = {1, x};
        }
    }

    if(lazy[node].first == 2){
        int x = lazy[node].second;
        lazy[node] = {0, 0};
        tree[node] += x * (hi - lo + 1);
        if(hi != lo){
            left = {2, x + left.second};
            right = {2, x + right.second};
        }
    }
}


int query(int node, int lo, int hi, int l, int r){
    
    propagate(node, lo, hi);

    if(hi < l or lo > r)return 0;
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return q1 + q2;
}


void update(int node, int lo, int hi, int l, int r, int typ, int val){
    
    propagate(node, lo, hi);

    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        if(typ == 1)tree[node] = val * (hi - lo + 1);
        else tree[node] += val * (hi - lo + 1);

        int x = val, y = val;
        if(typ == 2){
            x += left.second;
            y += right.second;
        }

        if(hi != lo){
            left = {typ, x};
            right = {typ, y};
        }

        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, typ, val);
    update(2 * node + 1, mid + 1, hi, l, r, typ, val);

    tree[node] = tree[2 * node] + tree[2 * node + 1];
}


int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    cin >> n >> q;

    while(q--){
        int typ, l, r, t, val;
        cin >> typ;

        if(typ <= 2){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, typ, val);
        }else{
            cin >> l >> r;
            cout << query(1, 0, n - 1, l, --r) << endl;
        }
    }
}

"/home/raihan/Desktop/Codeforces/A_A_B.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define ll long long int

int main()
{
    int n; cin>>n;
    cout<<n;
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_A_B_Again.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    cout<<n%10 + n/10<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Super_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    
    if(n & 1){
        if(n == 1)cout<<1<<endl;
        else cout<<-1<<endl;
        return;
    }

    for(int i = n, j = 1; i > 0; i -= 2, j += 2){
        cout<<i<<' '<<j<<' ';
    }
    nl;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Test_of_Love.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, m, k;
    string str;

    cin >> n >> m >> k;
    cin >> str; str.push_back('L');

    int turn = 1;
    for(int i = -1, j; i < n; ){
        int l = -1, w = -1;

        if(turn){
            if(i + m >= n){
                yes; 
                return;
            }
            for(int j = i + 1; j <= i + m && j <= n; j++){
                if(str[j] == 'L')l = j;
                else if(str[j] == 'W')w = j;
            }
            if(l > -1)i = l;
            else if(w > -1){
                i = w;
                turn = 0;
            }
            else{
                no;
                return;
            }
        }
        else{
            for(int j = i + 1; j <= i + k && j <= n; j++){
                if(str[j] == 'C')break;
                if(str[j] == 'L'){
                    l = j;
                    break;   
                }
            }

            if(l > -1){
                k -= (l - i);
                i = l;
                turn = 1;
            }
            else{
                no;
                return;
            }
        }
    }
    yes;
  
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Three_Activities.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define input(a)           forn(i,n){lin(x); a.push_back({x, i});}
#define vpn                 vector<pair<int, int>>
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vpn a, b, c;
    input(a); input(b); input(c);
    sort(all(a)); sort(all(b)); sort(all(c));

    int ans = 0;
    for(int i = n - 3; i < n; i++){
        for(int j = n - 3; j < n; j++){
            if(a[i].second == b[j].second)continue;
            for(int k = n - 3; k < n; k++){
                if(a[i].second == c[k].second)continue;
                if(b[j].second == c[k].second)continue;
                ans = max(ans, a[i].first + b[j].first + c[k].first);
            }
        }
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Ticket_Game.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"Monocarp\n"
#define no                 cout<<"Bicarp\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n;
string str;

bool check(){

    int x = 0, y = 0;
    for(int i = 0; i < n / 2; i++){
        if(str[i] != '?'){
            x += (str[i] - '0');
        }
    }

    for(int j = n / 2; j < n; j++){
        if(str[j] != '?'){
            y += (str[j] - '0');
        }
    }
    
    bool flg = 0;
    int x1 = x, x2 = y, f = 0, l = 0;
    for(int i = 0; i < n / 2; i++){
        if(str[i] != '?')continue;
        if(!flg)x1 += 9;
        else f++;
        flg = !flg;
    }

    for(int i = n / 2; i < n; i++){
        if(str[i] != '?')continue;
        if(flg)l++;
        else x2 += 9;
        flg = !flg;
    }

    if(y > x1)return true;
    else if(y + l * 9 < x1)return true;
    
    if(x <= x2){
        if(x + f *9 < x2)return true;
    }

    return false;
}

void sukuna(int test){
    cin >> n >> str;
    if(check())yes;
    else no;
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Turtle_Tenacity_Continual_Mods.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, one = 0;
    cin >> n;
    vin v(n);
    map<int, int> mp;
    forn(i,n){cin >> v[i]; mp[v[i]]++; if(v[i] == 1)one++;}
    if(one > 1){no;return;}
    if(mp.begin()->second == 1){yes; return;}
    int div = mp.begin()->first;
    bool ck = 0;
    forn(i,n)if(v[i] % div != 0){ck = 1; break;}
    if(ck)yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Unnatural_Language_Processing.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


#define a                 (str[i]==97 || str[i]==101)
#define b                 (str[i+2]>97 && str[i+2]<101) 
#define c                 (str[i+2]==97 || str[i+2]==101)
#define d                 i<(n-2)
#define x                 cout<<str[i];

int solve()
{
    int n,i; string str;
    cin>>n>>str;
    for(i=0;i<n;i++)
    {
        x
        if(a && b && d){cout<<str[i+1]<<".";i++; }
        else if(a && c && d)cout<<".";
        else if(a && d)cout<<".";
    }
    nl;


    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Valid_BFS.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> graph[N], vis(N), seq(N), ord(N);
int n,m;

bool cmp(int a, int b){
    return ord[a] < ord[b];
}

void sukuna(){
    cin >> n;
    for(int i = 0; i < n - 1; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }

    for(int i = 0; i < n; i++){
        cin >> seq[i];
        ord[seq[i]] = i;
    }

    for(auto &g : graph){
        sort(all(g), cmp);
    }

    vin ans;
    queue<int> q;
    q.push(1);
    while(!q.empty()){
        queue<int> temp;
        while(!q.empty()){
            int x = q.front();
            q.pop();
            vis[x] = true;
            ans.push_back(x);

            for(auto child : graph[x]){
                if(vis[child])continue;
                temp.push(child);
            }
        }
        q = temp;
    }

    for(int i = 0; i < n; i++){
        if(seq[i] != ans[i]){no; return;}
    }
    yes;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Vertical_Paths.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 6;

vin v;

void func(int vertex, vin &graph, vin &vis){
    if(vis[vertex])return;
    vis[vertex] = 1;
    v.push_back(vertex);
    func(graph[vertex], graph, vis);
}

void sukuna(){
    lin(n);
    vin gp[n + 1];
    vin graph(n + 1);
    vin vis(n + 1);
    vector<vin> ans;
    for(int i = 1; i <= n; i++){
        lin(x);
        graph[i] = x;
        gp[x].push_back(i);
    }

    for(int i = 1; i <= n; i++){
        if(gp[i].size() > 0)continue;
        v.clear();
        func(i, graph, vis);
        reverse(all(v));
        ans.push_back(v);

    }
    if(ans.size() == 0){
        cout<<"1\n1\n1\n\n";
        return;
    }

    cout<<ans.size()<<endl;
    for(auto a : ans){
        cout<<a.size()<<endl;
        print(a);
    }
    nl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Very_Different_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

void sukuna()
{
    int n, m, ans = 0;
    cin >> n >> m;
    
    vin a(n), b(m);

    forn(i,n)cin>>a[i];
    forn(i,m)cin>>b[i];

    sort(all(a)); 
    sort(all(b));

    for(int x = 0, i = 0, j = 0; x < n; x++){

        if(abs(a.back() - b[j]) > abs(b.back() - a[i])){
            ans += abs(a.back() - b[j]);
            a.pop_back();
            j++;
        }
        else{
            ans += abs(b.back() - a[i]);
            b.pop_back();
            i++;
        }
    }

    cout<<ans<<endl;  
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Vlad_and_Division.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 2147483647;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> mp;
    forn(i,n)cin >> v[i], mp[v[i]]++;

    int ans = 0;
    
    for(auto a : mp){
        if(a.second == 0)continue;
        if(mp[a.first ^ INF] > 0){
            int mn = min(a.second, mp[a.first ^ INF]);
            ans += mn;
            ans += a.second - mn;
            mp[a.first ^ INF] -= mn;
        }
        else ans += a.second;
    }

    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Vupsen_Pupsen_and_0.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int l, r, i, j;

bool op(int sum){

    if(r > l)swap(l, r), swap(i, j);
    for(int i = 1; i <= 50; i++){
        int x = i * l;
        if((x - sum) % r == 0){
            l = -i;
            r = (x - sum) / r;
            return true;
        }
    }
    return false;
}


void sukuna(int test){
    lin(n);
    vin v(n), u(n);
    set<int> s;
    forn(i,n)cin >> v[i], s.insert(v[i]);
    int tot = accumulate(all(v), 0ll);
    u = v;
    sort(all(v));
    // print(s);
    // print(v);

    bool flg = 0;
    j = n - 1, i;
    for(i = 0; i < j;){
        l = v[i];
        r = v[j];
        if(op(tot - l - r)){
            break;
        }
        if(flg)i++;
        else j--;
    }

    vin ans(n);
    for(int k = 0; k < n; k++){
        if(u[k] == v[i]){
            ans[k] += l;
            break;
        }
    }

    for(int k = n - 1; k > 0; k--){
        if(u[k] == v[j]){
            ans[k] += r;
            break;
        }
    }

    for(int i = 0; i < n; i++){
        if(ans[i])continue;
        ans[i] = 1;
    }
    print(ans);

    int chk = 0;
    for(int i = 0; i < n; i++){
        chk += (u[i] * ans[i]);
    }
    cout << chk << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Wooden_Toy_Festival.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v;
bool chk(int x){
    int cnt = 1;
    int n = v.size();
    for(int i = 0; i < n; i++){
        int limit = v[i] + 2 * x;
        for(; i < n; i++){
            if(v[i] > limit){
                i--;
                cnt++;
                break;
            }
        }
    }
    if(cnt < 4)return true;
    return false;
}

void sukuna(){
    int n;
    cin >> n;
    vin a(n);
    forn(i,n)cin >> a[i];
    sort(all(a));
    v = a;
    
    int lo = 0, hi = M, mid;
    while(hi > lo + 1){
        mid = (lo + hi) / 2;
        if(chk(mid)){
            hi = mid;
        }else{
            lo = mid + 1;
        }
    }    
    if(chk(lo))hi = lo;
    cout<<hi<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_World_is_Mine.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;


void sukuna(){
    lin(n);
    vin v(n);

    map<int, int> m;

    forn(i,n){
        cin>>v[i];
        m[v[i]] ++;
    }
    sort(all(v));
    // print(v);

    
    int ans = 0;
    int dist = 0;
    for(auto a : m)if(a.second == 1)dist++;
    int al = (dist + 1) / 2;
    ans += al;

    forn(i,al)m.erase(v[i]);
    dist >>= 1;
    for(auto a = m.begin(); a != m.end() && dist--; a++){
        if(a->second == 1)m.erase(a->first);
    }


    rep:
    if(dist > 0){
        auto it = m.begin();
        int mn = INT_MAX;
        for(auto a = m.begin(); a != m.end(); a++){
            if(a->second < mn){
                mn = a->second;
                it = a;
            }
        }
        if(dist <= mn){
            it->second -= dist;
            dist = 0;
        }
        else{
            m.erase(it->first);
            dist -=mn;
            goto rep;
        }
    }

    for(auto a : m){
        cout<<a.first<<' '<<a.second<<endl;
    }

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Yet_Another_Real_Number_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define grpint(s)          for(auto g : s)g.display();

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

struct grp{
    int res, cnt, num;
    void display(){
        cout << res << " " << cnt <<" " << num << endl;
    }
};

struct cmp{
    bool operator()(const auto &a, const auto &b)const{
        if(a.res < b.res)return true;
        if(a.res == b.res)return a.cnt > b.cnt;
        return false;
    }
};

struct cmpp{
    bool operator()(const auto &a, const auto &b) const{
        if(a.second < b.second)return true;
        return false;
    }
};

set<pr, cmpp> ss;

int binExp(int a, int b){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = ((ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }
int add(int a, int b){ return (a % M + b % M) % M; }
int sub(int a, int b){a += M; return (a - b) % M;}
int mul(int a, int b){ return ((a % M) * (b % M)) % M;}

grp twoCnt(int n){ int cnt = 0, m = n; while(n % 2 == 0){ n >>= 1; cnt++;} return {n, cnt, m};}

void sukuna(int test){
    lin(n);
    vin v(n), ans(n);
    forn(i,n)cin >> v[i];      
    ans[0] = v[0];
    
    set<grp, cmp> s;
    if(twoCnt(v[0]).cnt > 0)s.insert(twoCnt(v[0]));
    
    int sum = v[0];

    for(int i = 1; i < n; i++){
        int cur_two = 0;
        vector<grp> toRemove;

        for(auto g : s){
            if(g.res > v[i])break;
            cur_two += g.cnt;
            // sum = sub(sum, g.num);
            // sum = add(sum, g.res);
            sum -= g.num;
            sum += g.res;
            sum %= M;

            toRemove.push_back(g);
        }      
        for(auto g : toRemove)s.erase(g);

        int num = (mul(v[i], binExp(2, cur_two)));
        sum += num;
        sum %= M;
        ans[i] = sum;


        grp temp = twoCnt(v[i]);
        temp.cnt += cur_two;
        temp.num = num;
        if(temp.cnt > 0)s.insert(temp);
    }
    // grpint(s);

    print(ans);

    ss.insert({3, 4});
    ss.insert({1, 5});
    ss.insert({10, 1});
    mprint(ss);
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Zero_Quantity_Maximization.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

pr func(int a, int b){
    int gc = __gcd(a, b);
    return {a / gc, b / gc};
}


void sukuna(int test){
    lin(n);
    vin a(n), b(n);

    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    
    map<pr, int> mp;

    int mx = 0; pr p = {1, 1};
    forn(i,n){
        if(a[i] == 0)continue;
        mp[func(b[i], a[i])]++;
    }

    for(auto i : mp){
        if(i.second > mx){
            mx = i.second;
            p = i.first;
        }
    }

    int ans = 0;

    for(int i = 0; i < n; i++){
        int x = a[i] * p.first - b[i] * p.second;
        if(x == 0)ans++;
    }
    cout << ans << endl;



}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Zero_Remainder_Array.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    vin v;

    forn(i,n){
        lin(x);
        x %= k;
        if(x)v.push_back(k - x);
    }
    sort(all(v));
    multiset<int> s;
    for(auto i : v)s.insert(i);

    int x = 0, ans = 0;

    while(!s.empty()){
        if(*--s.end() < x){
            ans += (k - x);
            x = 0;
        }
        auto num = *s.lower_bound(x);
        if(num == x){
            ans ++;
            x++;
            s.erase(s.find(num));
        }else{
            ans += (num - x) + 1;
            x = num + 1;
            s.erase(s.find(num));
        }
        x %= k;
    }
    cout <<ans << endl;   
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/Easy_Pronunciation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool chk(char c){
    return c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'; 
}

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    int cnt = 0;

    for(int i = 0; i < n; i++){
        if(chk(str[i]))cnt = 0;
        else cnt++;
        if(cnt >= 4){
            no;
            return;
        }
    }
    yes;

    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_1_Array_and_Segments_Easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int op(vin v, vector<pr> seg){
    for(auto x : seg){
        for(int i = x.first - 1; i < x.second; i++){
            v[i]--;
        }
    }
    int mx = *max_element(all(v));
    int mn = *min_element(all(v));
    return mx - mn;
}

void sukuna(int test){
    int n, q;
    vector<pr> p;
    vin v;
    cin >> n >> q;
    forn(i,n){
        lin(x);
        v.push_back(x);
    }
    forn(i,q){
        int x, y;
        cin >> x >> y;
        p.push_back({x, y});
    }
    vector<int> seg;

    int ans = 0;
    for(int i = 1; i <= n; i++){
        vector<pr> temp;
        vin segTemp;
        int xx = 0;
        for(auto x : p){
            xx++;
            if(i >= x.first && i <= x.second)continue;
            temp.push_back(x);
            segTemp.push_back(xx);
        }
        int val = op(v, temp);
        if(val > ans){
            ans = val;
            seg = segTemp;
        }
    }
    cout << ans << endl;
    cout << seg.size() << endl;
    print(seg);
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_1_Close_Tuples_easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int nCr(int n, int r = 3){
    if(n < 3)return 0;
    if(n == 3)return 1;
    if(n == 4)return 4;
    if(n == 5)return 10;
    int ans = n * (n - 1) * (n - 2);
    for(int i = 1; i <= min(n - r, 3ll); i++)ans /= i;
    return ans;
}

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    int ans = 0, prev = 0, sub = 0;

    for(int i = 0; i < n - 2; i++){
        if(prev == v[i])continue;
        int cnt = 0;
        for(int j = i; j < n; j++, cnt++)if(v[i] != v[j])break;
        int up = upper_bound(all(v), v[i] + 2) - v.begin(); up--;

        ans -= sub;
        ans += nCr(up - i + 1);

        sub = nCr(up - i + 1 - cnt);
        prev = v[i];
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Assignment_to_Segment.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);
 
int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        tree[node] = dx;
        if(lo != hi){
            lazy[2 * node] = dx;
            lazy[2 * node + 1] = dx;
        }
    }
    
    if(lo > r or hi < l)return 0;
    if(lo >= l and hi <= r)return tree[node];
 
    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);
 
    return q1 + q2;
}
 
void update(int node, int lo, int hi, int &l, int &r, int &val){
 
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
 
        tree[node] = dx;
        if(lo != hi){
            lazy[2 * node] = dx;
            lazy[2 * node + 1] = dx;
        }
    }
    
    if(hi < l or lo > r)return;
    if(lo >= l and hi <= r){
        tree[node] = val;
        
        if(lo != hi){
            lazy[2 * node] = val;
            lazy[2 * node + 1] = val;
        }
        return;
    }
 
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);
 
    // tree[node] = min(tree[2 * node], tree[2 * node + 1]);
}
 
 
void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }
 
    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);
 
    tree[node] = tree[2 * node] + tree[2 * node + 1];
}
 

int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;

    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l;
            cout << query(1, 0, n - 1, l, l) << endl;
        }
    }    
}

"/home/raihan/Desktop/Codeforces/C_awoo_s_Favorite_Problem.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string a, b;
    cin >> a >> b;

    int cur = 0;

    for(int i = 0; i < n; i++){
        cur = max(i, cur);
        if(a[i] == b[i])continue;
        if(b[i] == 'b'){
            while(a[cur] == 'a')cur++;
            if(a[cur] != 'b'){no; return;}
            swap(a[cur], a[i--]);
            continue;
        }
        if(b[i] == 'c'){
            while(a[cur] == 'b')cur++;
            if(a[cur] != 'c'){no; return;}
            swap(a[cur], a[i--]);
            continue;
        }
    }

    if(a == b)yes;
    else no;   
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Ayoub_and_Lost_Array.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, l, r;
    cin >> n >> l >> r;

    int m = 0;

    for(; l <= r; l++){
        if(l % 3 == 0){
            l++; m++;
            break;
        }
    }
    for(; r >= l; r++){
        if(r % 3 == 0)break;
    }
    m += (r - l) / 3;
    int ans = 1;
    
    for(int i = 0; i < n; i++){
        ans = (u128) (ans * m) % M;
        // m--;
    }

    cout << ans << endl;

    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_A_B_Palindrome.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"-1\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int a, b;
    cin >> a >> b;
    string str;
    cin >> str;
    int n = str.size(), x = a, y = b;

    vin pos;
    for(int i = 0, j = n - 1; i < j; i++, j--){
        if(str[i] == '?' and str[j] == '?'){
            pos.push_back(i);
            continue;
        }
        if(str[i] != '?' and str[j] != '?'){
            if(str[i] != str[j]){no; return;}
            if(str[i] == '0')a -= 2;
            else b -= 2;
            continue;
        }

        if(str[i] == '?'){
            if(str[j] == '0') a-= 2, str[i] = '0';
            else b -= 2, str[i] = '1';
        }else{

            if(str[i] == '0')a-= 2, str[j] = '0';
            else b -= 2, str[j] = '1';
        }
    }

    if(n & 1 and str[n / 2] == '?'){
        if(a & 1)a--, str[n / 2] = '0';
        else b--, str[n / 2] = '1';
    }
    for(auto i : pos){
        if(a > 1){
            a -= 2;
            str[i] = '0'; str[n - i - 1] = '0';
        }else{
            b -= 2;
            str[i] = '1'; str[n - i - 1] = '1';
        }
    }

    for(auto c : str){
        if(c == '0')x--;
        else y--;
    }
    if(x < 0 or y < 0){no; return;}
    
    cout << str << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_A_Cookie_for_You.cpp"

"/home/raihan/Desktop/Codeforces/C_A_TRUE_Battle.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string str;
    cin >> str;
    forn(i,n - 1){
        if(str[i] == str[i + 1] and str[i] == '1'){
            yes;
            return;
        }
    }
    if(str.front() == '1' or str.back() == '1')yes;
    else no;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Bad_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    string str;
    cin >> str;
    int cnt = 0;
    for(int i = 0; i < n; i++){
        if(str[i] == '(')cnt++;
        else cnt--;
        if(cnt < - 1){
            no;
            return 0;
        }
    }
    if(cnt == 0)yes;
    else no;
    
    
}

"/home/raihan/Desktop/Codeforces/C_Balanced_Team.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    // print(v);
    v.push_back(M);

    int ans = 1;

    for(int i = 0; i < n; i++){
        int x = v[i] + 5;
        int lb = upper_bound(all(v), x) - v.begin();
        if(v[lb] > x)lb --;
        
        int dif = lb - i + 1;
        ans = max(ans,dif);
    }

    cout << ans <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Balance_the_Bits.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<"";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n;
    cin >> n;
    string str;
    cin >> str;
    int cnt = 0;
    forn(i,n)if(str[i] == '1')cnt++;
    if(cnt & 1 || str[0] != '1' || str[n - 1] != '1'){
        no;
        return;
    }
    yes;
    vector<char> s(n), t(n);

    for(int i = 0, j = n - 1; i < j; i++, j--){
        for(;i < j; i++){
            if(str[i] == '1'){
                s[i] = '(';
                t[i] = '(';
                break;
            }
        }

        for(; i < j; j--){
            if(str[j] == '1'){
                s[j] = ')';
                t[j] = ')';
                break;
            }
        }
    }

    bool ck = 1;
    for(int i = 0; i < n; i++){
        if(str[i] == '1')continue;
        if(ck)s[i] = '(';
        else s[i] = ')';
        ck = !ck;
    }

    for(int i = 0; i < n; i++){
        if(str[i] == '1')continue;

        if(s[i] == '(')t[i] = ')';
        else t[i] = '(';
    }
    print(s); print(t);
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Balance_the_Bits.java"
import java.util.*;

public class C_Balance_the_Bits {
    public static Scanner in = new Scanner(System.in);

    static void Saturo_Gojo(){
        int n = in.nextInt();
        String str = in.next();
        char s[] = new char[n];
        char t[] = new char[n];
        int cnt = 0;
        for(int i = 0; i < n; i++)if(str.charAt(i) == '1')cnt++;
        if(cnt % 2 == 1 || str.charAt(0) == '0' || str.charAt(n - 1) == '0'){
            System.out.println("NO");
            return;
        } 
        
        System.out.println("YES");

        for(int i = 0, j = n - 1; i < j; i++, j--){
            for(; i < j; i++){
                if(str.charAt(i) == '1'){
                    s[i] = '(';
                    t[i] = '(';
                    break;
                }
            }
            for(;i < j; j--){
                if(str.charAt(j) == '1'){
                    s[j] = ')';
                    t[j] = ')';
                    break;
                }
            }
        }
        int ck = 1;
        for(int i = 0; i < n; i++){
            if(str.charAt(i) == '1')continue;
            if(ck == 1)s[i] = '(';
            else s[i] = ')';
            ck = 1 - ck;
        }


        for(int i = 0; i < n; i++){
            if(str.charAt(i) == '1')continue;
            if(s[i] == '(')t[i] = ')';
            else t[i] = '(';
        }
        System.out.println(t);
        System.out.println(s);

    }

    public static void main(String[] args) {
        int test;
        test = in.nextInt();
        while(test > 0){
            Saturo_Gojo();
            test--;
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_Basic_Diplomacy.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    cin >> n >> m;
    int lm = ceil(m * 1.0 / 2);
    vin pf(n + 1), v[m + 1], limit(n + 1, lm), ans(m ), done(m + 1);
    forn(i,m){
        lin(k);
        forn(j, k){
            lin(x);
            v[i].push_back(x);
        }
    }

    for(int i = 0; i < m; i++){
        if(v[i].size() == 1){
            ans[i] = v[i].front();
            limit[v[i].front()]--;
        }
    }


    for(int i = m - 1; i >= 0; i--){
        if(ans[i] != 0){
            continue;
        }
        int toRem = 0;
        for(auto j : v[i]){
            if(limit[j] > 0){
                toRem = j;
            }
        }
        limit[toRem]--;
        ans[i] = toRem;
    }
    for(auto i : ans){
        pf[i]++;
        if(pf[i] > lm){
            no;
            return;
        }
    }
    yes; print(ans);

}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Basil_s_Garden.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];
    int ans = 0, time = 0;
    
    for(int i = n - 1; i > 0; i--){
        if(v[i - 1] > v[i]){
            if(v[i - 1] - v[i] > time){
                time = v[i - 1] - v[i];
            }
            else time++;
            v[i - 1] = v[i];
        }

        else{
            time += v[i] - v[i - 1] + 1;
        }

    }
    cout<<time + v[0]<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Bewitching_Stargazer.cpp"
/**
 *    author:  Khaled_Mahmud_(pk)
 *    date: 2024-12-28 22:25:58
**/

#include<bits/stdc++.h>
using namespace std;
#define v vector
#define int long long
#define vin vector <int>
#define pii pair <int, int>
#define all(a) a.begin(), a.end()
#define rep(i, a, b) for(int i = a; i < b; i++)
#define rev(i, a, b) for(int i = a; i >= b; i--)
int ans, x, mid, z;

void fastIO(){
   ios_base::sync_with_stdio(false);
    cin.tie(NULL);cout.tie(NULL);
}

void rec(int l, int r, int k){
    int m = (l+r)/2;
    int len = r-l+1;
    if(z && len&1) ans += pow(2, x)*mid+(pow(2, z-1)*pow(2, x-z));
    else if(len&1) ans += pow(2, x)*mid;
    x++;
    if(len/2 < k) return;
    if(len&1) rec(l, m-1, k);
    else rec(l, m, k);
}

void pk(){
    int n, k; cin >> n >> k;
    ans = 0, x = 0;
    mid = (n+1)/2;
    z = 0;
    int nn = n;
    while(!(n&1)) {
        n = n/2; z++;
    }
    rec(1, nn, k);
    cout << ans <<'\n';
}

int32_t main(){
    fastIO();
    int t; cin >> t;
    while(t--) pk();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Binary_String_Reconstruction.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, x;
string str;

bool isValid(int i){
    return i >= 0 and i < n;
}

void sukuna(int test){
    cin >> str >> x;
    n = str.size();

    string ans;
    forn(i,n)ans.push_back('1');


    for(int i = 0; i < n; i++){
        if(str[i] == '0'){
            if(isValid(i + x))ans[i + x] = '0';
            if(isValid(i - x))ans[i - x] = '0';
        }
    }

    for(int i = 0; i < n; i++){
        int a = 0, b = 0;
        if(isValid(i + x)) a = (ans[i + x] == '1');
        if(isValid(i - x)) b = (ans[i - x] == '1');
        if(str[i] == '1'){
            if(a == 0 and b == 0){
                cout << -1 << endl;
                return;
            }
        }else{
            if(a == 1 or b == 1){
                cout << -1 << endl;
                return;
            }
        }
    }
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Birthday.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n),a, b;
    forn(i,n)cin >> v[i];
    sort(all(v));

    bool flg = 1;
    forn(i,n){
        if(flg)a.pb(v[i]);
        else b.pb(v[i]);
        flg = !flg;
    }    
    reverse(all(b));
    print(a); print(b);nl;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Bitwise_Balancing.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int b, c, d, a = 0;
    cin >> b >> c >> d;
    
    for(int i = 0; i < 62; i++){
        int bi = (b >> i) & 1;
        int ci = (c >> i) & 1;
        int di = (d >> i) & 1;

        if(di){
            if(bi == 0 && ci == 1){
                cout << - 1 << endl;
                return;
            }
            if(bi == 0 && ci == 0){
                a |= (1ll << i);
            }
        }else{
            if(bi == 1 && ci == 0){
                cout << -1 << endl;
                return;
            }
            if(bi & ci)a |= (1ll << i);
            if(bi == 0 && ci == 1) a |= (1ll << i);
        }
    }

    cout << a << endl;

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Bitwise_OR_and_AND.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int INF = 1e18 + 100;
const int M = 1e9 + 7;
const int N = 2e5 + 10;

vector<int> tree(4 * N), lazy(4 * N), v(N);


int query(int node, int lo, int hi, int &l, int &r){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
        tree[node] |= dx;

        if(lo != hi){
            lazy[2 * node] |= dx;
            lazy[2 * node + 1] |= dx;
        }
    }
    
    if(lo > r or hi < l)return (1 << 31) - 1;
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return (q1 & q2);
}


void update(int node, int lo, int hi, int &l, int &r, int &val){
    
    if(lazy[node] != 0){
        int dx = lazy[node];
        lazy[node] = 0;
        tree[node] |= dx;

        if(lo != hi){
            lazy[2 * node] |= dx;
            lazy[2 * node + 1] |= dx;
        }
    }
    

    if(lo > r or hi < l)return;
    if(lo >= l and hi <= r){
        tree[node] |= val;

        if(hi != lo){
            lazy[2 * node] |= val;
            lazy[2 * node + 1] |= val;
        }
        return;    
    }
    
    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, l, r, val);
    update(2 * node + 1, mid + 1, hi, l, r, val);

    tree[node] = (tree[2 * node] & tree[2 * node + 1]);

}

int32_t main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, q;
    cin >> n >> q;


    while(q--){
        int type, l, r, val;
        cin >> type;

        if(type == 1){
            cin >> l >> r >> val;
            update(1, 0, n - 1, l, --r, val);
        }else{
            cin >> l >> r;
            cout << query(1, 0, n - 1, l, --r) << endl;
        }
    }   
}

"/home/raihan/Desktop/Codeforces/C_Black_Circles.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long
#define double             long double

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;

    int x1, x2, y1, y2;
    cin >> x1 >> y1 >> x2 >> y2;
    
    double dist = sqrtl(powl(x1 - x2, 2) + powl(y2 - y1, 2));

    for(auto a : v){
        double cdist = sqrtl(powl(a.first - x2, 2) + pow(a.second - y2, 2));
        if(cdist <= dist){
            no;
            return;
        }
    }
    yes;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Boats_Competition.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int func(vin &v, int x){
    int ans = 0, n = v.size();
    for(int i = 0, j = n - 1; i < j;){
        if(v[i] + v[j] == x){
            ans++; i++, j--;
        }else if(v[i] + v[j] > x)j--;
        else if(v[i] + v[j] < x)i++;
    }
    return ans;
}

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int ans = 0;
    for(int i = 1; i <= 100; i++){
        ans = max(ans, func(v, i));
    }
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Books_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(q);
    map<int, int> mp;
    int l = 0, r = 0;
    bool flg = true;
    while(q--){
        char c; int ind;
        cin >> c >> ind;

        if(flg){mp[ind] = 0; flg = false;}
        else if(c == 'L'){
            mp[ind] = --l;

        }else if(c == 'R'){
            mp[ind] = ++r;
        }else{
            cout << min(mp[ind] - l, r - mp[ind]) << endl;
        }
    }
    
}

"/home/raihan/Desktop/Codeforces/C_Boxes_Packing.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, ans = 0;
    cin >> n;
    map<int, int> mp;
    for(int i = 0; i < n; i++){
        lin(x);
        mp[x]++;
        ans = max(ans, mp[x]);
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Bracket_Subsequence.cpp"
#include<bits/stdc++.h>
using namespace std;
#define int        long long
const int M = 1e9 + 7;

int32_t main(){
    int n, k;
    cin >> n >> k;
    string str;
    cin >> str;
    stack<char> st;
    
    for(int i = 0; i < n && k > 0; i++){
        if(str[i] == '('){
            st.push('(');
            k -= 2;
            cout << "(";
        }else{
            cout <<")";
            st.pop();
        }
    }   
    while(!st.empty()){
        cout <<")";
        st.pop();
    }
    cout << endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Build_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void func(vin &v, int x){
    if(x < 0)return;
    int n = pow(ceil((double) sqrt(x)), 2);
    func(v, n - x - 1);

    int limit = n - x;
    for(int i = x; x >= limit; x--){
        v[x] = n - x;
    }
    return;    
}

void sukuna(){
    lin(n);
    vin ans(n);
    func(ans, n - 1);
    for(int i = 0; i < n; i++){
        double sq = sqrt(i + ans[i]);
        if((int)sq != sq){
            cout<< -1<<endl;
            return;
        }
    }

    print(ans);
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Vlad_Building_Beautiful_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin a, b;
    forn(i,n){
        lin(x);
        if(x & 1)b.pb(x);
        else a.pb(x);
    }

    if(a.size() == 0 || b.size() == 0){
        yes;
        return;
    }

    sort(all(a)); sort(all(b));
    if(a.front() > b.front()){
        yes;
        return;
    }

    no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Where_is_the_Pizza.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n;
vin a(N), b(N), c(N);
map<int, int> pos_a, pos_b;
set<int> s;

int binExp(int a, int b){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = ((ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}

void func(int ind){
    if(s.count(a[ind]) and s.count(b[ind]))return;

    if(!s.count(a[ind])){
        s.insert(a[ind]);
    }
    else{
        s.insert(b[ind]);
    }
    func(pos_a[a[ind]]);
    func(pos_b[a[ind]]);
}

void reset(){
    s.clear();
    pos_a.clear();
    pos_b.clear();
    for(int i = 0; i <= n; i++){
        a[i] = 0;
        b[i] = 0;
        c[i] = 0;
    }
}

void sukuna(int test){
    cin >> n;
    reset();

    Forn(i,n){
        cin >> a[i];
        pos_a[a[i]] = i;
    }
    Forn(i,n){
        cin >> b[i];
        pos_b[b[i]] = i;
    }
    Forn(i,n)cin >> c[i];
    
    for(int i = 1; i <= n; i++){
        if(a[i] == b[i])s.insert(a[i]);
        if(c[i] == 0)continue;
        if(s.count(a[i]) and s.count(b[i]))continue;
        func(i);
    }
    set<int> temp;
    for(int i = 1; i <= n; i++){
        if(!s.count(i))temp.insert(i);
    }

    int cnt = 0;
    for(auto i : temp){
        if(s.count(i))continue;
        func(pos_a[i]);
        cnt++;
    }

    int ans = binExp(2, cnt);
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Wonderful_Randomized_Sum.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define printN(arr)        for(int i = 1; i <= n; i++)cout<<arr[i]<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n;
int v[N], mxSuf[N], mxPre[N];

void sukuna(int test){
    cin >> n;    
    Forn(i,n)cin >> v[i];
    int sum = 0;
    for(int i = 1; i <= n; i++){
        sum += v[i];
        mxSuf[i] = min(mxSuf[i - 1], sum);
    }
    sum = 0;
    for(int i = n; i > 0; i--){
        sum += v[i];
        mxPre[i] = min(mxPre[i + 1], sum);
    }
    int mn = INF;
    for(int i = 1; i <= n; i++){
        mn = min(mn, mxSuf[i] + mxPre[i + 1]);
    }
    cout << accumulate(v, v + n + 5, 0ll) - 2 * mn << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Word_on_the_Paper.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n = 8;
    vector<string> v(8);
    forn(i,n)cin >> v[i];
    string ans;

    for(auto st : v){
        for(auto a : st){
            if(a != '.')ans.pb(a);
        }
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_XOR_distance.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int a, b, r, sum;

bool chk(vin &v){
    sum = 0;
    for(int i = v.size() - 1, b = 1; i >= 0; i--, b <<= 1){
        if(v[i])sum += b;
    }
    return sum <= r;
}

int lessR(){
    int ans = INF;
    for(int i = 0; i <= r; i++){
        ans = min(ans, abs((a ^ i) - (b ^ i)));
    }
    return ans;
}

void sukuna(){
    cin >> a >> b >> r;
    if(a == b){
        cout << 0 <<endl;
        return;
    }
    if(r <= 50){
        cout << lessR() << endl;
        return;
    }
    
    if(a < b)swap(a, b);
    bitset<65> tx(a), ty(b);
    vin x, y;
    for(int i = 64; i>= 0; i--){
        bool flg = 1;
        if(tx[i] != ty[i]){
            for(; i >= 0; i--){
                if(flg){flg = 0; continue;}
                x.pb(tx[i]);
                y.pb(ty[i]);
            }
        }
    }
    int n = x.size();
    vin ans(n);

    for(int i = 0; i < n; i++){
        vin temp = ans;
        if(x[i] == 1 && y[i] == 0){
            temp[i] = 1;
            if(chk(temp)) ans = temp;
        }
    }
    chk(ans);

    cout << abs((a ^ sum) - (b ^ sum)) << endl;
  
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Yarik_and_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    int neg = 0;
    forn(i,n){
        cin >> v[i];
        if(v[i] < 0)neg++;
    }
    if(neg == n){
        cout<<*max_element(all(v))<<endl;
        return;
    }
    int ans = 0, sum = 0;

    int ck = 1;

    for(int i = 0; i < n; i++){

        if((v[i] & 1) == ck){
            sum = v[i];
        }else{
            sum += v[i];
        }

        if(v[i] & 1)ck = 1;
        else ck = 0;

        if(sum < 0)sum = 0;
        ans = max(sum, ans);
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Yet_Another_Broken_Keyboard.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    int n, k;
    cin >> n >> k;
    string str;
    cin >> str;
    set<char> dic;
    forn(i, k){
        char c;
        cin >> c;
        dic.insert(c);
    }
    int ans = 0, len = 0;

    for(int i = 0; i < n; i++){
        if(dic.count(str[i]))len++;
        else{
            ans += (len * (len + 1)) / 2;
            len = 0;
        }
    }
    ans += len * (len + 1) / 2;
    cout<<ans<<endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Yet_Another_Counting_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int a, b, q, lc;
int func(int n){
    return n + 1 - ((n / lc) * b + min(b, n % lc + 1));
}

void sukuna(int test){
    cin >> a >> b >> q;
    if(a > b)swap(a, b);
    lc = a * b / __gcd(a, b);

    while(q--){
        int l, r;
        cin >> l >> r;
        cout << func(r) - func(--l) <<" ";
    } 
    nl;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Σ.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i,e)          for(ll i=0;i<e;i++)

long long add( long long n)
{
    long long sum=0;
    while(n>0){sum+=n;  n--;}
    return sum;
}

int main()
{
    fast_in_out;
    int n,k,x,i; set<int>s;
    cin>>n>>k;
    forn(i,n)
    {
        cin>>x;
        s.insert(x);
    }
    long long sum=add(k);

    for(auto a: s)if(a<=k)sum-=a;
    cout<<sum;
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/Divisor_Clique.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int n;
int v[N], dp[N];

int recur(int ind){
    if(ind >= n)return 0;
    if(dp[ind] != -1)return dp[ind];

    int a = 0;
    for(int i = ind + 1; i < n; i++){
        if(v[i] % v[ind] == 0){
            a = max(a, recur(i) + 1);
        }
    }
    return dp[ind] = a;
}

int32_t main(){
    memset(dp, -1, sizeof(dp));
    cin >> n;
    for(int i = 0; i < n; i++)cin >> v[i];
    sort(v, v + n);
    int ans = 0;
    for(int i = 0; i< n; i++){
        ans = max(ans, 1 + recur(i));
    }
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/Divisor_Summation_Hard.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

//Initialize first Pollard::init();
namespace Pollard{
    #define int long long
    mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
    const int N = 1e6 + 100;
    bool isPrime[N]; int hp[N];
    vector<int> primes;

    void init(){
        memset(isPrime, 1, sizeof(isPrime));
        isPrime[0] = isPrime[1] = 0;

        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                hp[i] = i;
                for(int j = i + i; j < N; j += i){
                    isPrime[j] = 0;
                    hp[j] = i;
                }
            }
        }
        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                primes.push_back(i);
            }
        }
    }
    
    int binExp(int a, int b, int M = 1e9 + 7){
        int ans = 1;    a %= M; b %= M;
        
        while(b > 0){
            if(b & 1)ans = ((__uint128_t)(ans % M) * (a % M)) % M;
            b >>= 1;
            a = ((__uint128_t)(a % M) * (a % M)) % M;
        }
        return ans;
    }

    //Miller Rabin primality test
    bool is_composite(int n, int a, int d, int p){
        int x = binExp(a, d, n);
        if(x == 1 or x == n - 1)return false;
    
        for(int i = 0; i < p - 1; i++){
            x = (__uint128_t)x * x % n;
            if(x == n - 1)return false;
        }
    
        return true;
    }
    
    bool miller_rabin(int n, int iter = 5){
        if(n < 4)return n == 2 || n == 3;
        
        int p = 0, d = n - 1;
        while((d & 1) == 0){
            d >>= 1;
            p++;
        }
    
        for(int i = 0; i < iter; i++){
            int a = 2 + rnd() % (n - 3);
            if(is_composite(n, a, d, p))return false;
        }
    
        return true;
    }
    
    //Pollard rho
    int func(int x, int c, int mod){
        return ((__uint128_t) x * x % mod + c) % mod;
    }    

    int rho(int n){
        int c = 1 + rnd() % (n - 2);
        int x =  2 + rnd() % (n - 2);
        int y = x, d = 1;

        while(d == 1){
            x = func(x, c, n);
            y = func(func(y, c, n), c, n);
            d = __gcd(abs(x - y), n);
        }
        return d;
    }

    vector<int> factorize(int n){
        if(n == 1)return {1};
        if(miller_rabin(n))return {n};
        vector<int> factors, temp;
        
        if(n < N){
            while(n > 1){
                int pm = hp[n];
                while(n % pm == 0){
                    factors.push_back(pm);
                    n /= pm;
                }
            }
            return factors;
        }

        int x = rho(n);
        factors = factorize(x);
        temp = factorize(n / x);
        factors.insert(factors.end(), temp.begin(), temp.end());
        return factors;
    }

    void allDivsGen(int ind, int curVal, vector<pair<int, int>> &pmFact, set<int> &ans){
        if(pmFact[ind].first == -1){
            ans.insert(curVal);
            return;
        }
        for(int i = 0; i <= pmFact[ind].second; i++){
            allDivsGen(ind + 1, curVal, pmFact, ans);
            curVal *= pmFact[ind].first;
        }
    }

    set<int> allDivisors(int n){
        set<int> ans;
        vector<pair<int, int>> prime_factors;
        vector<int> fact = factorize(n);
        unordered_map<int, int> mp;
        for(auto i : fact)mp[i]++;
        for(auto i : mp)prime_factors.push_back({i.first, i.second});
        prime_factors.push_back({-1, -1});
        allDivsGen(0, 1, prime_factors, ans);
        return ans;
    }
}

void sukuna(int test){
    lin(n);
    set<int> fact = Pollard::allDivisors(n);
    int ans = -n;
    for(auto i : fact)ans += i;
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;
    Pollard::init();
    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/Dynamic_Range_Minimum_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


vector<int> tree(4 * N), v(N);

int query(int node, int lo, int hi, int &l, int &r){
    if(lo > r or hi < l)return N * N; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return min(q1, q2); //***
}


void update(int node, int lo, int hi, int pos, int val){
    if(lo > pos or hi < pos)return;
    if(lo >= pos and hi <= pos){
        tree[node] = val;
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, val);
    update(2 * node + 1, mid + 1, hi, pos, val);

    tree[node] = min(tree[2 * node], tree[2 * node + 1]); //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = min(tree[2 * node], tree[2 * node + 1]); //***
}

int32_t main(){
    int n, q;
    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];
    build(1, 0, n);
    
    while(q--){
        int t, l, r;
        cin >> t >> l >> r;
        
        if(t == 2){
            cout << query(1, 0, n, --l, --r) << endl;
        }else{
            update(1, 0, n, --l, r);
        }
    }
  
  
}

"/home/raihan/Desktop/Codeforces/Dynamic_Range_Sum_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


vector<int> tree(4 * N), v(N);

int query(int node, int lo, int hi, int &l, int &r){
    if(lo > r or hi < l)return 0; //***
    if(lo >= l and hi <= r)return tree[node];

    int mid = (lo + hi) / 2;
    int q1 = query(2 * node, lo, mid, l, r);
    int q2 = query(2 * node + 1, mid + 1, hi, l, r);

    return q1 + q2; //***
}


void update(int node, int lo, int hi, int pos, int val){
    if(lo > pos or hi < pos)return;
    if(lo >= pos and hi <= pos){
        tree[node] = val;
        return;
    }

    int mid = (lo + hi) / 2;
    update(2 * node, lo, mid, pos, val);
    update(2 * node + 1, mid + 1, hi, pos, val);

    tree[node] = tree[2 * node] + tree[2 * node + 1];  //***
}


void build(int node, int lo, int hi){
    if(lo == hi){
        tree[node] = v[lo];
        return;
    }

    int mid = (lo + hi) / 2;
    build(2 * node, lo, mid);
    build(2 * node + 1, mid + 1, hi);

    tree[node] = tree[2 * node] + tree[2 * node + 1]; //***
}

int32_t main(){
    int n, q;
    cin >> n >> q;
    for(int i = 0; i < n; i++)cin >> v[i];
    build(1, 0, n);
    
    while(q--){
        int t, l, r;
        cin >> t >> l >> r;
        
        if(t == 2){
            cout << query(1, 0, n, --l, --r) << endl;
        }else{
            update(1, 0, n, --l, r);
        }
    }
  
  
}

"/home/raihan/Desktop/Codeforces/D_1_All_are_Same.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int gcdCalculator(vin &v){
    int gcd = 0;
    for(auto i : v){
        gcd = __gcd(i, gcd);
    }
    return gcd;
}

void sukuna(){
    lin(n);
    vin v(n);
    set<int> s;
    forn(i,n)cin >> v[i], s.insert(v[i]);
    int ans = 1;
    if(s.size() == 1){
        cout << - 1 << endl;
        return;
    }

    for(int i = 0; i < n; i++){
        vin temp;
        for(int j = 0; j < n; j++){
            if(i == j)continue;
            temp.pb(abs(v[i] - v[j]));
        }
        ans = max(ans, gcdCalculator(temp));
    }

    cout<<ans<<endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Asesino_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int query(int i, int j){
    cout <<"? " << i <<" " << j << endl;
    cout.flush();
    lin(ask);
    return ask;
}

void printAns(int ans){
    cout <<"! " << ans << endl;
    cout.flush();
}

void sukuna(int test){
    lin(n);

    bool odd = (n & 1);
    for(int i = 1; i <= n - odd; i += 2){
        int a = query(i, i + 1);
        int b = query(i + 1, i);
        if(a == b)continue;

        if(i == 1){
            int a = query(i, 3);
            int b = query(3, i);
            if(a == b)printAns(2);
            else printAns(1);
            return;
        }
        a = query(i, 1);
        b = query(1, i);
        if(a == b)printAns(i + 1);
        else printAns(i);
        return;
    }
    printAns(n);    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Balance_Easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(q);
    set<int> s;
    map<int,int> mp;
    while(q--){
        char c; int k;

        cin >> c >> k;
        if(c == '+'){
            s.insert(k);
            continue;
        }
        int st = max(mp[k], 1ll);
        while(s.count(st * k))st++;
        cout << st * k << endl;
        mp[k] = st;        
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1; //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_D_Eraser.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,k,ans=0;
    cin>>n>>k;

    string str;
    cin>>str;
    forn(i,n)
    {
        if(str[i]=='B'){
            ans++;
            i+=k-1;
        }
    }
    cout<<ans;nl;

    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Hot_Start_Up_easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define printpr(p)         cout << p.first <<" " << p.second << endl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 5e3 + 100;

int n, k;
vin v(N), cold(N), hot(N);
vector<vin> pos(N);


pr recur(int ind){

    if(ind >= n)return {0, 0};

    int up_f = upper_bound(all(pos[v[ind]]), ind) - pos[v[ind]].begin();
    int up_s = upper_bound(all(pos[v[ind + 1]]), ind + 1) - pos[v[ind + 1]].begin();

    // cout << up_f << " " << up_s << endl;
    
    int mx_a = 0, mx_b = 0, mn_a = 0, mn_b = 0;
    pr a = {INF,INF}, b = {INF, INF}, c = {INF,INF};

    if(up_f < pos[v[ind]].size()){
        up_f = pos[v[ind]][up_f];

        mx_a = cold[v[ind]] + hot[v[ind]];
        for(int i = ind + 1; i < up_f; i++){
            if(v[i] == v[i + 1]){
                mn_a += cold[v[i]] + hot[v[i]];
                i++;

            }else{
                mn_a += cold[v[i]];
            }
        }
        if(mx_a < mn_a)swap(mx_a, mx_b);

        pr temp = recur(up_f + 1);
        mx_a += temp.second; mn_a += temp.first;
        
        if(mx_a < mn_a)swap(a, b);
        a = {mx_a, mn_a}; 
    }

    if(up_s < pos[v[ind + 1]].size()){
        up_s = pos[v[ind + 1]][up_s];

        mx_b = cold[v[ind + 1]] + hot[v[ind + 1]];
        mn_b = cold[v[ind]];

        for(int i = ind + 2; i < up_s; i++){
            if(v[i] == v[i + 1]){
                mn_b += cold[v[i]] + hot[v[i]];
                i++;

            }else{
                mn_b += cold[v[i]];
            }
        }
        if(mx_b < mn_b)swap(mx_b, mn_b);
        
        pr temp = recur(up_s + 1);
        mx_b += temp.second; mn_b += temp.first;
        
        if(mx_b < mn_b)swap(mx_b, mn_b);
        b = {mx_b, mn_b}; 
    }

    int mx_c = max(cold[v[ind]], cold[v[ind + 1]]);
    int mn_c = min(cold[v[ind]], cold[v[ind + 1]]);

    pr temp = recur(ind + 2);
    mx_c += temp.second; mn_c += temp.first;
    if(mx_c < mn_c)swap(mx_c, mn_c);

    c = {mx_c, mn_c};

    cout << ind << endl;
    printpr(temp);
    printpr(c);nl;

    return min(a, min(b, c));
}


void sukuna(int test){
    cin >> n >> k;
    forn(i,n){
        cin >> v[i];
        pos[v[i]].push_back(i);
    }
    Forn(i,k)cin >> cold[i];
    Forn(i,k)cin >> hot[i];
    
    pr ans = recur(0);

    cout << ans.first <<" " << ans.second << endl;

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Mocha_and_Diana_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

class Dsu{
    private:
        int n;
        vector<int> par, sz;
        void make(){
            for(int v = 1; v <= n; v++){
                par[v] = v; 
                sz[v] = 1;
            }
        }
    public:
        Dsu(int n){
            this->n = n;
            par = vector<int> (n + 1);
            sz = vector<int> (n + 1);
            make();
        }
        
        int Find(int v){
            if(par[v] == v)return v;
            return par[v] = Find(par[v]);
        }
        void Union(int a, int b){
            a = Find(a);
            b = Find(b);

            if(a != b){
                if(sz[a] < sz[b])swap(a, b);
                par[b] = a;
                sz[a] += sz[b];
            }
        }
};


void sukuna(int test){
    int n, m1, m2;
    cin >> n >> m1 >> m2;
    
    Dsu mocha(n), diana(n);
    forn(i, m1){
        int x, y;
        cin >> x >> y;
        mocha.Union(x, y);
    }   

    forn(i, m2){
        int x, y;
        cin >> x >> y;
        diana.Union(x, y);
    } 

    vector<pr> ans;
    for(int i = 1; i <= n; i++){
        for(int j = i + 1; j <= n; j++){
            if(mocha.Find(i) == mocha.Find(j) or diana.Find(i) == diana.Find(j))continue;
            mocha.Union(i, j);
            diana.Union(i, j);
            ans.push_back({i, j});
        }
    }

    cout << ans.size() << endl;
    mprint(ans);
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Prefix_Suffix_Palindrome_Easy_version.cpp"
#include <bits/stdc++.h>
using namespace std;
bool ok(const string &s, int l, int r)
{
    while (l <= r && s[l] == s[r])
        ++l, --r;
    return l > r;
}
void solve()
{
    string s;
    cin >> s;
    int l = 0, r = s.size() - 1;
    while (l < r && s[l] == s[r])
        ++l, --r;
    int r2, l2;
    for (r2 = r; r2 >= l; r2--)
        if (ok(s, l, r2))
            break;
    for (l2 = l; l2 <= r; l2++)
        if (ok(s, l2, r))
            break;
    cout << s.substr(0, l)
         << ((r2 - l > r - l2) ? s.substr(l, r2 - l + 1) : s.substr(l2, r - l2 + 1))
         << s.substr(r + 1)
         << "\n";
}
int main()
{
    int t;
    cin >> t;
    while (t--)
        solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_1_Reverse_Card_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m;
    cin >> n >> m;
    int ans = 0;

    for(int i = 1; i <= m; i++){
        for(int j = i; j <= n; j += i){
            if((i + j) % (i * i) == 0){
                ans++;
            }
        }
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_1_Medium_Demon_Problem_easy_version.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_1_Passable_Paths_easy_version.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> graph[N], vis(N), height(N), depth(N);
int n,m;

bool isOk = true;
set<int> s;

bool dfss(int vertex, int par = 0){

    int cnt = 0;
    for(auto child : graph[vertex]){
        if(child == par)continue;
        if(dfss(child, vertex))cnt++;
    }

    if(cnt > 1)isOk = false;
    return cnt > 0 or s.count(vertex);
}


void dfs(int vertex = 1, int par = -1){
    if(vis[vertex])return;
    vis[vertex] = true;

    for(auto child : graph[vertex]){
        if(vis[child])continue;
        
        depth[child] = depth[vertex] + 1;
        dfs(child);
        height[vertex] = max(height[vertex], height[child] + 1);
    }
}

void reset(){
    for(int i = 1; i <= n; i++){
        graph[i].clear();
        vis[i] = 0;
        height[i] = 0;
        depth[i] = 0;
    }
}
void sukuna(){
    cin >> n; m =  n - 1;
    reset();
    for(int i = 0; i < m; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }
    dfs(1);

    lin(q);
    while(q--){

        lin(sz);
        s.clear();
        vin v(sz);
        forn(i,sz)cin >> v[i], s.insert(v[i]);
        for(int i = 1; i <= n; i++)vis[i] = 0;
        int mx = 0, ind = 0;
        for(auto i : v){
            if(depth[i] > mx){
                mx = depth[i];
                ind = i;
            }
        }
        isOk = true;
        dfss(ind);
        if(isOk)yes;
        else no;
    }

}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_1_Subsequence_Addition_Easy_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int sum = v[0];
    if(sum > 1){
        no;
        return;
    }
    for(int i = 1; i < n; i++){
        if(v[i] > sum){
            no;
            return;
        }
        sum += v[i];
    }
    yes;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_1_Subsequence_Addition_Easy_Version.py"
for _ in range(int (input())):
    n = int (input())
    v = sorted(list(map(int, input().split())))
    k = set()
    s = 1
    if v[0] == 1:
        ans = "YES"
    else:
        ans = "NO"
    for i in range(1, n):
        if v[i] > s:
            ans = "NO"
            break
        else:
            s += v[i]
    print(ans)

"/home/raihan/Desktop/Codeforces/G_2_Subsequence_Addition_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int sum = v[0];
    if(sum > 1){
        no;
        return;
    }
    for(int i = 1; i < n; i++){
        if(v[i] > sum){
            no;
            return;
        }
        sum += v[i];
    }
    yes;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Fall_Down.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<string>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void op(int x, vin &v){
    int n = v.size();
    int obs = n;

    for(int i = n - 1; i >= 0; i--){
        if(v[i][x] == 'o')obs = i;
        if(v[i][x] == '*'){
            swap(v[i][x], v[obs - 1][x]);
            obs--;
        }
    }
}

void sukuna(){
    int n, m;
    cin >> n >> m;
    vin v(n);

    forn(i,n)cin >> v[i];
    for(int i = 0; i < m; i++)op(i, v);
    for(auto a : v)cout<<a<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_G.cpp"
#include<iostream>
#include<cmath>
#include<algorithm>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"Yes"<<endl
#define no cout<<"No"<<endl
#define nl cout<<"\n"

int main()
{

	int n; 
    cin >> n;
	vector a(n, vector<int>(n)), b = a, c = a;

	for(auto &i: a) for(auto &j: i) cin >> j;
	for(auto &i: b) for(auto &j: i) cin >> j;

	int tr = 0;
	forn(k,n)
    {
		tr = 1;
		forn(i,n)
        {
			forn(j,n)
            {
				if(a[i][j] && !b[i][j]) tr = 0;
				c[i][j] = a[n - 1 - j][i];
			}
		}
		if(tr) break;
		a = c;
	}
	if(tr)yes;
	else no;
	return 0;
}

"/home/raihan/Desktop/Codeforces/G_Guess_One_Character.cpp"
#include <bits/stdc++.h>
#define ll long long
using namespace std;
const ll _ = 5e5 + 5;
ll N, n, a, b, c;
void P()
{
    cin >> n;
    cout << "1 1" << endl;
    cin >> a;
    cout << "1 01" << endl;
    cin >> b;
    cout << "1 11" << endl;
    cin >> c;
    cout << "0 1 " << a - (b + c) << endl;
    cin >> n;
}
int main()
{
    cin >> N;
    while (N--)
        P();
}

"/home/raihan/Desktop/Codeforces/G_Guest_Student.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int tot;
vin v(7);

int func(int k, int pos){
    int ans = 0;
    for(int i = pos; i < 7; i++){
        k-= v[i]; ans++;
        if(k == 0)return ans;
    }
    int div = (k - 1) / tot;
    ans += div * 7;
    k -= tot * div;
    if(k == 0)return ans;
    for(int i = 0; i < 7; i++){
        k -= v[i]; ans++;
        if(k == 0)return ans;
    }

    return ans;
}

void sukuna(int test){
    lin(k);
    forn(i,7)cin >> v[i];
    tot = accumulate(all(v), 0ll);
    int ans = INF;

    for(int i = 0; i < 7; i++){
        ans = min(ans, func(k, i));
    }

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Minimum_Possible_LCM.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e7 + 100;

//Initialize first Pollard::init();
namespace Pollard{
    #define int long long
    mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
    const int N = 1e7 + 100;
    bool isPrime[N]; int hp[N];
    vector<int> primes;

    void init(){
        memset(isPrime, 1, sizeof(isPrime));
        isPrime[0] = isPrime[1] = 0;

        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                hp[i] = i;
                for(int j = i + i; j < N; j += i){
                    isPrime[j] = 0;
                    hp[j] = i;
                }
            }
        }
        for(int i = 2; i < N; i++){
            if(isPrime[i]){
                primes.push_back(i);
            }
        }
    }
    
    int binExp(int a, int b, int M = 1e9 + 7){
        int ans = 1;    a %= M; b %= M;
        
        while(b > 0){
            if(b & 1)ans = ((__uint128_t)(ans % M) * (a % M)) % M;
            b >>= 1;
            a = ((__uint128_t)(a % M) * (a % M)) % M;
        }
        return ans;
    }

    //Miller Rabin primality test
    bool is_composite(int n, int a, int d, int p){
        int x = binExp(a, d, n);
        if(x == 1 or x == n - 1)return false;
    
        for(int i = 0; i < p - 1; i++){
            x = (__uint128_t)x * x % n;
            if(x == n - 1)return false;
        }
    
        return true;
    }
    
    bool miller_rabin(int n, int iter = 5){
        if(n < 4)return n == 2 || n == 3;
        
        int p = 0, d = n - 1;
        while((d & 1) == 0){
            d >>= 1;
            p++;
        }
    
        for(int i = 0; i < iter; i++){
            int a = 2 + rnd() % (n - 3);
            if(is_composite(n, a, d, p))return false;
        }
    
        return true;
    }
    
    //Pollard rho
    int func(int x, int c, int mod){
        return ((__uint128_t) x * x % mod + c) % mod;
    }    

    int rho(int n){
        int c = 1 + rnd() % (n - 2);
        int x =  2 + rnd() % (n - 2);
        int y = x, d = 1;

        while(d == 1){
            x = func(x, c, n);
            y = func(func(y, c, n), c, n);
            d = __gcd(abs(x - y), n);
        }
        return d;
    }

    vector<int> factorize(int n){
        if(n == 1)return {1};
        if(miller_rabin(n))return {n};
        vector<int> factors, temp;
        
        if(n < N){
            while(n > 1){
                int pm = hp[n];
                while(n % pm == 0){
                    factors.push_back(pm);
                    n /= pm;
                }
            }
            return factors;
        }

        int x = rho(n);
        factors = factorize(x);
        temp = factorize(n / x);
        factors.insert(factors.end(), temp.begin(), temp.end());
        return factors;
    }

    void allDivsGen(int ind, int curVal, vector<pair<int, int>> &pmFact, set<int> &ans){
        if(pmFact[ind].first == -1){
            ans.insert(curVal);
            return;
        }
        for(int i = 0; i <= pmFact[ind].second; i++){
            allDivsGen(ind + 1, curVal, pmFact, ans);
            curVal *= pmFact[ind].first;
        }
    }

    set<int> allDivisors(int n){
        set<int> ans;
        vector<pair<int, int>> prime_factors;
        vector<int> fact = factorize(n);
        unordered_map<int, int> mp;
        for(auto i : fact)mp[i]++;
        for(auto i : mp)prime_factors.push_back({i.first, i.second});
        prime_factors.push_back({-1, -1});
        allDivsGen(0, 1, prime_factors, ans);
        return ans;
    }
}


int prefix[N];

void sukuna(int test){
    int n, pm_cnt = 0;
    cin >> n;
    vin v(n), u;
    map<int, int> mp;
    map<int, vin> pos;
    forn(i,n){
        cin >> v[i], mp[v[i]]++, pos[v[i]].push_back(i + 1);
    }
    u = v;
    sort(all(v));
    

    int ans = v[0] * v[1] / __gcd(v[0], v[1]);
    ans = min(ans, u[0] * u.back() / __gcd(u[0], u.back()));
    for(auto i : v){
        for(int j = i; j < min(ans, N); j += i){
            prefix[j]++;
            if(prefix[j] > 1){
                ans = min(ans, j);
                break;
            }
        }
    }

    set<int> s = Pollard::allDivisors(ans);

    vin ult, fnl;
    for(auto i : s){
        if(mp[i] == 0)continue;
        if(mp[i] > 1){
            ult.push_back(i);
            ult.push_back(i);
            break;
        }
        ult.push_back(i);
        if(ult.size() > 1)break;
    }
    fnl.push_back(pos[ult.front()].back());
    pos[ult.front()].pop_back();
    fnl.push_back(pos[ult.back()].back());
    sort(all(fnl));
    print(fnl);    
}

int32_t main(){
    fast_in_out;
    Pollard::init();

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Orray.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vin op(set<int> s){
    int sum = 0;
    vin ans;
    while(1){
        int num = 0, temp = sum, mx = 0;
        for(auto i : s){
            int x = sum | i;
            if(x - sum >= mx){
                mx = x - sum;
                num = i;
            }
        }
        sum |= num;
        if(sum == temp)break;
        ans.push_back(num);
    }
    return ans;
}

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> mp;
    int sum = 0;
    forn(i,n)cin >> v[i], mp[v[i]]++;
    sort(all(v));
    set<int> s;
    
    while(1){
        int num = 0, temp = sum, mx = 0;

        forn(i,n){
            int x = sum | v[i];
            if(x - sum >= mx){
                mx = x - sum;
                num = v[i];
            }
        }
        sum |= num;
        if(temp == sum)break;
        s.insert(num);
    }
    
    for(auto i : op(s)){
        cout<<i<<' ';
        mp[i]--;
    }


    vin last;
    for(auto &i : mp){
        while(i.second--){
            last.push_back(i.first);
        }
    }
    reverse(all(last));
    print(last);
    
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Restore_the_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Short_Task.c"
#include<stdio.h>

const int N = 1e7 + 5;

int sum[10000005];
int ans[10000005];


void seive(){
    for(int i = 1; i < N; i++){
        for(int j = i; j < N; j += i){
            sum[j] += i;
        }
    }
}

void sukuna(int test){
    int c;
    scanf("%d", &c);
    printf("%d\n", ans[c]);
}

int main(){
    for(int i = 0; i < N; i++)ans[i] = -1;
    seive();
    for(int i = 1; i < N; i++){
        if(sum[i] > 1e7)continue;
        if(ans[sum[i]] == -1)ans[sum[i]] = i;
    }

    int test;
    scanf("%d",&test);
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Short_Task.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e7 + 10;

int sum[N];
int ans[10000005];


void seive(){
    for(int i = 1; i < N; i++){
        for(int j = i; j < N; j += i){
            sum[j] += i;
        }
    }

}

void sukuna(int test){
    lin(c);
    cout << ans[c] << endl;
}

int32_t main(){
    fast_in_out;
    memset(ans, -1, sizeof(ans));
    seive();
    for(int i = 1; i < N; i++){
        if(sum[i] > 1e7)continue;
        if(ans[sum[i]] == -1)ans[sum[i]] = i;
    }

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Shuffling_Songs.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    vector<pair<string,string>>v(n),p(n);
    vin s;
    int x=1;
    forn(i,n)
    {
        cin>>v[i].first>>v[i].second;
        p[i].first=v[i].second;
        p[i].second=v[i].first;
    }
    if(n==1){cout<<"0\n";return 0;}
    sort(all(v));
    sort(all(p));

    forn(i,n-1)
    {
        if(v[i].first==v[i+1].first)x++;
        else
        {
            s.pb(x);
            x=1;
        }
    }
    int mx=*max_element(s.begin(),s.end());
    int y=0;
    forn(i,n)
    {
        if(p[i].first==p[i+1].first && p[i].second!=p[i+1].second)y+=2;
    }
    cout<<mx<<" "<<y;nl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Special_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define rprint(x)          for(auto i = x.rbegin(); i != x.rend(); i++)cout<<*i<<" ";

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void rm(set<int>&s, vin &v){
    for(auto i : v)s.erase(i);
}


void sukuna(){
    lin(n);
    if(n < 4){cout<<-1<<endl; return;}
    set<int> even, odd;
    vin ans;
    for(int i = 1; i <= n; i += 2)odd.insert(i);
    for(int i = 2; i <= n; i += 2)even.insert(i);
    
    auto i = odd.rbegin();
    auto e = odd.rend();
    vin toRemove;
    for(; i != e; i++){
        ans.push_back(*i);
        toRemove.push_back(*i);
        i++;
        if(i == e)break;
    }
    rm(odd, toRemove);
    for(auto i : odd)ans.push_back(i);
    int ind = ans.size();
    for(auto i = even.rbegin(); i != even.rend(); i++)ans.push_back(*i);
    if(n < 6){
        if(n == 5)ans = {4, 2, 5, 3, 1};
        print(ans);
        return;
    }

    if((abs(ans[ind] - ans[ind - 1])) < 2){
        swap(ans[ind], ans[ind + 2]);
        swap(ans[ind + 1], ans[ind + 2]);
    }
    print(ans);    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_White_Black_Balanced_Subtrees.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vector<vin> graph;
vin cnt(N);
string str;

void dfs(int vertex, int par = 0){
    
    if(str[vertex] == 'W')cnt[vertex]++;
    else cnt[vertex]--;

    for(auto child : graph[vertex]){
        if(child == par)continue;
        dfs(child,vertex);
        cnt[vertex] += cnt[child];
    }
}

void sukuna(){
    lin(n);
    vector<vin> v(n + 1);
    for(int i = 2; i <= n; i++){
        lin(x);
        v[x].push_back(i);
    }
    for(int i = 1; i <= n; i++)cnt[i] = 0;
    graph = v;
    string s; str = "*";
    cin >> s;
    str += s;

    int ans = 0;
    dfs(1);
    for(int i = 1; i <= n; i++){
        if(cnt[i] == 0)ans++;
    }

    cout<<ans<<endl;   
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/G_Years.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);

    vector<pr> v;
    for(int i = 0; i < n; i++){
        int x, y;
        cin >> x >>  y;
        v.push_back({x, 1});
        v.push_back({y, - 1});
    }

    sort(all(v));
    vin pf(2 * n + 1);
    pf[0] = v[0].second;
    for(int i = 1; i < 2 * n; i++){
        pf[i] += pf[i - 1] + v[i].second;
    }
    int ans = 1, mx = 0;

    for(int i = 0; i < 2 * n; i++){
        if(pf[i] > mx){
            mx = pf[i];
            ans = v[i].first;
        }
    }

    cout<<ans<<" "<<mx<<endl;


    
    
}

"/home/raihan/Desktop/Codeforces/hello.cpp"
hello.cpp

"/home/raihan/Desktop/Codeforces/High_Score.cpp"

"/home/raihan/Desktop/Codeforces/C_Cow_and_Message.cpp"
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
#define int long long

#define yes cout << "YES\n"
#define no cout << "NO\n"
#define nl cout << "\n"
#define endl "\n"

#define lin(n) \
    int n;     \
    cin >> n;
#define vin vector<int>
#define pr pair<int, int>
#define pb(n) push_back(n)
#define pp pop_back()
#define ppfr(v) v.erase(v.begin());
#define all(x) x.begin(), x.end()

#define fi first
#define se second

#define forn(i, e) for (int i = 0; i < e; i++)
#define Forn(i, e) for (int i = 1; i <= e; i++)
#define rforn(i, s) for (int i = s - 1; i >= 0; i--)
#define print(arr)        \
    for (auto x : arr)    \
        cout << x << " "; \
    nl;
#define mprint(mp)    \
    for (auto a : mp) \
        cout << a.first << " " << a.second << endl;

#define fast_in_out                   \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL);
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


int32_t main(){
    fast_in_out;
    int ans = 0;
    string str;
    cin >> str;

    vin arr1(26);
    vector<vin> arr2(26, vin(26));
    
    for (int i = 0; i < str.size(); i++){
        for (int j = 0; j < 26; j++){
            arr2[j][str[i] - 'a'] += arr1[j];
        }
        arr1[str[i] - 'a']++;
        ans = max(ans, arr1[str[i] - 'a']);
    }

    for (int i = 0; i < 26; i++){
        for (int j = 0; j < 26; j++){
            ans = max(ans, arr2[i][j]);
        }
    }
    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/C_Create_The_Teams.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, x;
vin v, dp(N, -1);

int recur(int ind){
    if(ind >= n)return 0;
    if(dp[ind] != -1)return dp[ind];

    int a = recur(ind + 1), b = 0, next = ceil(x * 1.0 / v[ind]);
    if(ind + next <= n)b = 1 + recur(ind + next);

    return dp[ind] = max(a, b);
}

void sukuna(int test){
    cin >> n >> x;
    v.clear();
    forn(i,n){lin(x); v.push_back(x); dp[i] = -1;}

    sort(all(v));
    cout << recur(0) << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Cycle_In_Maze.cpp"

"/home/raihan/Desktop/Codeforces/C_Cyclic_Permutations.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int binExp(int a, int b){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = ((ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }



int32_t main(){
    fast_in_out;
    lin(n);
    cout << binExp(2, n) << endl;
    
}

"/home/raihan/Desktop/Codeforces/C_Deep_Down_Below.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int func(vin &v){
    int mx = 0, n = v.size();
    for(int i = 0; i < n; i++){
        mx = max(mx, v[i] - i + 1);
    }
    return mx;
}

void sukuna(){
    lin(n);
    vector<vin> v(n);
    vector<pr> temp;
    forn(i,n){
        lin(m);
        forn(j, m){
            lin(x);
            v[i].push_back(x);
        }
    }

    for(int i = 0; i < n; i++){
        temp.push_back({func(v[i]), v[i].size()});
    }
    
    sort(all(temp));
    int ans = temp.front().first;

    int sum = ans;
    for(int i = 0; i < temp.size(); i++){
        if(sum < temp[i].first){
            ans += temp[i].first - sum;
            sum = temp[i].first;
        }
        sum += temp[i].second;
    }

    cout << ans << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Delete_Two_Elements.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    map<int, int> mp;

    int sum = 0;
    forn(i,n){
        lin(x);
        sum += x;
        mp[x]++;
    }
    
    __int128 check = __int128(sum) * (n - 2);

    if(check %  n != 0){
        cout<<0<<endl;
        return;
    }
    check /= n;
    check = sum - check;

    int ans = 0;

    for(auto it : mp){
        if(mp[check - it.first] > 0){
            if(check == 2 * it.first){
                ans += mp[it.first] * (mp[it.first] - 1) / 2;
                mp[it.first] = 0;
            }else{
                ans += mp[it.first] * mp[check - it.first];
                mp[it.first] = 0;
                mp[check - it.first] = 0;
            }
        }
    }
    
    cout<<ans<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Delete_Two_Elements.java"
import java.math.BigInteger;
import java.util.*;

public class C_Delete_Two_Elements {
    static Scanner in = new Scanner(System.in);

    static void solve(){
        int n = in.nextInt();
        HashMap<Integer, Integer> mp = new HashMap<>();
        
        long sum = 0;

        for(int i = 0; i < n ; i++){
            int x = in.nextInt();
            sum += x;
            mp.put(x, mp.get(x) + 1);
        }
        System.out.println(sum);

    }


    public static void main(String[] args) {
        int test = in.nextInt();

        while(test > 0){
            test--;
            solve();
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_Detective_Task.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    string str;
    cin >> str;
    int z = -1, n = str.size();
    for(int i = 0; i < n; i++){
        if(str[i] == '0'){
            z = i;
            break;
        }
    }
    if(z != - 1){
        int cnt = 0;
        for(int i = z; i >= 0; i--){
            if(str[i] == '1'){
                cnt++;
                break;
            }
            cnt++;
        }
        cout<<cnt<<endl;
        return;
    }
    for(int i = n - 1; i >= 0; i--){
        if(str[i] == '1'){
            z = i;
            break;
        }
    }
    if(z == -1)cout<<n<<endl;
    else{
        cout<<n - z<<endl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Did_We_Get_Everything_Covered.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m, k;
string str;

void sukuna(int test){
    cin >> n >> k >> m;
    cin >> str;
    map<int, vin> mp;
    
    for(int i = 0; i < m; i++)mp[str[i]].push_back(i);

    string ans;
    bool flg = true;
    int ind = -1;
    for(int i = 0; i < n; i++){
        int it = ind;
        for(char c = 'a'; c < 'a' + k; c++){
            auto up = upper_bound(all(mp[c]), ind) ;
            if(up == mp[c].end()){
                flg = false;
                ans.push_back(c);
                break;
            }
            it = max(it, *up);
        }
        ind = it;
        if(!flg)break;
        ans.push_back(str[ind]);
    }

    if(flg){yes; return;}
    for(int i = ans.size(); i < n; i++)ans.push_back('a');

    no;
    cout << ans << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Differential_Sorting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i, n)cin >> v[i];
    vector<vin> ans;
    bool flg = 1;
    for(int i = 0; i < n - 1; i++){
        if(v[i] > v[i + 1]){
            flg = 0;
            break;
        }
    }
    if(flg == 1){
        cout<<0<<endl;
        return;
    }

    for(int i = 0; i < n - 2 ; i++){
        vin tmp;
        tmp.push_back(i + 1);
        tmp.push_back(n - 1);
        tmp.push_back(n);
        ans.push_back(tmp);
    }

    if(v[n - 1] < v[n - 2] || v.back() < 0){
        cout<<-1<<endl;
        return;
    }
    cout<<ans.size()<<endl;
    for(auto a : ans){print(a);}
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Dishonest_Sellers.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, k;
    cin >> n >> k;
    vin a(n), b(n);
    vector<pr> dif(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    
    forn(i,n){
        dif[i].first = a[i] - b[i];
        dif[i].second = i;
    }
    sort(all(dif));
    int ans = 0;

    for(int i = 0; i < k; i++){
        
        ans += a[dif[i].second];

        a[dif[i].second] = 0;
        b[dif[i].second] = 0;
    }

    forn(i,n)ans += min(a[i], b[i]);
    cout << ans << endl;

    
}

"/home/raihan/Desktop/Codeforces/C_Division_and_Union.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

struct grp{int x, y, pos; void display(){cout << x <<" " << y <<" " << pos << endl;}};

void sukuna(int test){
    lin(n);
    vin ans(n);
    vector<grp>v(n);
    forn(i,n)cin >> v[i].x >> v[i].y, v[i].pos = i;
    sort(all(v), [](grp a, grp b){return a.x < b.x; });    

    int i = 0, mx = v[0].y;
    for(; i < n; i++){
        if(v[i].x > mx){ break;}
        ans[v[i].pos] = 1;
        mx = max(mx, v[i].y);
    }

    if(i == n){cout << -1 << endl; return;}
    for(; i < n; i++)ans[v[i].pos] = 2;
    print(ans);
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Division_by_Two_and_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool func(int a, int b){
    if(b == a )return true;
    while(b > 0){
        b >>= 1;
        if(b == a)return true;
    }
    return false;
}

void sukuna(){
    lin(n);
    vin v, toRemove;
    set<int> p, mis;
    
    forn(i,n){
        lin(x);
        if(x <= n && p.count(x) == 0){
            p.insert(x);
        }else{
            v.pb(x);
        }
    }
    Forn(i,n){
        if(p.count(i) == 0)mis.insert(i);
    }
    sort(all(v));
    int cnt = 0;
    for(auto i = mis.rbegin(); i != mis.rend(); i++){
        int x = *i;
        for(auto &j : v){
            if(func(x, j)){
                j = 0;
                cnt++;
                break;
            }
        }
    }
    if(cnt == mis.size())yes;
    else no;
    
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Divisor_Chain.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin ans;
    bitset<10> a(n), b(-n);
    cout<<a<<endl<<b<<endl;

    while(__builtin_popcount(n) > 1){
        ans.push_back(n);
        n -= n & -n;
    }
    while(n >= 1){
        ans.push_back(n);
        n >>= 1;
    }


    cout<<ans.size()<<endl;
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_DIY.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    map<int, int> mp;
    forn(i,n){
        lin(x);
        mp[x]++;
    }

    multiset<int> s;
    
    for(auto i : mp){
        while(i.second > 1){
            s.insert(i.first);
            i.second -= 2;
        }
    }
    if(s.size() < 4){no; return;}
    yes;
    auto it = s.begin();
    int a = *it, b = *++it;
    auto iit = s.rbegin();
    int d = *iit, c = *++iit;

    cout << a <<" " << b << " " << a << " " << d << " " << c << " " << b <<" " << c <<" " << d << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Dominant_Character.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    string str;
    cin >> str;

    //two operation
    for(int i = 0; i < n - 1; i++){
        if(str[i] == 'a' and str[i + 1] == 'a'){
            cout << 2 << endl;
            return;
        }
    }

    //three operation
    for(int i = 0; i < n - 2; i++){
        if(str[i] == str[i + 2] and str[i] == 'a'){
            cout << 3 << endl;
            return;
        }
    }

    //four operation
    for(int i = 0; i < n - 3; i++){
        if(str[i] == str[i + 3] and str[i] == 'a'){
            if(str[i + 1] != str[i + 2]){
                cout << 4 << endl;
                return;
            }
        }
    }

    //seven operation
    for(int i = 0; i < n - 6; i++){
        if(str[i] == 'a' and str[i + 3] == 'a' and str[i + 6] == 'a'){
            if(str[i + 1] == str[i + 2] and str[i + 4] == str[i + 5] and str[i + 1] != str[i + 4]){
                cout << 7 << endl;
                return;
            }
        }
    }

    cout << - 1 << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Dominated_Subarray.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    map<int,vin> mp;
    vin v(n);
    forn(i,n){
        cin >> v[i];
        mp[v[i]].push_back(i);
    }

    int ans = INF;
    bool flg = false;

    for(auto i : mp){
        if(i.second.size() == 1)continue;
        flg = true;
        for(int j = 1; j < i.second.size(); j ++){
            ans = min(ans, i.second[j] - i.second[j - 1] + 1);
        }
    }

    if(!flg)ans = -1;

    cout << ans << endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Binary_String_Constructing.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int a, b, x;


void ansEven(){
    int n = x;
    string ans;
    char x = '1', y = '0';
    if(b > a){
        swap(a,b);
        swap(x, y);
    }

    ans.push_back(x);
    a-=2;

    for(; n > 2; a--, b--, n -= 2){
        ans.push_back(y);
        ans.push_back(x);
    }

    while(a > 0)a--,cout << x;

    cout << ans;

    while(b > 0)b--,cout << y;
    cout << x << endl;
}

void ansOdd(){
    string ans;

    for(; x > 1; a--, b--, x-=2){
        ans += "10";
    }
    int x = 1, y = 0;
    if(x)swap(x, y);

    while(a--)cout <<x;
    cout << ans;
    while(b--)cout<<y;
    cout << endl;
}


int32_t main(){
    fast_in_out;
    cin >> a >> b >> x;
    swap(a, b);
    if(x & 1) ansOdd();
    else ansEven();
}

"/home/raihan/Desktop/Codeforces/B_Binomial_Coefficients_Kind_Of.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vin v;

void preProcess(){
    int val = 1;
    for(int i = 0; i < N; i++){
        v.push_back(val);
        val = (val * 2) % M;
    }

}

void sukuna(int N, int k){
    cout << v[k] << endl;
}

int32_t main(){
    fast_in_out;
    preProcess();

    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first;
    forn(i,n)cin >> v[i].second;
    for(int i = 0; i < n; i++){
        sukuna(v[i].first, v[i].second);
    }
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Black_Cells.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n;
bool func(vin &v, int x){
    multiset<int> s;
    s.insert(v[1] - v[0]);
    if(n > 2)
    s.insert(v[n - 1] - v[n - 2]);

    for(int i = 1; i < n - 3; i++){
        int x = v[i + 1] - v[i];
        int y = v[i + 2] - v[i + 1];
        if(y < x){
            s.insert(y);
            i++;
        }else{
            s.insert(x);
        }
        // cout << v[i] <<" ";
    }
    int last = *--s.end();
    s.erase(--s.end());
    s.insert((last ) / 2);
    // print(s);


    return *--s.end() <= x;
}


void sukuna(int test){
    cin >> n;
    vin v(n);
    forn(i,n)cin >> v[i];
    if(n == 1){
        cout << 1 <<endl;
        return;
    }

    int lo = 1, hi = INF, mid;

    // cout << func(v, 2) << endl;

    // return;
    while(hi > lo){
        mid = (lo + hi) / 2;
        if(!func(v, mid)){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    cout << lo << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Blank_Space.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];

    int ans = 0, sum = 0;
    for(int i = 0 ; i < n; i++){
        if(v[i]){
            ans = max(sum, ans);
            sum = 0;
        }else{
            sum++;
        }
    }
    ans = max(sum, ans);
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Blocks.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n; string a;
    cin >> n >> a;
    string b = a;
    vin ans;
    for(int i = 0; i < n - 1; i++){
        if(a[i] == 'B')continue;
        a[i] = 'B';
        ans.push_back(i + 1);
        if(a[i + 1] == 'B')a[i + 1] = 'W';
        else a[i + 1] = 'B';
    }

    if(a.back() == 'B'){
        cout<<ans.size()<<endl;
        print(ans);
        return;
    }
    ans.clear();
    for(int i = 0; i < n - 1; i++){
        if(b[i] == 'W')continue;
        b[i] = 'W';
        ans.push_back(i + 1);
        if(b[i + 1] == 'B')b[i + 1] = 'W';
        else b[i + 1] = 'B';
    }
    if(b.back() == 'W'){
        cout<<ans.size()<<endl;
        print(ans);
        return;
    }
    cout<<-1<<endl;


}

int32_t main(){
    fast_in_out;

    int test = 1;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Bowling_Frame.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int b, w;
    cin >> b >> w;
    int tot = b + w;
    int lo = 1, hi = tot, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        int x = mid * (mid + 1) / 2;
        if(x <= tot){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    if(lo * (lo + 1) / 2 > tot)lo--;
    cout << lo << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Box_Fitting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, W, sum = 0;

bool op(map<int, int> &mp){
    int w = W;
    bool flg = 1;

    for(auto i = mp.rbegin(); i!= mp.rend(); i++){
        if(i->second == 0)continue;
        flg = 0;
        int div = w / i->first;
        div = min(div, i->second);
        if(div >= 1){
            w -= div * i->first;
            sum -= div * i->first;
            i->second -= div;
        }
    }
    if(flg)return true;
    return false;
}

void sukuna(){
    cin >> n >> W;
    vin v(n);
    map<int, int> mp;
    forn(i,n)cin >> v[i], mp[v[i]]++;
    sum = accumulate(all(v), 0ll);
    sort(all(v));
    // print(v);

    int ans = 0;
    for(int i = 0; i < n; i++){
        if(op(mp))break;
        ans++;
    }

    cout << ans<<endl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Brightness_Begins.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int k;

bool func(int n){
    int x = sqrt(n);
    return (n - x) >= k;
}

void sukuna(){
    cin >> k;
    int lo = 1, hi = 3e18, mid;
    int ans = 0;

    while(hi >= lo){
        mid = (lo + hi) / 2;
        
        if(func(mid)){
            ans = mid;
            hi = mid - 1;
        }else{
            lo = mid + 1;
        }
    }
    cout << ans << endl; 
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Build_the_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, a, b;
    cin >> n >> a >> b;
    vin ans;
    int i = 1, j = n, xx = a, yy = b;
    // a++, b++;
    
    for(; a > 0 && b > 0; a--, b--, i++, j--){
        ans.push_back(i);
        ans.push_back(j);
    }
    for(; i <= j; i++)ans.pb(i);







    //check
    int x = 0, y = 0;
    for(int i = 1; i < n - 1; i++){
        if(ans[i - 1] < ans[i] && ans[i] > ans[i + 1])x++;
        if(ans[i - 1] > ans[i] && ans[i] < ans[i + 1])y++;
    }

    cout<<xx<<' '<<yy<<endl;
    cout<<x<<" "<<y<<endl;
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Burglar_and_Matches.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    int n, m;
    cin >> n >> m;
    vector<pr> v(m);
    forn(i,m)cin >> v[i].second >> v[i].first;
    sort(all(v), greater<>());

    int ans = 0;

    for(int i = 0; i < m && n > 0; i++){
        int cnt = min(n, v[i].second);
        ans += v[i].first * cnt;
        n -= cnt;
    }

    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/B_Buying_Lemonade.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    int ans = 0, sum = 0, m = n, extra = 0;

    for(int i = 0; i < n; i++){
        ans += min((v[i] - sum) * m, k);
        if(ans >= k)break;
        sum = v[i];
        extra ++;
        m--;
    }
    cout << k + extra << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Cards.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

string rgb = "BGR";


int32_t main(){
    fast_in_out;
    lin(n);
    string str;
    cin >> str;
    map<char, int> s;
    for(auto i : str)s[i]++;

    if(n == 2){
        if(str[0] == str[1])cout << str[0] << endl;
        else{
            for(auto i : rgb){
                if(i != str[0] and i != str[1]){cout << i << endl; break;}
            }
        }
        return 0;
    }
    if(s.size() == 3){
        cout << "BGR" << endl;
        return 0;
    }else if (s.size() == 1){
        cout <<s.begin()->first <<endl;
        return 0;
    }

    bool flg = false;
    for(auto i : s){
        if(i.second == 1)flg = true;
    }
    if(!flg){
        cout << rgb << endl;
        return 0;
    }    
    sort(all(str));
    string ans, temp;

    if(s[str.front()] == 1)temp.push_back(str.front()), temp.pb(str.back()), temp.pb(str.back());
    else temp.push_back(str.front()), temp.pb(str.front()), temp.pb(str.back());

    str = temp;
    
    if(str[0] == str[1])ans.push_back(str[2]);
    else ans.push_back(str[0]);
    for(auto i : rgb){
        if(i != str[0] and i != str[2]){ans.push_back(i); break;}
    }
    sort(all(ans));
    cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/B_Card_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int a, b, c, d, ans = 0;
    cin >> a >> b >> c >> d;
    
    if(a > c && b >= d)ans++;
    if(a == c && b > d)ans++;
    if(a > d && b >= c)ans++;
    if(a == d && b > c)ans++;

    cout<<ans * 2<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Cat_Cycle.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, k;
    cin >> n >> k;

    if(n % 2 == 0){
        int ans = k % n;
        if(ans == 0)ans = n;
        cout<<ans<<endl;
        return;
    }
    int div = n / 2;
    k--;
    k += k / div + 1;
    if(k%n == 0)cout<<n<<endl;
    else cout<<k%n<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Chaya_Calendar.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    vector<int>v(n);
    forn(i,n)cin>>v[i];
    int i,x=v[0];

    for(i=1;i<n;i++)
    {
        if(x%v[i]==0)x+=v[i];
        else x+=v[i]-x%v[i];
    }
    cout<<x;nl;
    

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Circle_Game.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    if(n & 1){cout << "Mike" << endl; return;}

    int mn = 0;
    forn(i,n){
        if(v[i] < v[mn])mn = i;
    }
    cout << ((mn & 1) ? "Mike" : "Joe") << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Coins.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef 					long long ll;
typedef 					long double ld;

#define forn(i,e) 			for(ll i=0;i<e;i++)
#define rforn(i,s) 			for(ll i=s-1;i>=0;i--)
#define yes 				cout<<"YES"<<endl
#define no 					cout<<"NO"<<endl
#define pb                 	push_back
#define pp                 	pop_back
#define nl 					cout<<"\n"
#define sz(x)              ((ll)(x).size())

int main()
{
    string str;
    int arr[3]={0};
    for(int i=0;i<3;i++)
    {
        cin>>str;
        if(str[1]=='<')swap(str[0],str[2]);
        arr[str[0]-65]++;
    }
    for(int i=0;i<3;i++)
    {
        if(arr[i]==0)str[0]=i+65;
        if(arr[i]==1)str[1]=i+65;
        if(arr[i]==2)str[2]=i+65;
    }
    sort(arr,arr+3);

    if(arr[2]==2)cout<<str;
    else cout<<"Impossible";
    nl;

    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/C_Tear_It_Apart.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

int func(string str, char c){
    int ans = 0, n = str.size();
    int pre = -5;
    bool ck = 1;
    for(int i = 0; i < n; i++){
        if(str[i] == c){
            ck = 0;
            continue;
        }
        else{
            ans = 1;
            if(i - 1 == pre)continue;
            else{
                pre = i;
                str[i] = '*';
            }
        }
    }
    string send;
    for(int i = 0; i < n; i++){
        if(str[i] != '*')send.push_back(str[i]);
    }

    if(ck)return INF;
    if(ans)return 1 + func(send, c);
    return 0;
}


void sukuna(){
    string str;
    cin >> str;
    int n = str.size(), ans = 0;

    while(n > 1){
        int x = (n + 1) / 2;
        ans++;
        n -= x;
    }

    for(char c = 'a'; c <= 'z'; c++){
        ans = min(ans, func(str, c));
    }

    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Tenzing_and_Balls.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, dp_cnt = 0;
vin v, pos[N], dp(N, -1);


int recur(int ind){
    dp_cnt++;

    if(ind == n)return 0;
    if(dp[ind] != -1)return dp[ind];
    
    int a = recur(ind + 1);
    int b = 0;

    int m = pos[v[ind]].size(), p = v[ind];

    int i = upper_bound(all(pos[p]), ind) - pos[p].begin();
    if(i == m)return dp[ind] = max(a, b);

    int d = pos[p][i] + 1;
    if(dp[d] != -1)b = max(b, d - ind + dp[d]);
    else
    for(; i < m; i++){
        b = max(b, pos[p][i] - ind + 1 + recur(pos[p][i] + 1));
    }
    return dp[ind] = max(a, b);
}

void sukuna(){
    v.clear();
    cin >> n;
    forn(i,n){
        lin(x);
        v.pb(x);
        pos[x].clear();
        dp[i] = -1;
    }

    forn(i,n){
        pos[v[i]].push_back(i);
    }

    cout << recur(0) << endl;   
    cout << dp_cnt << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Thermostat.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int l, r, x;
int a, b;

int func1(){
    if(abs(r - a) >= x);
    else return -1;
    if(abs(r - b) >= x)return 2;
    if((abs(b - l)) >= x)return 3;
    else return -1;
}
int func2(){
    if(abs(a - l) >= x);
    else return - 1;
    if(abs(l - b) >= x)return 2;
    if(abs(r - b) >= x)return 3;
    else return -1;
}

void sukuna(){
    cin >> l >> r >> x;
    cin >> a >> b;
    
    if(a == b){
        cout<<0<<endl;
        return;
    }
    if(b > r || b < l){
        cout<<-1<<endl;
        return;
    }
    if(abs(a - b) >= x){
        cout<<1<<endl;
        return;
    }
    int ans = func1();
    if(func2() == -1);
    else{
        if(ans != -1){
            ans = min(ans, func2());
        }
        else ans = func2();
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_The_Delivery_Dilemma.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n + 1);
    Forn(i,n)cin >> v[i].first;
    Forn(i,n)cin >> v[i].second;
    sort(all(v),[](pr a, pr b){
        if(a.first < b.first)return true;
        if(a.first == b.first)return a.second > b.second;
        return false;
    });
    vin pf(n + 1);
    Forn(i,n)pf[i] = v[i].second;
    for(int i = n - 1; i >= 0; i--)pf[i] += pf[i + 1];


    int ans = v.back().first;
    for(int i = n - 1; i >= 0; i--){
        ans = min(ans, max(v[i].first, pf[i + 1]));
    }

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_The_Delivery_Dilemma.java"
import java.util.*;

public class C_The_Delivery_Dilemma {
    static Scanner in = new Scanner(System.in);

    public static class pair{
        public long x, y;
        public pair() {
        }
        public pair(long x, long y) {
            this.x = x;
            this.y = y;
        }
        void display(){
            System.out.println(x + " " + y);
        }
    };


    static void sukuna(){
        int n = in.nextInt();

        ArrayList<pair> v = new ArrayList<>();
        long arr1[] = new long[n + 10];
        long arr2[] = new long[n + 10];
        for(int i = 1; i <= n; i++)arr1[i] = in.nextLong();
        for(int i = 1; i <= n; i++)arr2[i] = in.nextLong();
        for(int i = 0; i <= n; i++){
            v.add(new pair(arr1[i], arr2[i]));
        }

        v.sort((a, b) -> {
            if(a.x < b.x)return -1;
            if(a.x == b.x)if(a.y > b.y)return -1;
            return  1;
        });

        long pf[] = new long[n + 10];
        for(int i = 1; i <= n; i++){;
            pf[i] = v.get(i).y;
        }
        for(int i = n - 1; i > 0; i--)pf[i] += pf[i + 1];

        long ans = v.getLast().x;
        for(int i = n - 1; i >= 0; i--){
            ans = Math.min(ans, Math.max(v.get(i).x, pf[i + 1]));
        }
        System.out.println(ans);
    }
    public static void main(String[] args) {
        int test = in.nextInt();
        while(test-- > 0){
            sukuna();
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_The_Legend_of_Freya_the_Frog.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    double a, b, c;
    cin >> a >> b >> c;
    int x = ceil(a * 1.0/ c);
    int y = ceil(b * 1.0 / c);
    
    int sum = 0;
    if(x > y)sum--;

    sum += max(x, y) * 2;
    cout<<sum<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_The_Legend_of_Freya_the_Frog.java"
import java.util.*;
public class C_The_Legend_of_Freya_the_Frog {
    static Scanner in = new Scanner(System.in);
    
    static void JUJUTSU(){
        int a = in.nextInt(), b = in.nextInt(), c = in.nextInt();
        int x = Math.ceilDiv(a, c); 
        int y = Math.ceilDiv(b, c);
        int ans = 0;
        if(x > y){
            ans --;
        }
        ans += Math.max(x, y) * 2;
        System.out.println(ans);
    }
    public static void main(String[] args) {
        int test = in.nextInt();
        while(test > 0){
            test--;
            JUJUTSU();
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_The_Smallest_String_Concatenation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

bool cmp(string a, string b){
    if(a + b < b + a)return true;
    return false;
}


int32_t main()
{
    fast_in_out;
    lin(n);
    vector<string> v(n);
    forn(i,n){
        cin >> v[i];
    }
    sort(all(v), cmp);
    
    for(auto a : v)cout<<a;nl;
    
}

"/home/raihan/Desktop/Codeforces/C_The_Tag_Game.cpp"
#include<bits/stdc++.h>
using namespace std;

#define print(vis)     for(int i = 1; i <= n; i++)cout << vis[i] << " "; cout <<endl;
const int N = 2e5 + 10;
int n, x;
vector<vector<int>> graph(N), graph2(N);
vector<int> toRemove;
int vis[N], lev[N];
bool stopLoop = false;

void dfs(int vertex, int par = 0){
    
    for(auto child : graph[vertex]){
        if(child == par)continue;
        
        lev[child] = lev[vertex] + 1;
        dfs(child, vertex);
    }
}

void dfs2(int vertex, int par = 0){
    toRemove.push_back(vertex);

    for(auto child : graph[vertex]){
        if(child == par)continue;
        if(child == x)continue;
        dfs2(child, vertex);
    }
}

void reset(){
    graph = graph2;
    for(int i = 1; i <= n; i++){
        vis[i] = 0; lev[i] = 0;
    }
}

int main(){
    reset();
    cin >> n >> x;
    int ans = 0, final_ans =0, ans2 = 0;
    for(int i = 0; i < n - 1; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }
    graph2 = graph;
    dfs(1);
    final_ans = lev[x];
    reset();

    dfs2(1);
    for(auto i : toRemove)graph[i].clear();
    dfs(x);
    final_ans += *max_element(lev, lev + n + 5);



    for(int i = 1; i <= n; i++){
        final_ans = max(final_ans, lev[i]);
    }    

    reset();
    dfs(1);
    for(int i = 1; i <= n; i++)ans = max(ans, lev[i]);
    reset();
    graph[1].clear();
    dfs(x);

    for(int i = 1; i<= n; i++)ans2 = max(ans2, lev[i]);

    if(ans2 < ans)final_ans = ans;

    cout << final_ans * 2 <<endl;

}

"/home/raihan/Desktop/Codeforces/C_The_Trail.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define printGrid(temp)         forn(i,n){forn(j,m)cout << temp[i][j] <<" ";nl;}

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, m;
    string path;
    cin >> n >> m >> path;
    vector<vin> grid(n + 1, vin(m + 1));
    auto temp = grid;
    forn(i,n)forn(j,m)cin >> grid[i][j];
    
    for(int i = 0, j = 0, k = 0; k < path.size(); k++){
        if(path[k] == 'D'){
            int sum = 0;
            for(int l = 0; l < m; l++)sum += grid[i][l];
            grid[i][j] = -sum; i++;
        }else{
            int sum = 0;
            for(int l = 0; l < n; l++)sum += grid[l][j];
            grid[i][j] = -sum; j++;
        }
    }
    int sum = 0;
    for(int i = 0; i < n; i++){
        sum += grid[i][m - 1];
    }
    grid[n - 1][m - 1] = -sum;
    printGrid(grid);  

}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Three_displays.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 3e3 + 100;
int n;
vin v, cost;
vector<vin> dp(N, vin(5, -1));

int recur(int ind, int x){

    if(x == 2){
        return 0;
    }
    if(ind == n - 1)return INF;
    if(dp[ind][x] != -1)return dp[ind][x];

    int ans = INF;

    for(int i = ind + 1; i < n; i++){
        if(v[i] > v[ind]){
            ans = min(ans, cost[i] + recur(i, x + 1));
        }
    }
    return dp[ind][x] = ans;
}

int32_t main(){
    fast_in_out;
    cin >> n;

    forn(i,n){
        lin(x);
        v.push_back(x);
    }

    forn(i,n){
        lin(x);
        cost.push_back(x);
    }

    int ans = INF;

    for(int i = 0; i < n; i++){
        ans = min(ans, cost[i] + recur(i, 0));
    }

    if(ans == INF)ans = -1;
    cout << ans << endl;


    
}

"/home/raihan/Desktop/Codeforces/C_Ticket_Hoarding.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)             v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m, k;
    cin >> n >> m >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    int cnt = ceil(k * 1.0 / m);

    int extra = 0;
    int ans = 0;
    for(int i = 0; i < cnt; i++){
        ans += min(k, m) * (v[i] + extra);
        extra += min(k, m);
        k -= min(k, m);
    }

    cout << ans <<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Tiles_Comeback.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
   int n, k;
   cin >> n >> k;
   vin v(n);
   forn(i,n)cin >> v[i];

   int f = 0, s = 0, i = 0, j = n - 1;

   for(; i < n; i++){
        if(v[i] == v[0])s++;
        if(s == k)break;
   } 
   for(; j > i; j--){
        if(v[j] == v.back())f++;
        if(f == k)break;
   }
   if(s == k && f == k)yes;
   else if(v.back() == v.front() && s == k)yes;
   else no;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Binary_Inversions.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

ll maxck(vector<int>v)
{
    ll cnt=0,ans=0,n=v.size();
    forn(i,n) if(v[i]==1){ cnt++;ans+=(n-i)-cnt;}
    return ans;
}

int solve()
{
    ll n,ans=0;
    cin>>n;
    vin v(n),b(n),c(n);
    forn(i,n)
    {
        cin>>v[i]; b[i]=v[i];c[i]=v[i];
    }

    forn(i,n)if(b[i]==0){b[i]=1;break;}
    rforn(i,n)if(c[i]==1){c[i]=0;break;}

    long long int f=maxck(b),l=maxck(c),m=maxck(v);

    cout<<max(f,max(m,l));nl;

    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Block_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, dp_cnt = 0;
vin v, dp(N, -1);

int recur(int ind){
    dp_cnt++;
    int rem = n - ind - 1;
    if(rem < 0)return 0;
    if(ind == n)return 0;
    if(dp[ind] != -1) return dp[ind];

    int a = recur(ind + 1);
    int b = 0;
    
    if(rem >= v[ind])b = v[ind] + 1 + recur(ind + v[ind] + 1);

    return dp[ind] = max(a, b);
}

void sukuna(){
    v.clear();
    cin >> n;
    forn(i,n){
        lin(x);
        v.push_back(x);
        dp[i] = -1;
    }

    cout << n - recur(0) << endl;    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Boxers.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));
    vector<vin> par;
    vin temp;

    temp.push_back(v.front());
    for(int i = 1; i < n; i++){
        if((v[i] - temp.back()) < 2){
            temp.push_back(v[i]);
            continue;
        }
        par.push_back(temp);
        temp.clear();
        temp.push_back(v[i]);
    }
    par.push_back(temp);
    set<int> s;

    for(auto &temp : par){
        int i = 0;
        int sz = temp.size();
        if(s.count(temp.front() - 1) == 0){
            if(temp.front() - 1 > 0){
                s.insert(temp.front() - 1);
                i++;
                sz--;
            }
        }
        
        if(sz > (temp.back() - temp.front() + 1)){
            s.insert(temp.back() + 1);
            for(auto &i : temp)s.insert(i);
            continue;
        }
        if(sz == (temp.back() - temp.front() + 1)){
            for(auto &i : temp)s.insert(i);
        }else{
            for(; i < temp.size(); i++){
                s.insert(temp[i]);
            }
        }      
    }

    cout << s.size() << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Building_an_Aquarium.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);


ll f(vector<ll> &a,ll mid)
{
    ll cnt=0;ll n=a.size();
    for(ll i=0;i<n;++i)
    {
        if(mid>a[i]){cnt+=mid-a[i];}
    }
    //cout<<cnt;
    return cnt;
}



int solve()
{
        ll n,w;
        cin>>n>>w;
        vector<ll> a(n);
        for(ll i=0;i<n;++i)cin>>a[i];
        // print(a);

        ll l=1, r=1e11;

        while(l<=r)
        {
            ll mid=(l+r)/2;
            ll cnt=f(a,mid);
            if(cnt>w){r=mid-1;}
            else{l=mid+1;}
        }
        //ll ans=f(a,4);
   // cout<<ans;

       cout<<l-1<<endl;
        
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Cardboard_for_Pictures.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
vin v;
int w;

bool func(int x){
    x <<= 1;
    int sum = 0;
    for(auto i : v){
        int y = x + i;
        sum += y * y;
        if(sum > w)return false;
    }
    return true;
}

void sukuna(){
    int n, c;
    cin >> n >> c;
    w = c;
    vin s(n);
    forn(i,n)cin >> s[i];
    v = s;

    int lo = 1, hi = 1e9, mid;

    while(hi > lo + 1){
        mid = (lo + hi) / 2;
        
        if(func(mid)){
            lo = mid;
        }else{
            hi = mid - 1;
        }
    }
    if(func(hi))lo = hi;

    cout<<lo<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Cells_Arrangement.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Cyclic_Components.cpp"
#include<bits/stdc++.h>
using namespace std;

const int N = 2e5 + 100;
vector<int> graph[N], c;
bool vis[N], isConnected = false;


void dfs(int vertex, int par = 0){
    if(vis[vertex])return;
    vis[vertex] = true;
    c.push_back(vertex);

    for(auto child : graph[vertex]){
        if(child == par)continue;
        if(vis[child])isConnected = true;
        dfs(child, vertex);
    }
}

int main(){
    int n, m;
    cin >> n >> m;
    for(int i = 0; i < m; i++){
        int x, y;
        cin >> x >> y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }
    for(int i = 1; i <= n; i++)vis[i] = false;

    int ans = 0;
    vector<vector<int>> cc;

    for(int i = 1; i <= n; i++){
        isConnected = false;
        if(vis[i])continue;
        c.clear();
        dfs(i);
        if(isConnected)cc.push_back(c);
    }
    for(auto c : cc){
        bool ck = 1;
        for(auto i : c){
            if(graph[i].size() != 2){
                ck = 0;
                break;
            }
        }
        if(ck)ans++;
    }
    cout<<ans<<endl;

}

"/home/raihan/Desktop/Codeforces/E_E.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    int a, b;
    cin >> a >> b;
    if(a == b)cout << "WORLD WAR 3!";
    else if(a > b)cout <<"MAGA!";
    else cout <<"FAKE NEWS!";
    cout << endl;
}

"/home/raihan/Desktop/Codeforces/E_Eating_Queries.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n";
#define no                 cout<<"NO\n";
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, q, sum = 0;
    cin >> n >> q;
    vin v(n);
    forn(i,n)cin >> v[i], sum += v[i];
    sort(all(v), greater<int>());
    for(int i = 1; i < n; i++){
        v[i] += v[i - 1];
    }

    while(q--){
        int x;
        cin >> x;
        int lb = lower_bound(all(v), x) - v.begin();
        if(lb == n)cout<<-1<<endl;
        else cout<<lb + 1<<endl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Expression_Correction.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int convert(string num){
	if(num.front() == '0')return 0;
	int sum = 0;
	int n = num.size();
	for(int i = n - 1, p = 1; i >= 0; i--, p *= 10){
		sum += (num[i] - '0') * p;
	}
	if(sum > 9999999999)return 0;
	return sum;
}

bool isNum(char c){
	return c >= '0' and c <= '9';
}

bool isZero(string str){
	for(auto i: str)if(i != '0')return false;
	return true;
}

bool func(string str){
	vin left, right;
	int n = str.size(), i = 0;
	int ep = 1;
	if(str.front() == '-'){ep = -1; i++;}

	string num;
	str.push_back('=');

	for(; i < n; i++){
		if(!isNum(str[i])){
			left.push_back(convert(num) * ep);
			num.clear();

			if(left.back() == 0 and !isZero(num))return false;

			if(str[i] == '='){ i++; break;}
			if(str[i] == '+')ep = 1;
			else ep = -1;
			continue;
		}
		num.push_back(str[i]);
	}
	if(str[i] == '-'){ep = -1; i++;}
	else ep = 1;

	for(; i <= n; i++){
		if(!isNum(str[i])){
			right.push_back(convert(num) * ep);
			if(left.back() == 0 and !isZero(num))return false;
			num.clear();
			if(str[i] == '=')break;
			if(str[i] == '+')ep = 1;
			else ep = -1;
			continue;
		}
		num.push_back(str[i]);
	}
	if(left.empty() or right.empty())return false;
	return accumulate(all(left), 0ll) == accumulate(all(right), 0ll);
}


void sukuna(int test){
	string str;
	getline(cin, str);

	if(func(str)){
		cout <<"Correct" << endl;
		return;
	}

	int n = str.size();
	str.push_back('+');
	for(int i = 0; i < n; i++){
		if(!isNum(str[i]))continue;

		if(!isNum(str[i + 1])){
			if(i == 0)continue;
			if(!isNum(str[i - 1]))continue;
		}

		

		string strr = str; strr.pop_back();
		strr.erase(strr.begin() + i);
		for(int j = 0; j < n - 1; j++){
			// if(!isNum(strr[j]))continue;
			string temp = strr;
			temp.insert(temp.begin() + j, str[i]);
			if(func(temp)){
				cout << temp << endl;
				return;
			}
		}

		strr.insert(strr.begin() + n - 1, str[i]);
		if(func(strr)){
			cout << strr << endl;
			return;
		}
	}
	cout << "Impossible" << endl;

	
}

int32_t main(){
	fast_in_out;

	int test = 1;//   cin>>test;
	for(int i = 1; i <= test; i++)sukuna(i);
	return 0;
}

"/home/raihan/Desktop/Codeforces/E_Expression_Correction.java"

"/home/raihan/Desktop/Codeforces/E_E_Circuit_Is_Now_on_Sale.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;
vector<string> grid;


void sukuna(int test){
    cin >> n >> m;
    forn(i,n){
        string str;
        cin >> str;
        for(auto &i : str)if(i >= '0' and i <= '9') i-= '0';
        grid.push_back(str);
    }
}

int32_t main(){
    fast_in_out;

    int test = 1;   //cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Function.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

int n, v[N];

int func(int i, int j){
    if(i == 0)return v[j];
    return min(func(i - 1, j), func(i - 1, j - 1)) + v[j];
}

int32_t main(){
    cin >> n;
    for(int i = 0; i < n; i++)cin >> v[i];

    int q;
    cin >> q;
    while(q--){
        int l, r;
        cin >> l >> r;
        cout << func(--l, --r) << endl;
    }

}

"/home/raihan/Desktop/Codeforces/E_Insane_Problem.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int k, l[3], r[3];

int func(int p){
    int lo = l[1], hi = r[1], mid;

    while(hi > lo){
        mid = (lo + hi) / 2;

        if(mid * p < l[2]){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    int L = lo;


    lo = l[1], hi = r[1], mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        if(mid * p > r[2]){
            hi = mid - 1;
        }else{
            lo = mid + 1;
        }
    }
    if(lo * p > r[2])lo--;


    int R = lo;

    if(R * p < l[2])return 0;
    return max(0ll, R - L + 1);
}

void sukuna(int test){
    cin >> k >> l[1] >> r[1] >> l[2] >> r[2];

    int p = 1; 

    int ans = 0;
    while(p <= r[2]){
        ans += func(p);
        p *= k;
    }   

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Interview.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int query(int l, int r){
    cout<<"? ";
    cout<<r - l + 1<<" ";
    for(int i = l; i <= r; i++)cout<<i<<' ';nl;
    cout.flush();
    int ask;
    cin >> ask;
    return ask;
}

void sukuna(){
    lin(n);
    vin v(n + 1);
    Forn(i,n)cin >> v[i];
    vin pf = v;
    for(int i = 1; i <= n; i++)pf[i] += pf[i - 1];

    int lo = 1, hi = n, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        int sum = pf[mid] - pf[lo - 1];
        if(query(lo, mid) == sum){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }

    cout<<"! "<<lo<<endl;
    cout.flush();
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Kachina_s_Favorite_Binary_String.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"
#define imp                cout << "! IMPOSSIBLE" << endl; cout.flush();


#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(int i = 1; i <= n; i++)cout<< arr[i];nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int query(int l, int r){
    cout <<"? " << l <<" " << r << endl;
    cout.flush();
    lin(ask);
    return ask;
}

void sukuna(int test){
    lin(n);
    vin ans(n + 10);
    int l = 1, r = 2, cnt = 0, q;
    bool flg = true;
    for(int i = r; i <= n; i++){
        q = query(l, i);
        r = i;
        if(q == 0)continue;
        flg = false;
        break;
    }
    ans[r] = 1; l = r - 1;
    if(flg){imp return;}

    for(int i = r - q - 1; i >= 0; i--)ans[i] = 1;

    int cur = 1;
    for(int i = r + 1; i <= n; i++){
        q = query(l, i);
        cnt++;
        if(q == cur){
            cur = 0;
            l = i;
        }else{
            cur = q;
            ans[i] = 1;
        }
    }
    cout <<"! "; print(ans);
    cout.flush();    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Klee_s_SUPER_DUPER_LARGE_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int func(int n){
    return n * (n + 1) / 2;
}
int val(int a, int b){
    return func(b) - func(a - 1);
}

void sukuna(){
    int n, k;
    cin >> n >> k;
    n--;
    int sum = val(k, n + k);
    
    int lo = k, hi = k + n, mid;

    while(hi > lo){
        mid = (lo + hi) / 2;
        int x = val(k, mid);
        int y = sum - x;
        if(x < y){
            lo = mid + 1;
        }else{
            hi = mid;
        }
    }
    lo--;
    int x = val(k, lo);
    int y = sum - x;
    int ans = abs(y - x);
    x = val(k, lo + 1);
    y = sum - x;
    ans = min(ans, abs(y - x));

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/E_Klee_s_SUPER_DUPER_LARGE_Array.java"

"/home/raihan/Desktop/Codeforces/Matrix_Exploration.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 1e3 + 10;

int n, m, k;
vector<string> grid(N);
int dp[N][N];


int32_t main(){
    
    cin >> n >> m >> k;
    for(int i = 0; i < n; i++)cin >> grid[i];
    
    for(int i = 0; i < k; i++){
        int l, r;
        cin >> l >> r;
        grid[--l][--r] = '*';
    }

    for(int i = 0; i < n; i++)cout << grid[i] << endl;

}

"/home/raihan/Desktop/Codeforces/maximum sum.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

ll powermod(ll x, ll y, ll p){ll res = 1;x = x % p;if (x == 0) return 0;while (y > 0){if (y & 1)res = (res*x) % p;y = y>>1;x = (x*x) % p;}return res;}

const ll mod=1e9+7;

int solve()
{
    ll n,k,x,sum=0,m=0,nsum=0;
    cin>>n>>k;
    vector<ll>v,s;
    forn(i,n)
    {
        cin>>x;
        m+=x;
        if(x>=0)sum+=x;
        else
        {
            v.pb(sum);
            sum=0;
        }

        if(x<0)nsum+=x;
        else
        {
            v.pb(nsum);
            nsum=0;
        }
        if(i==(n-1) && x>=0)v.pb(sum);
        else if(i==(n-1) && x<0)v.pb(x);
    }
    sum=0;
    forn(i,v.size())
    {
        // cout<<v[i]<<" "<<sum;nl;
        if(v[i]>=0)sum+=v[i];
        if(v[i]<0 && -v[i+1]<=v[i])sum+=v[i];
        else if(v[i]<0 && -v[i+1]>v[i])
        {
            s.pb(sum);
            sum=0;
        }
        
    }
    s.pb(sum);
    sort(s.begin(),s.end());
    ll mx=s[s.size()-1];

    // fsum=((fsum-mx)%N+N)%N;
    // ll m=pow(2,k);

    // cout<<(m%N)+((((m%N)%N*fsum%N)%N)%N)%N; 
    // nl;

    m=((m-mx)%mod+mod)%mod;
	mx%=mod;
	cout<<(m%mod+((powermod(2,k,mod)%mod*mx%mod)%mod)%mod)%mod<<endl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/Maximum_Subarray_Sum.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int32_t main(){
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    int sum = 0, ans = 0;
    int neg_cnt = 0;
    forn(i,n){
        sum += v[i];
        if(v[i] < 0)neg_cnt++;
        if(sum < 0)sum = 0;
        ans = max(ans, sum);
    }
    if(neg_cnt == n)cout << *max_element(all(v)) << endl;
    else cout << ans << endl;
    
}

"/home/raihan/Desktop/Codeforces/Message_Route.cpp"
#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

void find_route(int n, vector<vector<int>>& adj) {
    vector<int> dist(n + 1, -1);
    vector<int> parent(n + 1, -1);
    queue<int> q;

    dist[1] = 0;
    q.push(1);

    while (!q.empty()) {
        int node = q.front();
        q.pop();

        for (int neighbor : adj[node]) {
            if (dist[neighbor] == -1) {
                dist[neighbor] = dist[node] + 1;
                parent[neighbor] = node;
                q.push(neighbor);
            }
        }
    }

    if (dist[n] == -1) {
        cout << "IMPOSSIBLE" << endl;
    } else {
        cout << dist[n] + 1 << endl;
        vector<int> path;
        for (int v = n; v != -1; v = parent[v]) {
            path.push_back(v);
        }
        reverse(path.begin(), path.end());
        for (int v : path) {
            cout << v << " ";
        }
        cout << endl;
    }
}

int main() {
    int n, m;
    cin >> n >> m;

    vector<vector<int>> adj(n + 1);
    for (int i = 0; i < m; ++i) {
        int a, b;
        cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    find_route(n, adj);

    return 0;
}

"/home/raihan/Desktop/Codeforces/Micro_and_Prime_Prime.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e6 + 1000;


vector<int> pf(N, 1), pff(N);
vector<bool> isPrime(N, 1);


void seive(){
    isPrime[1] = isPrime[1] = 0;
    pf[0] = pf[1] = 0;


    for(int i = 2; i < N; i++){
        if(isPrime[i]){
            for(int j = i + i; j < N; j += i){
                isPrime[j] = false;
                pf[j] = 0;
            }
        }
    }

    for(int i = 1; i < N; i++)pf[i] += pf[i - 1];

    for(int i = 2; i < N; i++){
        if(isPrime[pf[i]]){
            pff[i] = 1;
        }
    }

    for(int i = 1; i < N; i++)pff[i] += pff[i - 1];
    
    // for(int i = 1; i <= 10; i++){
    //     cout << pff[i] <<" ";
    // }
}

void sukuna(int test){
    int l, r;
    cin >> l >> r;
    cout << pff[r] - pff[l - 1] << endl;
    
}

int32_t main(){
    fast_in_out;
    
    seive();

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/Missing_Coin_Sum.cpp"

"/home/raihan/Desktop/Codeforces/moc b.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define pb push_back
#define pp pop_back
#define nl cout<<"\n"
#define sz(x) ((ll)(x).size())
 
 
int main()
{
    int test; cin>>test;
    for(int j=1;j<=test;j++)
    {
        int n;
        cin>>n;
        int arr[n],i;
        vector<int>a;

        ll sum=0;

        for(i=0;i<n;i++)
        {
            cin>>arr[i];
            if(arr[i]<0)a.pb(i);
            else sum=sum+arr[i];
        }

        int p=0,min=0;
        for(i=0;i<a.size();i++)
        {
            min=min+(a[i]-p);
            p++;
        }
        printf("Case %d: %lld %d\n",j,sum,min);


    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/M_Mirror_Maze.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<""<<a.second<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;
vector<string> v;
map<int, pr> moves;

bool isValid(int x, int y){
    return x >= 0 and x < n and y >= 0 and y < m;
}

int nextDir(int c, int dir){
    if(c == 1){
        if(dir == 1)return 4;
        if(dir == 2)return 3;
        if(dir == 3)return 2;
        if(dir == 4)return 1;

    }else if(c == 2){
        if(dir == 1)return 3;
        if(dir == 2)return 4;
        if(dir == 3)return 1;
        if(dir == 4)return 2;
    }
    return 0;
}

int recur(int x, int y, int dir){

    if(!isValid(x, y))return 0;

    if(v[x][y] == '.'){
        pr mv = moves[dir];
        return recur(x + mv.first, y + mv.second, dir);
    }

    if(v[x][y] == '/'){
        int nxt = nextDir(1, dir);
        pr mv = moves[nxt];

        // cout << x <<" " << y <<"  " << nxt << endl;
        // cout << mv.first <<" " << mv.second << endl;

        return 1 + recur(x + mv.first, y + mv.second, nxt);
    }else{
        int nxt = nextDir(2, dir);
        pr mv = moves[nxt];

        return 1 + recur(x + mv.first, y + mv.second, nxt);
    }
    return 0;
}


void sukuna(int test){
    cin >> n >> m;
    int slash = 0;
    forn(i,n){
        string str;
        cin >> str;
        v.push_back(str);
        for(auto i : str){
            if(i != '.')slash++;
        }
    }
    vector<pair<char, int>> ans;

    int sum = 0;

    for(int i = 0; i < m; i++){
        if(recur(0, i, 1) >= slash){
            sum++;
            ans.push_back({'N', i + 1});
        }
        if(recur(n - 1, i, 2) >= slash){
            sum++;
            ans.push_back({'S', i + 1});
        }
    }

    for(int i = 0; i < n; i++){
        if(recur(i, 0, 3) >= slash){
            sum++;
            ans.push_back({'W', i + 1});
        }
        if(recur(i, m - 1, 4) >= slash){
            sum++;
            ans.push_back({'E', i + 1});
        }
    }

    cout << ans.size() << endl;
    mprint(ans);    
}

int32_t main(){
    fast_in_out;

    moves[1] = {1, 0}; //N
    moves[2] = {-1, 0}; //S
    moves[3] = {0, 1}; //W
    moves[4] = {0, -1}; //E

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/M_Selection_Sort.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

#define sufPref                 ans = min(ans, suf * suf + pref * pref);


void sukuna(int test){
    lin(n);
    vin v(n), arr;
    multiset<int> s, tmp;
    forn(i,n)cin >> v[i];  arr = v;
    sort(all(arr));

    int ans = n * n, sz = 0;
    int i = 0, j = n - 1;
    while(arr[i] == v[i] and i < n)i++;
    ans = min(ans, (n - i) * (n - i));
    

    while(arr[j] == v[j] and j >= 0)j--;
    ans = min(ans, (j + 1) * (j + 1));


    sz = 0; s.clear(); tmp.clear();
    forn(i,n)s.insert(v[i]);

    for(int i = n - 1; i >= 0; i--){
        tmp.insert(v[i]); sz++;
        
        while(!s.empty() and !tmp.empty() and (*s.rbegin() == *tmp.rbegin())){
            s.erase(--s.end());
            tmp.erase(--tmp.end());
            sz--;
        }

        int suf = n - i;
        int pref = i + sz;
        ans = min(ans, suf * suf + pref * pref);

        if(sz == 0){
            bool flg = false;
            int suf = n - i;
            int j = i - 1;
            for(; j >= 0; j--){
                if(arr[j] != v[j])break;
                flg = true;
            }
            int pref = j + 1;
            if(flg){sufPref; i = j + 1; }
        }
    }


    sz = 0; s.clear(); tmp.clear();
    forn(i,n)s.insert(v[i]);

    for(int i = 0; i < n; i++){
        tmp.insert(v[i]); sz++;

         while(!s.empty() and !tmp.empty() and (*s.begin() == *tmp.begin())){
            s.erase(s.begin());
            tmp.erase(tmp.begin());
            sz--;
        }

        int pref = i + 1;
        int suf = n - i - 1 + sz;
        sufPref;
        // cout << pref <<" " << suf << endl;

        if(sz == 0){
            bool flg = false;

            pref = i + 1;
            int j = i + 1;
            for(; j < n; j++){
                if(arr[j] != v[j])break;
                flg = true;
            }
            int suf = n - j;
            // cout << i + 1 <<" " << j + 1 << endl;
            // cout << pref <<" " << suf << endl;
            if(flg){sufPref; i = j - 1; }
        }
    }


     sz = 0; s.clear(); tmp.clear();
    forn(i,n)s.insert(v[i]);

    for(int i = n - 1; i >= 0; i--){
        tmp.insert(v[i]); sz++;
        
        while(!s.empty() and !tmp.empty() and (*s.rbegin() == *tmp.rbegin())){
            s.erase(--s.end());
            tmp.erase(--tmp.end());
            sz--;
        }

        int suf = n - i;
        int pref = i + sz;
        ans = min(ans, suf * suf + pref * pref);

        // if(sz == 0){
        //     bool flg = false;
        //     int suf = n - i;
        //     int j = i - 1;
        //     for(; j >= 0; j--){
        //         if(arr[j] != v[j])break;
        //         flg = true;
        //     }
        //     int pref = j + 1;
        //     if(flg){sufPref; i = j; }
        // }
    }
    

    sz = 0; s.clear(); tmp.clear();
    forn(i,n)s.insert(v[i]);

    for(int i = 0; i < n; i++){
        tmp.insert(v[i]); sz++;

         while(!s.empty() and !tmp.empty() and (*s.begin() == *tmp.begin())){
            s.erase(s.begin());
            tmp.erase(tmp.begin());
            sz--;
        }

        int pref = i + 1;
        int suf = n - i - 1 + sz;
        sufPref;
        // cout << pref <<" " << suf << endl;

        // if(sz == 0){
        //     bool flg = false;

        //     pref = i + 1;
        //     int j = i + 1;
        //     for(; j < n; j++){
        //         if(arr[j] != v[j])break;
        //         flg = true;
        //     }
        //     int suf = n - j;
        //     // cout << i + 1 <<" " << j + 1 << endl;
        //     // cout << pref <<" " << suf << endl;
        //     if(flg){sufPref; i = j; }
        // }
    }
    
    
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/Nearest_Smaller_Values.cpp"

"/home/raihan/Desktop/Codeforces/NGE.cpp"

"/home/raihan/Desktop/Codeforces/note.txt"
Let there are a class A that contains a method a(). 
B, C are 2 subclass of A and b has a method b() and c has a method c()
now is it possible to make a class D that contains all 3 methods a(), b(), c() with inheritance? How?

"/home/raihan/Desktop/Codeforces/N_Fixing_the_Expression.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str;
    cin >> str;
    
    if(str[0] == str[2])str[1] = '=';
    else if(str[0] < str[2])str[1] = '<';
    else str[1] = '>';

    cout << str << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/output.txt"
0

"/home/raihan/Desktop/Codeforces/Range_Update_Queries.cpp"

"/home/raihan/Desktop/Codeforces/rudolf B.cpp"

"/home/raihan/Desktop/Codeforces/Satyam_and_Counting.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    map<int, int> mp;
    forn(i,n){
        int a, b;
        cin >> a >> b;
        mp[a]++;
    }
    int cnt = 0;
    for(auto i : mp){
        if(i.second == 2)cnt++;
    }
    mprint(mp);

    cout<<cnt *(n- 1)<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Picky_Eater.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    int x, y;
    cin >> x >> y;
    cout << (x >= y) << endl;
}

"/home/raihan/Desktop/Codeforces/A_PizzaForces.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    n = (n + 1) / 2;
    if(n < 3)cout<<15<<endl;
    else cout<<n * 5<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Plus_or_Minus.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int a,b,c;
        cin>>a>>b>>c;
        if((a+b)==c)cout<<"+\n";
        else cout<<"-\n";
    }
}

"/home/raihan/Desktop/Codeforces/A_Postcards_and_photos.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;


int32_t main(){
    string str;
    cin >> str;
    int ans = 1, cnt = 1;
    for(int i = 1; i < str.size(); i++){
        if(cnt == 5){
            ans++;
            cnt = 1;
            continue;
        }
        if(str[i] == str[i - 1]){
            cnt++;
            continue;
        }
        ans++;
        cnt = 1;
    }

    cout << ans << endl;
}

"/home/raihan/Desktop/Codeforces/A_Preparing_for_the_Olympiad.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin a(n), b(n + 1);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    int m = 0, s = 0;
    for(int i = 0; i < n; i++){
        if(a[i] > b[i + 1]){
            m += a[i];
            s += b[i + 1];
        }
    }
    cout << m - s << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Primary_Task.cpp"
#include<bits/stdc++.h>
using namespace std;
#define print(arr)         for(auto x: arr)cout<<x<<' '; cout<<endl;
#define int        long long
const int M = 1e9 + 7;

void solve(){
    string str;
    cin >> str;
    if(str[0] == '1' && str[1] == 48){
        if(str[2] > '1')cout<<"YES"<<endl;
        else if(str[2] == '1' && str.size() > 3)cout<<"YES"<<endl;
        else cout<<"NO"<<endl;;
        return;
    }
    cout<<"NO"<<endl;

}


int32_t main(){
    int t; cin >>t;
    while(t--)solve();
}

"/home/raihan/Desktop/Codeforces/A_Profitable_Interest_Rate.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int a, b;
    cin >> a >> b;

    int lo = 0, hi = a, mid;

    while(hi > lo){
        int mid = (lo + hi) / 2;

        int x = b - (2 * mid);
        int y = a - mid;

        if(x > y){
            lo = mid +  1;
        }else{
            hi = mid;
        }
    }

    cout << a - lo << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_P_1.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb()               push_back()
#define pp                 pop_back()
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())

int solve()
{
    int n,m,k;
    cin>>n>>m>>k;
    int a[n],b[m];
    forn(i,n)cin>>a[i];
    forn(i,m)cin>>b[i];
    int i,j,cnt=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(a[i]+b[j]<=k)cnt++;
        }
    }
    cout<<cnt;nl;
    
    return 0;
}

int main()
{
    int test;	cin>>test;
    while(test--)solve();
    return 0;
}


"/home/raihan/Desktop/Codeforces/A_Question_Marks.cpp"

"/home/raihan/Desktop/Codeforces/A_Quintomania.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    for(int i = 1; i < n; i++){
        if(abs(v[i] - v[i - 1]) != 5 and abs(v[i] - v[i - 1]) != 7){no; return;}
    }
    yes;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Rating_Increase.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool chk(string a, string b){
    if(a.size() != b.size())return b.size() > a.size();
    for(int i = 0; i < a.size(); i++){
        if(a[i] == b[i])continue;
        return a[i] < b[i];
    }
    return false;
}

void sukuna(){
    string str;
    cin >> str;
    string a, b;
    a.push_back(str[0]);
    for(int i = 1; i < str.size(); i++){
        if(str[i] == '0')a.push_back(str[i]);
        else{
            for(; i < str.size(); i++)
            b.push_back(str[i]);
        }
    }

    if(chk(a, b))cout << a <<" " << b << endl;
    else cout << -1 << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Recovering_a_Small_String.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n;
        cin>>n;
        int x=n-26-26;
        if(n<=27)printf("%c%c%c",'a','a',96+n-2);
        else if(n<=53)printf("%c%c%c",'a',96+n-1-26,'z');
        else if(n<=78)printf("%c%c%c",96+x,96+n-x-26,'z');
        nl;
        
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Rectangle_Arrangement.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int mxx = 0, mxy = 0;
    lin(n);
    forn(i,n){
        int x, y;
        cin >> x >> y;
        mxx = max(mxx, x);
        mxy = max(y, mxy);
    }

    int ans = 2 * (mxx + mxy);
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Rectangle_Cutting.cpp"
//Nothing to say
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int a,b;
        cin>>a>>b;
        if(b>a)swap(a,b);
        if(a%2==0 && b%2==0)yes;
        else if(a%2==1 && b%2==1)no;
        else if(a%2==0 && a/2==b)no;
        else yes;
        

    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Ribbon_on_the_Christmas_Present.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n;
int op(vin &v){

    int ans = 0;
    for(int i = 0; i < n;){
        int mn = INF, j = i;
        while(v[j] != 0){
            mn = min(mn, v[j]);
            j++;
        }
        if(mn == INF){i++; continue;}
        ans++;
        for(; i < j; i++)v[i] -= mn;
        while(v[i] == 0)i++;
    }
    return ans;
}

void sukuna(int test){
    cin >> n;
    vin v(n + 1);
    forn(i,n)cin >> v[i];
    
    int ans = 0;
    while(accumulate(all(v), 0ll) > 0){
        ans += op(v);
    }

    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1; //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Ring_road.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<pr> graph[N];
vin vis(N);
int pos, neg;

void dfs(int vertex = 1, int par = 0){
    
    vis[vertex] = true;
    for(auto [child_v, wt] : graph[vertex]){
        if(vis[child_v] && child_v == par)continue;
        if(vis[child_v] && child_v != 1)continue;

        if(wt > 0)pos += wt;
        else neg += wt;
        dfs(child_v, vertex);
    }
}

int32_t main(){
    fast_in_out;
    lin(n);
    int sum = 0;
    forn(i,n){
        int x, y, z;
        cin >> x >> y >> z;
        sum += z;
        graph[x].push_back({y, z});
        graph[y].push_back({x, -z});
    }
    
    dfs();
    cout << min(pos, sum - pos) << endl;
}

"/home/raihan/Desktop/Codeforces/A_Robin_Helps.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, k;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin  >> v[i];
    int gold = 0, ans = 0;

    for(int i = 0; i < n; i++){
        if(v[i] >= k)gold+=v[i];
        if(v[i]== 0){
            if(gold > 0){
                gold--;
                ans++;
            }
        }
    }
    

    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Number_into_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    int x = n;
    map<int, int> mp;
    vin v;
    for(int i = 2; i * i <= n && n > 1; i++){
        if(n % i == 0){
            while(n%i == 0){
                n /= i;
                v.pb(i);
                mp[i]++;
            }
        }
    }mp[n]++;

    int mx = 0, num = 1;
    for(auto a : mp){
        if(a.second > mx){
            mx = a.second;
            num = a.first;
        }
    }
    if(mx < 2){
        cout<<1<<endl;
        cout<<x<<endl;
        return;
    }

    cout<<mx<<endl;
    for(int i = 1; i < mx; i++){
        cout<<num<<" ";
    }
    int last = num;
    for(auto a : mp){
        if(a.first == num)continue;
        for(int i = 0; i < a.second; i++){
            last *= a.first;
        } 
    }
    cout<<last<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Pair_of_Topics.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n);
    vin a(n), b(n), d(n);
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    forn(i,n){
        d[i] = b[i] - a[i];
    }

    sort(all(d));
    
    int ans = 0;
    forn(i,n){
        int ind = lower_bound(d.begin() + i + 1, d.end(), -d[i]) - d.begin();
        ans += ind - i - 1;
    }
    cout<<ans<<endl;
    
    
    
}

"/home/raihan/Desktop/Codeforces/D_Penchick_and_Desert_Rabbit.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(int i = 1; i <= n; i++)cout<< arr[i] <<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n + 1), mx(n + 1), ans(n + 1);

    Forn(i,n){
        cin >> v[i];
        mx[i] = max(mx[i - 1], v[i]);
        ans[i] = mx[i];
    }

    pr carry = {v[n], mx[n]};
    
    for(int i = n; i > 0; i--){
        if(mx[i] > carry.first){
            ans[i] = carry.second;
            carry.first = min(carry.first, v[i]);
        }
        else{
            carry = {v[i], mx[i]};
        }
    }
    print(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Permutation_Transformation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e3 + 100;
int cnt = 0;
vector<vin> graph(N), temp(N);
int vis[N], lev[N], n;

void dfs(int vertex){
    if(vis[vertex])return;
    vis[vertex] = true;
    for(auto child : graph[vertex]){
        lev[child] = lev[vertex] + 1;
        dfs(child);
    }
}

void bfs(int v){
    queue<int> q;
    q.push(v);
    vis[v] = true;

    while(!q.empty()){
        v = q.front();
        q.pop();

        for(auto child : graph[v]){
            if(vis[child])continue;
            vis[child];
            q.push(child);
            lev[child] = lev[v] + 1;
        }
    }
}


void recur(vin v, int par){
    if(v.size() == 0)return;

    int mx = *max_element(all(v));
    graph[par].push_back(mx);
    vin f, l;
    int i = 0, n = v.size();;
    bool flg = 0;
    for(; i < n; i++){
        if(v[i] == mx){flg = 1; continue;}
        if(!flg)f.push_back(v[i]);
        else l.push_back(v[i]);
    }

    recur(f, mx); recur(l, mx);
}

void reset(){
    graph = temp;
    for(int i = 1; i <= n; i++){
        lev[i] = 0;
        vis[i] = 0;
    }
}


void sukuna(){
    cin >> n;
    vin v(n);
    forn(i,n)cin >> v[i];   
    reset();
    cnt = 0;
    recur(v, 0);
    // bfs(n);
    dfs(n);
    for(auto i : v){
        cout << lev[i] <<" ";
    }nl;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Plus_Minus_Permutation.c"
#include<stdio.h>
#define ll long

int gcd(int a, int b){
    if(a % b == 0)return b;
    else return gcd(b, a%b);
}

void gojoSir(){
    ll n, x, y;
    scanf("%lld %ld %ld", &n, &x, &y);
    ll lcm = (x * y) / gcd(x, y);
    ll res = n / lcm;
    x = n / x; y = n / y;
    x -= res; y -= res;

    ll nSum = n * (n + 1) / 2; n-=x;
    ll xSum = n * (n + 1) / 2;
    ll ySum = y * (y + 1) / 2;
    
    nSum -= xSum;
    nSum -= ySum;

    printf("%ld\n", nSum);   

}

int main(){
    int test;
    scanf("%d", &test);
    while(test--)gojoSir();
}

"/home/raihan/Desktop/Codeforces/D_Plus_Minus_Permutation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, x, y;
    cin >> n >> x >> y;

    int lcm = (x * y) / __gcd(x, y);
    int res = n / lcm;
    x = n / x; y = n / y;    
    x -= res; y -= res;
    
    int nsum = n * (n + 1) / 2; n -= x;
    int xsum = n * (n + 1) / 2;
    int ysum = y * (y + 1) / 2;

    xsum = nsum - xsum;
    cout<<xsum - ysum<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Polycarp_and_Div_3.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

bool func(vin &v){
    int num = 0, p = 1;
    
    for(int i = v.size() - 1; i >= 0; i--){
        num += v[i];
        if(num % 3 == 0)return true;
        num *= 10;
    }
    return false;
}

void sukuna(int test){
    string str;
    cin >> str;
    for(auto &i : str)i -= '0';

    int ans = 0;

    vector<int> v;
    for(int i = str.size() - 1, dig = 0; i >= 0; i--){
        v.push_back(str[i]);
        if(func(v)){
            v.clear();
            ans++;
        }
    }


    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Prefix_Permutation_Sums.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, m;
    cin >> n;
    vin v(n - 1);
    forn(i,n - 1){
        cin >> v[i];
    }
    m = n * ( n + 1) / 2;
    n--;
    if(v.back() > m){
        no;
        return;
    }
    if(v.back() < m){
        set<int> s;
        s.insert(m - v.back());
        for(int i = n - 1; i >= 1; i--){
            s.insert(v[i] - v[i - 1]);
        }
        s.insert(v.front());
        if(s.size() == n + 1)yes;
        else no;
        return;
    }

    map<int, int> mp;
    for(int i = n - 1; i > 0; i--){
        mp[v[i] -v[i - 1]]++;
    }
    mp[v.front()]++;


    vin mis;
    int res = 0;

    for(auto a : mp)if(a.first > n + 1){
        res += a.first;
    }
    for(int i = 1; i <= n + 1; i++){
        if(mp[i] == 0){
            mis.push_back(i);
        }
        if(res == 0)
        if(mp[i] > 1)res += i * (mp[i] - 1);
    }

    if(accumulate(all(mis), 0ll) == res)yes;
    else no;

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_PriceFixed.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vector<pr> v(n);
    forn(i,n)cin >> v[i].first >> v[i].second;

    sort(all(v), [](pr &a, pr &b){
        return b.second > a.second;
    });
    int ans = 0, cnt = 0;
    for(int i = 0, j = n - 1; i <= j;){
        if(v[i].second <= cnt){
            ans += v[i].first;
            cnt += v[i].first;
            v[i].first = 0;
            i++;
            continue;
        }

        while(cnt < v[i].second and i <= j){
            if(cnt + v[j].first < v[i].second){
                cnt += v[j].first;
                ans += (v[j].first * 2);
                j--;
            }else{
                ans += (v[i].second - cnt) * 2;
                v[j].first -= (v[i].second - cnt);
                cnt = v[i].second;
                break;
            }
        }
    }
    cout << ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test = 1; //  cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Problem_about_GCD.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;


struct grp{
    int dif, l, r;
    void display(){
        cout << l <<" " << r << endl;
    }
};

void sukuna(int test){
    int l, r, g;
    cin >> l >> r >> g;

    if(l % g)l += (g - (l % g));
    r -= (r % g);

    if(l > r){
        cout << -1 <<" " << -1 << endl;
        return;
    }
    
    if(gcd(l, r) == g){
        cout << l <<" " << r << endl;
        return;
    }

    vector<grp> ans;
    int limit = 10;

    for(int i = l, cnt1 = 0; i < r && cnt1 < 10; i += g, cnt1++){
        bool flg = false;
        for(int j = r; j > l && flg == false; j -= g){
            if(gcd(i,j) == g){
                flg = true;
                ans.push_back({j - i, i, j});
            }
        }
    }
    if(ans.size() == 0){
        cout << -1 <<" " << -1 << endl;
        return;    
    }

    sort(all(ans), [](grp a, grp b){
        if(a.dif > b.dif)return true;
        if(a.dif == b.dif){
            if(a.l < b.l)return true;
            return a.r < b.r;
        }
        return false;
    });

    ans.front().display();

}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Product_of_Binary_Decimals.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int kk(ll n)
{
    while(n>0)
    {
        if(n%10>1){return 1;}
        n/=10;
    }
    return 0;
}

int solve()
{
    ll n,m;
    cin>>n;
    int v[]={11,10,111,101,1101,1011,1001};
    if(kk(n)==0){yes;return 0;}
    if(n%10>1){no; return 0;}
    while(n>0)
    {
         m=n;
        forn(i,7)
        {
            if(n%v[i]==0){n/=v[i];break;}
        }
        if(n<=1)break;
        if(m==n){no;return 0;}
    }yes;


    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_QED_s_Favorite_Permutation.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, q;
    string str;
    cin >> n >> q;
    vin v; v.pb(0);
    Forn(i,n){
        lin(x);
        v.pb(x);
    }
    cin >> str;
    int mx = 0;
    Forn(i,n){
        mx = max(mx, v[i]);
        v[i] = mx;
    }
    str = "*" + str;
    set<int> s;
    for(int i = 1; i < n; i++){
        if(str[i] == 'L' && str[i + 1] == 'R'){
            if(v[i] > i){
                s.insert(i);
            }
        }
    }

    int cnt = s.size();
    while(q--){
        lin(x);

        if(str[x] == 'R' && str[x + 1] == 'R'){
            if(v[x] > x){
                s.insert(x);
                cnt++;
            }
        }

        if(str[x] == 'L' and str[x - 1] == 'L'){
            if(v[x - 1] > x - 1){
                s.insert(x - 1);
                cnt++;
            }
        }

        if(str[x] == 'L' && str[x + 1] == 'R'){
            if(s.count(x)){
                s.erase(x);
                cnt--;
            }
        }
        if(str[x - 1] == 'L' && str[x] == 'R'){
            if(s.count(x - 1)){
                s.erase(x - 1);
                cnt--;
            }
        }
        if(str[x] == 'L')str[x] = 'R';
        else str[x] = 'L';
        
        if(cnt == 0)yes;
        else no;
    }

    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Recommendations.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)a.display();cout << endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

struct grp{int l, r, ind; void display(){cout << l <<" " << r << endl;}};

void sukuna(int test){
    lin(n);
    vector<grp> v(n);

    forn(i,n)cin >> v[i].l >> v[i].r, v[i].ind = i;

    sort(all(v), [](grp a, grp b){
        if(a.l < b.l)return true;
        if(a.l == b.l)return a.r < b.r;
        return false;        
    });

    mprint(v);
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Refined_Product_Optimality.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 998244353;
const int N = 2e5 + 100;

using u128 = __uint128_t;

int binExp(int a, int b, int M = 998244353){
    int ans = 1;    a %= M;
    
    while(b > 0){
        if(b & 1)ans = ((u128)(ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((u128)(a % M) * (a % M)) % M;
    }
    return ans;
}

int mmiOfX(int b){ return binExp(b, M - 2); }


void sukuna(int test){
    int n, q;
    cin >> n >> q;
    vin a(n), b(n), u, v;
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];
    u = a; v = b;
    sort(all(u)); sort(all(v));
    
    int ans = 1;
    for(int i = 0; i < n; i++){
        ans = ans * min(u[i], v[i]) % M;
    }
    cout << ans << " ";

    while(q--){
        int typ, pos;
        cin >> typ >> pos; --pos;

        if(typ == 1){
            int x = a[pos]++;
            int lb = upper_bound(all(u), x) - u.begin(); lb--;

            int sub = min(u[lb], v[lb]);
            ans = ans * mmiOfX(sub) % M;
            u[lb]++;    
            sub = min(u[lb], v[lb]);        
            ans = ans * sub % M;
            cout << ans <<" ";
        }else{
            int x = b[pos]++;
            int lb = upper_bound(all(v), x) - v.begin(); lb--;

            int sub = min(u[lb], v[lb]);
            ans = ans * mmiOfX(sub) % M;
            v[lb]++;    
            sub = min(u[lb], v[lb]);        
            ans = ans * sub % M;
            cout << ans <<" ";  
        }
    }
    nl; 
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Young_Explorers.java"
import java.util.*;

public class B_Young_Explorers {
    
    static Scanner in = new Scanner(System.in);

    static void solve(){
        int n = in.nextInt();
        int arr[] = new int[n];
        for(int i = 0; i < n; i++){
            arr[i] = in.nextInt();
        }
        Arrays.sort(arr);

        int ans = 0;
        for(int i = 0, j; i < n; i++){
            for(j = i; j < n; j++){
                if(j - i + 1 == arr[j]){
                    ans++;
                    break;
                }
            }
            i = j;
        }
        System.out.println(ans);
    }

    public static void main(String[] args) {
        int test = in.nextInt();
        while (test > 0) {
            test--;
            solve();            
        }
    }
}

"/home/raihan/Desktop/Codeforces/C_2_Magnitude_Hard_Version.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

vin a, b;

void dp(vin &v, int n){
    if(n == -1){
        return;
    }

    if(a[n + 1] == 0){
        dp(v, n - 1);
        int x = a[n] + v[n];
        int y = b[n] + v[n];

        a[n + 1] = max(x, abs(y));
        b[n + 1] = min(x,y);
    }
    
}

void solve()
{
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];

    //Change Global Variable
    a.assign(n+1, 0); b = a;

    dp(v, n - 1);
    cout<<max(a[n], abs(b[n]))<<endl;
}

int32_t main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Assembly_via_Remainders.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll n,sum=0;
    cin>>n;
    vector<ll>v(n-1),a;
    forn(i,n-1)
    {
        cin>>v[i];
        sum+=v[i];
    }
    sum=1e9;

    a.pb(v[n-2]); a.pb(sum);
    for(int i=n-3,j=1;i>=0;i--,j++)
    {
        a.pb(a[j]-v[i]);
    }
    reverse(all(a));
    print(a);
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_C.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str, temp;
    cin >> str;
    int n = str.size();
    
    for(int i = 0; i < n;){
        temp.push_back(str[i]);
        while(str[i] == temp.back() && i < n)i++;
    }
    str = temp;
    if(str.size() == 1){
        cout << str << endl;
        return;
    }
    if(str.front() == '1' and str.back() == '0'){
        cout << "10" << endl;
        return;
    }
    if(str.front() == '0' and str.back() == '1'){
        cout << "01" << endl;
        return;
    }
    if(str.front() == '1' and str.back() == '1'){
        cout << "101" << endl;
        return;
    }
    if(str.front() == '0' and str.back() == '0'){
        cout << "010" << endl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Corners.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    int n,m,i,j,x,ans=0;
    cin>>n>>m;
    string str[n];

    forn(i,n)cin>>str[i];
    // forn(i,n)cout<<str[i]<<endl;nl;

    // int c=str[0][0]+str[0][1]+str[1][0]+str[1][1]-192;
    // // cout<<c;nl;
    // if(c>2)ans=2;
    // else if(c==1)ans++;
    // for(i=2;i<m;i++)
    // {
    //     if((str[0][i]-48)&(str[1][i]-48)==1)ans+=2;
    //     else if((str[0][i]-48)|(str[1][i]-48)==1)ans++;
    // }
    // cout<<ans;nl;
    // for(i=2;i<n;i++)
    // {
    //     for(j=0;j<m;j++)
    //     {
    //         if(str[i][j]==49)ans++;
    //     }
    // }    
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    cout<<"8\n9\n0\n2\n";

    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Dora_and_C.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, a, b;
    cin >> n >> a >> b;
    int g = __gcd(a, b);

    vin v(n);
    forn(i,n){
        cin >> v[i];
        v[i] %= g;
    }
    sort(all(v));
    // print(v);

    int ans = v[n - 1] - v[0];

    // cout<<ans<<endl;

    for(int i = 0; i < n - 1; i++){
        ans = min(ans, v[i] + g - v[i + 1]);
    }
    cout<<ans<<endl;    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Find_B.cpp"
//wtf
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int n, q;
    cin >> n >> q;
    vin v(n), pf(n + 2), one(n + 2);

    forn(i,n){
        cin >> v[i];
        pf[i + 1] = pf[i] + v[i];
        if(v[i] == 1)one[i + 1] = one[i] + 1;
        else one[i + 1] = one[i];
    }


    while(q--){
        int left, right;
        cin >> left >> right;

        if(left == right){
            no;
            continue;
        }


        int sum = pf[right] - pf[left - 1];
        int one_cnt = one[right] - one[left - 1];
        sum -= (right -left + 1);

        if(one_cnt == 0){
            yes;
            continue;
        }

        if(sum >= one_cnt)yes;
        else no;

    }
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Increasing_Sequence_with_Fixed_OR.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

bitset<64> fnd(bitset<64> v, bitset<64> b){
    bitset<64> a;

    int acnt = 0, bcnt = 0;
    for(int i = 63; i >= 0; i--){

        if(b[i])bcnt++;

        if(v[i]){
            if(b[i] == 0)a[i] = 1, acnt++;
            else{
                if(acnt < bcnt)a[i] = 1, acnt++;
            }
        }
    }
    return a;
}


void sukuna(){
    lin(n);
    bitset<64> v(n), a, b;

    if(v.count() == 1){
        cout<<1<<endl;
        cout<<n<<endl;
        return;
    }

    set<int> s;

    int cnt = 0;
    for(int i = 63; i >= 0; i--){
        if(v[i]){
            cnt++;
            if(cnt & 1){
                b[i] = 1;
                a[i] = 0;
            }
            else{
                a[i] = 1;
                b[i] = 0;
            }
        }
    }

    s.insert(a.to_ullong());
    s.insert(b.to_ullong());
    s.insert(n);

    while(fnd(v, b).to_ullong() != n)
    {
        b = fnd(v, b);
        s.insert(b.to_ullong());
    }
    
    cout<<s.size()<<endl;
    print(s);   
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_LR_remainders.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int binExp(int a, int b){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = (ans * a) % M;
        b >>= 1;
        a = (a * a) % M;
    }
    return ans;
}

int mmi(int a, int b){
    int mmi_of_b = binExp(b, M - 2);
    return (a % M * mmi_of_b % M) % M;
}

void sukuna(){
    int n, m;
    cin >> n >> m;
    vin v(n);
    string str;
    int sum = 1;
    forn(i,n)cin >> v[i], sum = (sum * v[i])%m;
    cin >> str;

    int l = 0, r = n - 1;
    for(int i = 0; i < n; i++){
        cout<<sum % m<<' ';
        sum %= m;
        if(str[i] == 'L'){
            sum = mmi(sum, v[l]);
            l++;
        }else{
            sum = mmi(sum, v[r]);
            r--;
        }
    }nl;
    

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Non_coprime_Split.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 1e7 + 100;
bool isPrime[N];
vin prime;

void seive(){
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            for(int j = i * i; j < N; j += i){
                isPrime[j] = 1;
            }
        }
    }
    for(int i = 2; i < N; i++){
        if(isPrime[i] == 0)prime.push_back(i);
    }
}


void sukuna(){
    int l, r;
    cin >> l >> r;
    if(r < 4){
        cout<<-1<<endl;
        return;
    }
    if(r - l >= 1){
        if(r & 1)r--;
        cout<<r / 2<<' '<<r / 2<<endl;
        return;
    }
    
    if(!isPrime[r]){
        cout<<-1<<endl;
        return;
    }

    for(int i = 0; prime[i] < r; i++){
        int x = prime[i];
        int y = r - x;
        if(__gcd(x,y) > 1){
            cout<<x<<" "<<y<<endl;
            return;
        }
    }
    cout<<-1<<endl;
    
}

int32_t main(){
    fast_in_out;
    seive();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Prepend_and_Append.cpp"
#include<iostream>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,i,j,x,y,cnt=0;
        cin>>n;

        string str;
        cin>>str;
        for(i=0,j=n-1;i<n/2;i++,j--)
        {
            x=str[i]-48; y=str[j]-48;

            if((x^y)==1)cnt+=2;
            else break;
        }
        cout<<(n-cnt)<<endl;
    }
}

"/home/raihan/Desktop/Codeforces/C_Showering.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, s, m;
    cin >> n >> s >> m;
    vector<pr>v(n + 1);
    Forn(i,n)cin >> v[i].first >> v[i].second;
    v.push_back({m, m});

    for(int i = 1; i <= n + 1; i++){
        if(v[i].first - v[i - 1].second >= s){
            yes;
            return;
        }
    }
    no;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Target_Practice.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    string str;
    ll x,y,ans=0;

    for(int i=0;i<10;i++)
    {
        cin>>str;

        for(int j=0;j<10;j++)
        {
            if(str[j]=='X')
            {
                if(i>4)x=9-i;
                else x=i;
                if(j>4)y=9-j;
                else y=j;
                ans+=min(x,y)+1;
            }
        }
    }

    cout<<ans;nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/C_Traffic_Light.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n; char c;
    cin >> n >> c;
    string v;
    cin >> v;
    for(int i = 0; i < n; i++){
        v.push_back(v[i]);
        if(v[i] == 'g')break;
    }
    // cout<<v<<endl;
    int ans = 0;
    n = v.size();
    for(int i = 0; i < n; i++){
        int cnt = 0;
        if(v[i] == c){
            for(; i < n; i++){
                if(v[i] == 'g')break;
                cnt++;
            }
            ans = max(ans, cnt);
        }
    }

    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Colored_Boots.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    string s, t;
    cin >> s >> t;

    vin exs, ext, rems, remt;
    map<char, vin> ss, tt;

    for(int i = 1; i <= n; i++){
        if(s[i - 1] == '?')exs.push_back(i);
        else ss[s[i - 1]].push_back(i);
        
        if(t[i - 1] == '?')ext.push_back(i);
        else tt[t[i - 1]].push_back(i);
    }

    vector<pr> ans;
    
    for(char i = 'a'; i <= 'z'; i++){
        while(!ss[i].empty() and !tt[i].empty()){
            ans.push_back({ss[i].back(), tt[i].back()});
            ss[i].pop_back(); tt[i].pop_back();
        }

        while(!ss[i].empty()){
            rems.push_back(ss[i].back());
            ss[i].pop_back();
        }

        while(!tt[i].empty()){
            remt.push_back(tt[i].back());
            tt[i].pop_back();
        }
    }

    while(!rems.empty() and !ext.empty()){
        ans.push_back({rems.back(), ext.back()});
        rems.pop_back(); ext.pop_back();
    }

    while(!remt.empty() and !exs.empty()){
        ans.push_back({exs.back(), remt.back()});
        exs.pop_back(); remt.pop_back();
    }

    while(!exs.empty() and !ext.empty()){
        ans.push_back({exs.back(), ext.back()});
        exs.pop_back(); ext.pop_back();
    }

    cout << ans.size() << endl;
    mprint(ans);    
}

int32_t main(){
    fast_in_out;

    int test = 1;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Colored_Portals.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<string>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s;i>0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define sprint(bgr)        forn(i,10)cout<<bgr[i]<<" ";nl;




#define printall           print(br); print(bg); print(by); print(gr);  print(gy); print(ry);
#define cond(str, bg)      Forn(i,n){if(v[i] == str){ bg.pb(i);}else bg.pb(bg.back());}
#define condall            cond("BG", bg);  cond("BR", br); cond("BY", by); cond("GR", gr); cond("GY", gy); cond("RY", ry);

#define rcond(str, bgr)    rforn(i, n){if(v[i] == str)bgr[i] = i;else bgr[i] = bgr[i - 1];}
#define rcondall           rcond("BG", bgr);  rcond("BR", brr); rcond("BY", byr); rcond("GR", grr); rcond("GY", gyr); rcond("RY", ryr);

#define revv               bgr = bg, brr = br, byr = by, grr = gr, gyr = gy, ryr = ry;
#define fallo              bg = dmm, br = dmm, by = dmm, gr = dmm, gy = dmm, ry = dmm;
#define rallo              bgr = dm, brr = dm, byr = dm, grr = dm, gyr = dm, ryr = dm;
#define ckk(str, bg, bgr)   if(a == str){ ans = min(ans, abs(bg[y] - y) + abs(bg[y] - x)); ans = min(ans, abs(bgr[y] - y) + abs(bgr[y] - x));}



#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;
const long long INF = M;
const int N = 0 + 10;

vector<int> dm(N, INF), dmm(1, INF);
vector<int> bg = dmm, br = dmm, by = dmm, gr = dmm, gy = dmm, ry = dmm;
vector<int> bgr = dm, brr = dm, byr = dm, grr = dm, gyr = dm, ryr = dm;
vin v;

vin com(string a, string b){
    vin v;
    sort(all(a)); sort(all(b));
    if(a > b)swap(a, b);
    string s1; s1.push_back(a[0]); s1.push_back(b[0]);
    string s2; s2.push_back(a[0]); s2.push_back(b[1]);
    string s3; s3.push_back(a[1]); s3.push_back(b[0]);
    string s4; s4.push_back(a[1]); s4.push_back(b[1]);
    v.push_back(s1); v.push_back(s2);
    v.push_back(s3); v.push_back(s4);
    return v;
}


int func(int x, int y){
    set<char>s;
    s.insert(v[x][0]); s.insert(v[x][1]); s.insert(v[y][0]); s.insert(v[y][1]);
    if(s.size() < 4)return y - x;
    vin str = com(v[x], v[y]);

    int ans = M;
    for(auto a : str){
        if(a == "BG"){ ans = min(ans, abs(bg[y] - y) + abs(bg[y] - x)); ans = min(ans, abs(bgr[y] - y) + abs(bgr[y] - x));}
        ckk("BG", bg, bgr);
        ckk("BR", br, brr);
        ckk("BY", by, byr);
        ckk("GR", gr, grr);
        ckk("GY", gy, gyr);
        ckk("RY", ry, ryr);

    }
    if(ans == M)return -1;
    return ans;
}

void sukuna(){
    v.clear(); fallo rallo

    int n,  q;
    cin >> n >>  q;
    v.push_back("");
    forn(i,n){
        string str; cin >> str;
        v.push_back(str);
    }
    condall rcondall

    while(q--){
        int x, y;
        cin >> x >> y;
        if(x > y)swap(x, y);
        cout<<func(x, y)<<endl;
    }

    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Concatenated_Multiples.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
int n, k;

int32_t main(){
    fast_in_out;
    cin >> n >> k;
    vin v(n);
    forn(i,n)cin >> v[i];
        
    
}

"/home/raihan/Desktop/Codeforces/D_Connected_Components.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, m;
vector<pr> edges;
class DFS{
    public:
        int  ans = 0;
        DFS(vector<vin> graph, int n){
            this->graph = graph;
            this->n = n;
            vis = vin (n + 1);
            calculate();
        }
    private:
        int n;
        vector<vin> graph;
        vin vis;

        
        void dfs(int vertex = 1, int par = -1){
            if(vis[vertex])return;
            vis[vertex] = true;

            for(auto child : graph[vertex]){
                if(vis[child])continue;
                dfs(child);
            }
        }

        void calculate(){
            for(int i = 1; i <= n; i++){
                if(vis[i])continue;
                dfs(i);
                ans++;
            }
        }
};

void solve(int l, int r){

    vector<vin> temp(n + 1);
    for(int i = 0; i < m; i++){
        if(i >= l && i <= r)continue;
        int x = edges[i].first;
        int y = edges[i].second;

        temp[x].push_back(y);
        temp[y].push_back(x);
    }

    DFS ob(temp, n);
    cout << ob.ans << endl;

}


int32_t main(){
    fast_in_out;
    cin >> n >> m;
    for(int i = 0; i < m; i++){
        int x, y;
        cin >> x >> y;
        edges.push_back({x, y});
    }
    

    lin(q)
    while(q--){
        int l, r;
        cin >> l >> r;
        solve(--l, --r);
    }
}

"/home/raihan/Desktop/Codeforces/D_Coprime.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    vin v(1001, 0);
    forn(i,n){
        lin(x);
        v[x] = i + 1;
    }
    int ans = -1;
    for(int i = 1; i < 1001; i++){
        if(v[i] == 0)continue;
        for(int j = i; j <= 1000; j++){
            if(v[j] && __gcd(i, j) == 1){
                ans = max(ans, v[i] + v[j]);
            }
        }
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Corrupted_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int n, m, sum = 0;
    cin >> n; m = n, n += 2;
    multiset<int> s;
    vin v(n);
    forn(i,n)cin >> v[i], s.insert(v[i]), sum += v[i];
    sort(all(v));
    sum -= v.back();
    s.erase(--s.end());

    for(int i = 0; i < n - 1; i++){
        if(sum - v[i] == v.back()){
            s.erase(s.find(v[i]));
            print(s);
            return;
        }
    }
    v.pop_back();
    sum -= v.back(); s.erase(--s.end());
    if(sum == v.back()){
        print(s);
        return;
    }

    cout<<-1<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Counting_Pairs.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    int n, x, y;
    cin >> n >> x >> y;
    vin v(n);
    forn(i,n)cin >> v[i];
    sort(all(v));

    int tot = accumulate(all(v), 0ll), ans = 0;
    // print(v);nl;

    for(int i = 0; i < n; i++){
        int l = tot - y - v[i];
        int r = tot - x - v[i];

        int lb = lower_bound(all(v), l) - v.begin();
        int up = upper_bound(all(v), r) - v.begin();
        if(lb <= i)lb = i + 1;
        if(up <= i)up = i + 1;
        // cout << l <<" " << r << endl;
        // cout << lb <<" " << up << endl;nl;
        ans += up - lb;
    }
    cout << ans << endl;

}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Co_growing_Sequence.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int op(int a, int b){
    // if(a > b)swap(a, b);
    bitset<31>x(a), y(b), temp(0);

    for(int i = 0; i < 31; i++){
        if(x[i]){
            if(!y[i])y[i] =  1;
        }
    }

    int ans = 0;
    for(int i = 0, bit = 1; i < 31; i++, bit <<= 1){
        if(y[i])ans += bit;
    }
    return ans ^ b;

}


void sukuna(){
    lin(n);
    vin v(n), ans(n);
    forn(i,n)cin >> v[i];

    for(int i = 1; i < n; i++){
        ans[i] = op(v[i - 1], v[i]);
        v[i] = v[i] ^ ans[i];
    }
    print(ans);
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Cyclic_Rotation.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n";
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin a(n), b(n), ans;
    forn(i,n)cin >> a[i];
    forn(i,n)cin >> b[i];

    stack<int> s;
    int i = 0, j = 0;

    for(;i < n;){
        if(a[i] == b[j]){
            ans.push_back(a[i]);
            i++; j++;
            continue;
        }
        if(s.empty()){
            s.push(a[i]);
            i++;
            continue;
        }

        // cout<<s.top()<<endl;

        if(s.top() == b[j]){
            if(a[i - 1] == s.top()){
                ans.push_back(s.top()); 
                s.pop();
                j++;
            }else{
                no;
                return;
            }
            continue;
        }
        s.push(a[i]); i++;
    }
    
    if(s.empty()){
        yes;
        return;
    }
    if(s.size() > 1){no; return;}
    if(b[j] == s.top() && a[i - 1] == s.top()){
        ans.push_back(s.top());
    }else {
        no;
        return;
    }
    if(b == ans)yes;
    else no;
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_D.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int n, w, b;

void sukuna(int test){
    cin >> n >> w >> b;
    int ans = 0;
    if(n == 0){
        cout << 1 << endl;
        return;
    }
    if(w == 0 and b == 0){
        if(n == 0)cout << 1 << endl;
        else cout << 0 << endl;
        return;
    }
    if(w < b)swap(w, b);
    if(w == 0 or b == 0){
        cout << 1 << endl;
        return;
    }
    
    for(int i = 0; i <= n; i++){
        int temp = n - (w * i);
        if(temp < 0)break;
        if(temp == 0){ans++; break;}
        if(temp % b == 0)ans++;
    }
    
    cout << ans << endl;
}

int32_t main(){
    fast_in_out;

    int test = 1;//   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Darius_Wisdom.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first + 1<<" "<<a.second + 1<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

//Eliminate 0 in front of 1
//Eliminate 1 in front of 2

void sukuna(int test){
    lin(n);
    vin v(n), pf(n);
    int one = 0, two = 0;
    map<int, set<int>>mp;
    forn(i,n){
        cin >> v[i];
        if(v[i] == 1)one++;
        if(v[i] == 2)two++;
    }
    rforn(i,n)mp[v[i]].insert(i);

    vector<pr> ans;



    // print(v);

    //Eliminate 1
    for(int i = n - 1; i >= 0; i--){
        if(v[i] == 2){two--; continue;}
        if(two == 0)break;

        if(v[i] == 1){two--;
            int j = *mp[2].begin();
            mp[2].erase(j);
            mp[2].insert(i);

            mp[1].erase(i);
            mp[1].insert(j);
            v[i] = 2; v[j] = 1;
            ans.push_back({i, j});
            continue;
        }

        int j = *mp[1].begin();
        mp[1].erase(j);
        mp[1].insert(i);

        mp[0].erase(i);
        mp[0].insert(j);
        
        ans.push_back({i, j});
        v[i] = 1; v[j] = 0;
        i++;
    }

    //Eliminate 0
    for(int i = n - 1; i >= 0; i--){
        if(v[i] == 1){one--; continue;}
        if(one == 0)break;
        if(v[i] == 2)continue;

        int j = *mp[1].begin();
        mp[1].erase(j);
        mp[1].insert(i);

        mp[0].erase(i);
        mp[0].insert(j);
        
        ans.push_back({i, j});
        v[i] = 1; v[j] = 0;
        one--;
    }

    // print(v);
    // print(mp[1]);    nl;

    cout << ans.size() << endl;
    mprint(ans);
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Decrease_the_Sum_of_Digits.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int sum(int n){
    int s = 0;
    while(n > 0)s += n% 10, n/=10;
    return s;
}

void sukuna(){
    int n, s;
    cin >> n >> s;
    
    int ans = 0, p = 1;
    while(sum(n) > s){
        while(sum(n) > s && n % (p * 10) != 0){
            n +=p;
            ans += p;
        }
        p *= 10;
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Deleting_Divisors.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"Alice\n"
#define no                 cout<<"Bob\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int cnt(int n){
    int ans = 0;
    while(n > 0){
        ans ++;
        n >>= 1;
    }
    return ans;
}

void sukuna(int test){
    lin(n);
    if(n & 1){no; return;}
    if(__builtin_popcount(n) == 1){
        if(cnt(n) % 2 == 1)yes;
        else no;
        return;
    }
    yes;
}

int32_t main(){
    fast_in_out;

    int test = 1;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Digital_string_maximization.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    string str;
    cin >> str;
    int n = str.size();

    for(int i = 0; i < n; i++){
        int nxt = min(n - 1, i + 8);
        int ind = -1, mx = str[i], cnt = 1;

        for(int j = i + 1; j <= nxt; j++){
            if(str[j] - cnt > mx){
                mx = str[j] - cnt;
                ind = j;
            }
            cnt++;
        }

        if(ind == -1)continue;
        for(int j = ind; j > i; j--){
            str[j] = str[j - 1];
        }
        str[i] = mx;
    }

    cout << str << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/D_Distance_in_Tree.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

vector<int> graph[N], vis(N), height(N), depth(N);
int n,m;

int dfs(int vertex, int par, int x){
    if(vis[vertex])return 0;
    if(x == m){
        // cout << vertex << endl;
        return 1;
    }

    int ans = 0;
    for(auto child : graph[vertex]){
        if(child == par)continue;

        ans += dfs(child, vertex, x + 1);
    }

    return ans;
}

void reset(){
    for(int i = 1; i <= n; i++){
        graph[i].clear();
        vis[i] = 0;
        height[i] = 0;
        depth[i] = 0;
    }
}
void sukuna(){
    cin >> n >> m;
    reset();
    for(int i = 0; i < n - 1; i++){
        int v1, v2;
        cin >> v1 >> v2;
        graph[v1].push_back(v2);
        graph[v2].push_back(v1);
    }

    int ans = 0;
    for(int i = 1; i <= n; i++){
        ans += dfs(i, 0, 0);
        vis[i] = true;
    }
    cout << ans << endl;

}

int32_t main(){
    fast_in_out;
    sukuna();  
    
}

"/home/raihan/Desktop/Codeforces/B_Even_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int main()
{
    fast_in_out;
    

    
    
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Even_Odd_Increments.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int n, q;
    cin >> n >> q;
    int even = 0, odd = 0, sum = 0;
    vin v(n);
    forn(i,n){
        cin >> v[i];
        if(v[i] & 1)odd++;
        else even++;
        sum += v[i];
    }

    while(q--){
        int c, x;
        cin >> c >> x;
        if(c == 1){
            sum += odd * x;
            if(x & 1)even += odd, odd = 0;
        }else{
            sum += even * x;
            if(x & 1)odd += even, even = 0;
        }

        cout<<sum<<endl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Everyone_Loves_Tres.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    if(n == 1 or n == 3){cout << -1 << endl; return;}
    if(n & 1){
        forn(i,n - 4)cout << 3;
        cout <<6366 << endl;
    }else{
        forn(i,n - 2)cout << 3;
        cout << 66 << endl;
    }
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Fedya_and_Maths.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

int binExp(int a, int b, int M){
    int ans = 1;
    while(b > 0){
        if(b & 1)ans = ((ans % M) * (a % M)) % M;
        b >>= 1;
        a = ((a % M) * (a % M)) % M;
    }
    return ans;
}

bool func(int M, string str){
    int sum = 0;
    for(int i = 0; i < str.size(); i++){
        int po = binExp(10, i, M);
        sum += (str[i] - '0') * po;
        sum %= M;
    }
    
    return sum % 4 == 0;
}

int32_t main(){
    fast_in_out;
    string str;
    cin >> str;
    reverse(all(str));

    bool ans = func(M + 4, str) | func(M, str);
    if(ans)cout << 4 ;
    else cout << 0;
       
}

"/home/raihan/Desktop/Codeforces/B_Fence.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int32_t main()
{
    fast_in_out;
    lin(n) lin(k)
    vin v(n);

    forn(i,n)cin>>v[i];
    int sum = 0, ind = 0, ans;
    forn(i,k)sum += v[i];
    ans = sum;


    for(int i = 0; i + k < n; i++){
        sum -= v[i];
        sum += v[i + k];
        if(sum < ans){
            ans = sum;
            ind = i + 1;
        }
    }
    cout<<ind + 1<<endl;
    
    
}

"/home/raihan/Desktop/Codeforces/B_Fibonaccharsis.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

int fib(int a, int b){
    if(a > b)return 1;
    return fib(b - a, a) + 1;
}

void sukuna(){
    int n, k;
    cin >> n >> k;
    int ans = 0;

    for(int i = (n + 1) / 2; i <= n; i++){
        if(fib(i, n) >= k)ans++;
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Fireworks.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    ll a,b,m;
    cin>>a>>b>>m;

    cout<<(m/a)+(m/b)+2;nl;
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Flip_the_Bits.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string aa, bb;
    cin >> aa >> bb;
    vin a(n), b(n), counter(n);
    for(int i = 0; i < n; i++){
        a[i] = aa[i] - 48;
        b[i] = bb[i] - 48;
    }
    if(a[0] == 0)counter[0]--;
    else counter[0]++;
    for(int i = 1; i < n; i++){
        if(a[i] == 0)counter[i]--;
        else counter[i]++;
        counter[i] += counter[i - 1];
    }

    int sw = 0;
    for(int i = n - 1; i >= 0; i--){
        if(sw & 1)a[i] = 1 - a[i];
        if(a[i] == b[i])continue;
        
        if(counter[i] != 0){
            no;
            return;
        }
        sw++;
    }
    yes;
    
    
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Following_the_String.cpp"
#include <iostream>
using namespace std;
int main()
{
    int test;
    cin >> test;
    while (test--)
    {
        int n, i,zero=0;
        cin >> n;
        int arr[n];
        for (i = 0; i < n; i++) cin >> arr[i];
        
        int ch[n];
        for(i=0;i<n;i++)ch[i]=97;


        for (i = 0; i < n; i++)
        {
            printf("%c",ch[arr[i]]);
            ch[arr[i]]++;
        }
        cout<<endl;
    }
}

"/home/raihan/Desktop/Codeforces/B_Forming_Triangles.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int N = 4e5;
vin sim(N);

void similar(){
    sim[3] = 1;
    for(int i = 4; i < N; i++){
        int add = (i - 1) * (i - 2) / 2;
        sim[i] = sim[i - 1] + add;
    }
}

void sukuna(){
    lin(n);
    vin v(n);
    map<int, int> m;
    forn(i,n){
        lin(x);
        m[x]++;
    }

    int ans = 0, pf = 0;

    for(auto a : m){
        ans += (a.second * (a.second - 1)) / 2 * pf;
        ans += sim[a.second];
        pf += a.second;
    }
    cout<<ans<<endl;   
}

int32_t main(){
    fast_in_out;
    similar();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Fun_with_Even_Subarrays.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    
    int x = v.back();
    int ans = 0, cnt = 0;

    for(int i = n - 1; i >= 0; i--){
        if(v[i] == x){cnt++; continue;}
        ans++;
        cnt <<= 1;
        i = n - cnt;
        if(i < 0)break;
    }
    cout<<ans<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Game_of_Ball_Passing.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    
        
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Game_with_Colored_Marbles.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    map<int, int> mp;
    forn(i,n){
        cin >> v[i];
        mp[v[i]]++;
    }

    int alice = 0, cnt = 0, bob = 0;
    bool flg = 0;

    for(auto i : mp){
        if(i.second > 1)continue;
        if(!flg)alice+= 2;
        else bob += 2;
        flg = !flg;
        i.second = 0;
        cnt++;
    }


    cout << alice + mp.size() - cnt << endl;
    
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_Game_with_Doors.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    int a, b, c, d;
    cin >> a >> b >> c >> d;
    int l = max(a, c), r = min(b, d);
    if(r < l){
        cout<<1<<endl;
        return;
    }
    int ans = r - l;
    if(b != d)ans++;
    if(a != c)ans++;
    cout<<ans<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/B_GCD_Partition.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;
bool isPrime[N];
vin prime;

void seive(){
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            for(int j = i * i; j < N; j += i){
                isPrime[j] = 1;
            }
        }
    }
    for(int i = 2; i < N; i++){
        if(!isPrime[i]){
            prime.pb(i);
        }
    }
}



void sukuna(){
    int n, sum = 0, ans = 1;
    cin >>  n;
    vin v(n);
    forn(i,n)cin >> v[i], sum += v[i];
    sort(all(v));
    vin k;
    for(int i = 0; prime[i] < n; i++){
        if(n % prime[i] == 0){
            k.push_back(prime[i]);
        }
    }

    print(k);
    
    
}

int32_t main(){
    fast_in_out;
    seive();

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Maximum_Increase.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define Forn(i,e)          for(ll i=1;i<=e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int32_t main()
{
    fast_in_out;
    lin(n);
    vin v(n);
    forn(i,n)cin>>v[i];

    int len = 1;
    for(int i = 0; i < n - 1; i++){
        int l = 1;

        for(; i < n - 1; i++){
            if(v[i + 1] <= v[i]){

                break;
            }
            l++;
        }
        len = max(l, len);
    }
    cout<<len<<endl;

}

"/home/raihan/Desktop/Codeforces/A_Max_Plus_Size.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    lin(n);
    vin v(n);
    forn(i,n)cin >> v[i];
    if(n % 2 == 0){
        cout << *max_element(all(v)) + (n / 2 ) << endl;
        return;
    }
    int ans = 0, mx = 0;
    for(int i = 0; i < n; i += 2){
        ans++;
        mx = max(mx, v[i]);
    }
    ans += mx;

    int ans2 = 0; mx = 0;

    for(int i = 1; i < n; i += 2){
        ans2++;
        mx = max(mx, v[i]);
    }
    ans2 += mx;
    ans = max(ans, ans2);
    cout<< ans << endl;
    
}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Meaning_Mean.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;
#define ttmp               template<class T>
#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

ttmp
void op(T &s){
    int oddcnt = 0, sum = 0;

    sum = *s.begin() + *++s.begin();
    s.erase(s.begin());
    s.erase(s.begin());
    s.insert(sum / 2);

}


void sukuna(){
    lin(n);
    multiset<int> s;
    forn(i,n){
        lin(x);
        s.insert(x);
    }
    while(s.size() > 1){
        op(s);
    }
    print(s);

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Median_of_an_Array.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    in(n);
    int i,m=n,cnt=0;
    vin v(n);
    forn(i,n)cin>>v[i];
    sort(v.begin(),v.end());
    if(n%2==1)m++;
    m=m/2;
    m--;
    for(i=m;i<n;i++)
    {
        if(v[m]==v[i])cnt++;
        else break;
    }
    cout<<cnt;nl;
    
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Medium_Number.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());

#define ff                 first
#define ss                 second
#define mmp                make_pair

#define sz(x)              ((ll)(x).size())
#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

int solve()
{
    vin v(3);
    forn(i,3)cin>>v[i];
    sort(v.begin(),v.end());
    cout<<v[1];nl;
    
    return 0;
}

int main()
{
    fast_in_out;

    int test;	cin>>test;
    while(test--)solve();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Meximum_Array.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n), rev_mex(n + 1), ans;
    set<int> s, temp;
    forn(i,n)cin >> v[i];
    for(int i = 0; i <= n; i++)s.insert(i);

    for(int i = n - 1; i >= 0; i--){
        if(s.count(v[i]))s.erase(v[i]);
        rev_mex[i] = *s.begin();
    }    

    for(int i = 0; i <= n; i++)s.insert(i);

    int target = rev_mex.front();
    for(int i = 0; i < n; i++){
        temp.insert(v[i]);
        if(s.count(v[i]))s.erase(v[i]);

        int cur_mex = *s.begin();
        
        if(cur_mex == target){
            ans.push_back(target);
            target = rev_mex[i + 1];
            for(auto j : temp)s.insert(j);
            temp.clear();
        }        
    }

    cout << ans.size() << endl;
    print(ans);

}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_MEX_Destruction.cpp"
#include<bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using u64 = uint64_t;
using u128 = __uint128_t;

#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define ppfr(v)            v.erase(v.begin());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
template <typename T>      using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(int test){
    lin(n);
    vin v(n);
    
    int cnt = 0;
    forn(i,n){cin >> v[i]; if(v[i] == 0)cnt++;}

    if(cnt == 0){
        cout << 1 << endl;
        return;
    }
    if(cnt == n){
        cout << 0 << endl;
        return;
    }

    int cnt2 = 0, cnt3 = 0;
    for(int i = 0; i < n; i++){
        if(v[i] != 0)break;
        cnt2++;
    }

    for(int i = n - 1; i >= 0; i--){
        if(v[i] != 0)break;
        cnt3++;
    }

    if(cnt == cnt2 or cnt == cnt3 or cnt == cnt2 + cnt3){
        cout << 1 << endl;
    }else cout << 2 << endl;


}

int32_t main(){
    fast_in_out;

    int test;   cin>>test;
    for(int i = 1; i <= test; i++)sukuna(i);
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Milica_and_String.cpp"
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n,k,i,B=0;
        cin>>n>>k;
        string str;
        cin>>str;
        for(i=0;i<n;i++)if(str[i]==66)B++;
        int a=0;
        if(B==k)cout<<"0\n";
        else if(B<k)
        {
            for(i=0;i<n;i++)
            {
                if(str[i]==65)a++;
                if(a==(k-B))break;
            }
            printf("1\n%d B\n",i+1);
        }
        else 
        {
            for(i=0;i<n;i++)
            {
                if(str[i]==66)a++;
                if(a==(B-k))break;
            }
            printf("1\n%d A\n",i+1);
        }

    }
}

"/home/raihan/Desktop/Codeforces/A_Min.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

#define forn(i,e) for(ll i=0;i<e;i++)
#define rforn(i,s) for(ll i=s-1;i>=0;i--)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
#define nl cout<<"\n"

int main()
{
    int n,k;
    cin>>n>>k;
    int x,i,ans=0;
    for(i=0;i<n;i++)
    {
        cin>>x;
    }

    for(i=0;n>1;)
    {
        if(n>k){
        ans=ans+(n/k);
        n=(n/k)+(n%k); }
        if(n<=k){ans++;break;}  
    }
    cout<<ans;

}



"/home/raihan/Desktop/Codeforces/A_Minimize.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second

#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;
#define mprint(mp)         for(auto a : mp)cout<<a.first<<" "<<a.second<<endl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;
const int N = 2e5 + 100;

void sukuna(){
    int a, b;
    cin >> a >> b;

    cout<<abs(a - b)<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Minimizing_the_String.cpp"
#include<bits/stdc++.h>
using namespace std;

int main(){
    int n; string str;
    cin >> n >> str;
    int ind = n - 1;
    for(int i = 0; i < n - 1; i++){
        if(str[i + 1] < str[i]){
            ind = i;
            break;
        }
    }
    for(int i = 0; i < n; i++){
        if(i == ind)continue;
        cout << str[i];
    }
    cout << endl;

}

"/home/raihan/Desktop/Codeforces/A_Minutes_Before_the_New_Year.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int M = 1e9 + 7;

void sukuna(){
    int x, y;
    cin >> x >> y;
    int n = x * 60 + y;
    cout << 24 * 60 - n<<endl;
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}

"/home/raihan/Desktop/Codeforces/A_Modular_Exponentiation.cpp"
#include<bits/stdc++.h>
using namespace std;

#define int long long
const int M = 1e9 + 7;
const int N = 2e5 + 10;

int bitCnt(int n){
    int ans = 0;
    while(n > 0){
        n >>= 1;
        ans++;
    }
    return ans;
}

int32_t main(){
    int n, m;
    cin >> n >> m;
    if(bitCnt(m) < n){
        cout << m << endl;
        return 0;
    }
    n = (1ll<<n);
    cout << m % n << endl;
}

"/home/raihan/Desktop/Codeforces/A_Moving_Chips.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;

#define forn(i,e)          for(ll i=0;i<e;i++)
#define rforn(i,s)         for(ll i=s-1;i>=0;i--)
#define yes                cout<<"YES"<<endl
#define no                 cout<<"NO"<<endl
#define pb                 push_back
#define pp                 pop_back
#define nl                 cout<<"\n"
#define sz(x)              ((ll)(x).size())
 
 
int main()
{
    int test; cin>>test;
    while(test--)
    {
        int n,i;
        cin>>n;
        int arr[n];
        int one=0,zero=0,f,l;
        for(i=0;i<n;i++)
        {
            cin>>arr[i];
            if(arr[i]==1)one++;
        }
        for(i=0;i<n;i++)
        {
            if(arr[i]==1)break;
        }f=i;

        for(i=n-1;i>=0;i--)if(arr[i]==1)break;
        l=i;

        for(i=f;i<=l;i++)if(arr[i]==0)zero++;

        cout<<zero;

        nl;
    }
    return 0;
}


//Thanks for watching

"/home/raihan/Desktop/Codeforces/A_Musical_Puzzle.cpp"
#include<bits/stdc++.h>
using namespace std;

typedef                    long long ll;
typedef                    long double ld;
#define int                long long

#define yes                cout<<"YES\n"
#define no                 cout<<"NO\n"
#define nl                 cout<<"\n"
#define endl               "\n"

#define lin(n)             ll n;cin>>n;
#define in(n)              int n;cin>>n;
#define vin                vector<int>
#define pr                 pair<int, int>
#define pb(n)              push_back(n)
#define pp                 pop_back()
#define srt(v)             sort(v.begin(),v.end());
#define all(x)             x.begin(),x.end()

#define fi                 first
#define se                 second
#define mmp                make_pair

#define sz(x)              ((int)(x).size())
#define forn(i,e)          for(int i=0;i<e;i++)
#define Forn(i,e)          for(int i=1;i<=e;i++)
#define rforn(i,s)         for(int i=s-1;i>=0;i--)
#define print(arr)         for(auto x: arr)cout<<x<<" ";nl;

#define fast_in_out        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const long long INF = 1e18;
const int M = 1e9 + 7;

void sukuna(){
    lin(n);
    string str;
    cin >> str;
    set<string> s;
    for(int i = 0; i < n - 1; i++){
        string ss; 
        ss.push_back(str[i]);
        ss.pb(str[i + 1]);
        s.insert(ss);
    }

    cout<<s.size()<<endl;
    
}

int32_t main(){
    fast_in_out;

    int test;	cin>>test;
    while(test--)sukuna();
    return 0;
}